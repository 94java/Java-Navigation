import{_ as h}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,a as s,b as a,d as l,w as e,e as n,r as i}from"./app.06c65d72.js";const c={},m=n('<h1 id="一-计算机网络概述" tabindex="-1"><a class="header-anchor" href="#一-计算机网络概述" aria-hidden="true">#</a> （一）计算机网络概述</h1><h2 id="_1-计算机网络在信息时代的作用" tabindex="-1"><a class="header-anchor" href="#_1-计算机网络在信息时代的作用" aria-hidden="true">#</a> 1. 计算机网络在信息时代的作用</h2><ul><li>计算机网络已由一种通信基础设施发展成为一种重要的信息服务基础设施。</li><li>计算机网络已经像水、电、煤气这些基础设施一样，成为我们生活中不可或缺的一部分。</li></ul><h2 id="_2-因特网概述" tabindex="-1"><a class="header-anchor" href="#_2-因特网概述" aria-hidden="true">#</a> 2. 因特网概述</h2><h3 id="_2-1-网络、互连网-互联网-和因特网" tabindex="-1"><a class="header-anchor" href="#_2-1-网络、互连网-互联网-和因特网" aria-hidden="true">#</a> 2.1 网络、互连网(互联网)和因特网</h3><ol><li><p>网络(Network)由若干结点(Node)和连接这些结点的链路(Link)组成。</p></li><li><p>多个网络还可以通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即互联网（或互连网)因此，互联网是“网络的网络(Netwrok of Networks) &quot;。</p></li><li><p>因特网(Internet)是世界上最大的互连网络（用户数以亿计，互连的网络数以百万计)。</p></li><li><p>internet与lnternet的区别<br><strong>internet(互联网或互连网)</strong> 是一个通用名词，它泛指由多个计算机网络互连而成的网络。在这些网络之间的通信协议可以是任意的。<br><strong>Internet(因特网)</strong> 则是一个专用名词，它指当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络，它采用TCP/IP协议族作为通信的规则，其前身是美国的 <strong>ARPANET</strong>。</p></li></ol><h3 id="_2-2-因特网发展的三个阶段" tabindex="-1"><a class="header-anchor" href="#_2-2-因特网发展的三个阶段" aria-hidden="true">#</a> 2.2 因特网发展的三个阶段</h3><h4 id="_1-从单个网络arpanet向互联网发展" tabindex="-1"><a class="header-anchor" href="#_1-从单个网络arpanet向互联网发展" aria-hidden="true">#</a> 1. 从单个网络ARPANET向互联网发展</h4><ul><li>1969年，第一个分组交换网 <strong>ARPANET</strong>;</li><li>70年代中期，研究多种网络之间的互连;</li><li>1983年,TCP/IP协议成为ARPANET的标准协议(因特网诞生时间)</li></ul><h4 id="_2-逐步建成三级结构的因特网" tabindex="-1"><a class="header-anchor" href="#_2-逐步建成三级结构的因特网" aria-hidden="true">#</a> 2. 逐步建成三级结构的因特网</h4><ul><li>1985年，NSF围绕六个大型计算机中心建设NSFNET（主干网、地区网和校园网）;</li><li>1990年，ARPANET任务完成，正式关闭;</li><li>1991年，美国政府将因特网主干网交给私人公司经营，并开始对接入因特网的单位收费;</li></ul><h4 id="_3-多层次isp结构的因特网" tabindex="-1"><a class="header-anchor" href="#_3-多层次isp结构的因特网" aria-hidden="true">#</a> 3. 多层次ISP结构的因特网</h4><ul><li>1993年，NSFNET逐渐被若干个商用因特网主干网替代;政府机构不再负责因特网运营，让各种因特网服务提供者ISP来运营。</li><li>1994年，万维网wwW技术促使因特网迅猛发展;</li><li>1995年，NSFNET停止运作，因特网彻底商业化。</li></ul><blockquote><p>ISP: 因特网服务提供者ISP（Internet Service Provider）</p></blockquote><h3 id="_2-3-因特网的标准化工作" tabindex="-1"><a class="header-anchor" href="#_2-3-因特网的标准化工作" aria-hidden="true">#</a> 2.3 因特网的标准化工作</h3>',15),d=s("li",null,[s("p",null,"因特网的标准化工作对因特网的发展起到了非常重要的作用。")],-1),g=s("p",null,"因特网在制定其标准上的一个很大的特点是面向公众。",-1),u={href:"http://www.ietf.org/rfc.html",target:"_blank",rel:"noopener noreferrer"},_=s("li",null,"任何人都可以随时用电子邮件发表对某个文档的意见或建议。",-1),y=n("<li><p>因特网协会ISOC是一个国际性组织，它负责对因特网进行全面管理，以及在世界范围内促进其发展和使用。</p><ul><li>因特网体系结构委员会IAB，负责管理因特网有关协议的开发;</li><li>因特网工程部IETF，负责研究中短期工程问题，主要针对协议的开发和标准化;</li><li>因特网研究部IRTF，从事理论方面的研究和开发一些需要长期考虑的问题。</li></ul></li><li><p>制订因特网的正式标准要经过以下4个阶段:</p><ol><li>因特网草案(在这个阶段还不是RFC文档)</li><li>建议标准 (从这个阶段开始就成为RFC文档)</li><li>草案标准 (目前已取消)</li><li>因特网标准</li></ol></li>",2),b=n(`<h3 id="_2-4-因特网组成" tabindex="-1"><a class="header-anchor" href="#_2-4-因特网组成" aria-hidden="true">#</a> 2.4 因特网组成</h3><p>因特网由边缘部分和核心部分组成。</p><h4 id="_1-边缘部分" tabindex="-1"><a class="header-anchor" href="#_1-边缘部分" aria-hidden="true">#</a> 1. 边缘部分</h4><p>由所有连接在因特网上的 <strong>主机</strong> 组成。这部分是 <strong>用户直接</strong> 使用的，用来进行 <strong>通信</strong> （传送数据、音频或视频）和 <strong>资源共享</strong></p><h4 id="_2-核心部分" tabindex="-1"><a class="header-anchor" href="#_2-核心部分" aria-hidden="true">#</a> 2. 核心部分</h4><p>由 <strong>大量网络</strong> 和连接这些网络的 <strong>路由器</strong> 组成。这部分是 <strong>为边缘部分提供服务</strong> 的(提供连通性和交换)</p><h2 id="_3-三种交换方式" tabindex="-1"><a class="header-anchor" href="#_3-三种交换方式" aria-hidden="true">#</a> 3. 三种交换方式</h2><ul><li>电路交换（Circuit Switching）</li><li>分组交换（Packet Switching）</li><li>报文交换（Message Switching）</li></ul><h3 id="_3-1-电路交换" tabindex="-1"><a class="header-anchor" href="#_3-1-电路交换" aria-hidden="true">#</a> 3.1 电路交换</h3><p>电话交换机接通电话线的方式称为电路交换;</p><p>从通信资源的分配角度来看，交换(Switching）就是按照某种方式动态地分配传输线路的资源;</p><p>电路交换的三个步骤：</p><ol><li>建立连接（分配通信资源)</li><li>通话（一直占用通信资源)</li><li>释放连接（归还通信资源)</li></ol><p><img src="http://images.hellocode.top/cHS0Bt.png" alt="" loading="lazy"></p><blockquote><p>当使用电路交换来传送计算机数据时, 其线路的传输效率往往很低。</p></blockquote><h3 id="_3-2-分组交换" tabindex="-1"><a class="header-anchor" href="#_3-2-分组交换" aria-hidden="true">#</a> 3.2 分组交换</h3><p><img src="http://images.hellocode.top/cHa3hq.png" alt="" loading="lazy"></p><h3 id="_3-3-报文交换" tabindex="-1"><a class="header-anchor" href="#_3-3-报文交换" aria-hidden="true">#</a> 3.3 报文交换</h3><p>报文交换对报文的大小没有限制，这就要求结点有较大的缓存空间。报文交换主要用于早期的电报通信网，现在较少使用。通常被较先进的分组交换方式所替代。</p><h3 id="_3-4-三种方式对比" tabindex="-1"><a class="header-anchor" href="#_3-4-三种方式对比" aria-hidden="true">#</a> 3.4 三种方式对比</h3><p><img src="http://images.hellocode.top/cHB92t.png" alt="" loading="lazy"></p><h2 id="_4-计算机网络的定义和分类" tabindex="-1"><a class="header-anchor" href="#_4-计算机网络的定义和分类" aria-hidden="true">#</a> 4. 计算机网络的定义和分类</h2><h3 id="_4-1-计算机网络的定义" tabindex="-1"><a class="header-anchor" href="#_4-1-计算机网络的定义" aria-hidden="true">#</a> 4.1 计算机网络的定义</h3><ul><li>计算机网络的精确定义并未统一</li><li>计算机网络的最简单的定义是: 一些 <strong>互相连接</strong> 的、<strong>自治</strong> 的计算机的 <strong>集合</strong>。 <ul><li><strong>互连</strong> 是指计算机之间可以通过有线或无线的方式进行数据通信</li><li><strong>自治</strong> 是指独立的计算机，它有自己的硬件和软件，可以单独运行使用</li><li><strong>集合</strong> 是指至少需要两台计算机</li></ul></li><li><strong>计算机网络的较好的定义</strong> 是: 计算机网络主要是由一些 <strong>通用的、可编程的硬件互连</strong> 而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号)。这些可编程的硬件能够用来 <strong>传送多种不同类型的数据</strong>，并能 <strong>支持广泛的和日益增长的应用</strong>。 该定义表明： <ul><li>计算机网络所连接的硬件，并不限于一般的计算机，而是包括了智能手机等智能硬件。</li><li>计算机网络并非专门用来传送数据，而是能够支持很多种的应用（包括今后可能出现的各种应用)</li></ul></li></ul><blockquote><p>以下系统并不是一个计算机网络。 因为图示终端机只是具有显示和输入设备的终端，不是自治的计算机。因此，这只是一个运行分时系统的大型机系统。</p><img src="http://images.hellocode.top/cHrFAg.png" alt="大型机" style="zoom:50%;"></blockquote><h3 id="_4-2-计算机网络的分类" tabindex="-1"><a class="header-anchor" href="#_4-2-计算机网络的分类" aria-hidden="true">#</a> 4.2 计算机网络的分类</h3><ol><li>按照交换技术分类 <ul><li>电路交换网络</li><li>报文交换电路</li><li>分组交换电路</li></ul></li><li>按使用者分类 <ul><li>公用网</li><li>专用网</li></ul></li><li>按照传输介质分类 <ul><li>有线网</li><li>无线网</li></ul></li><li>按覆盖范围分类 <ul><li>广域网 WAN</li><li>城域网 MAN</li><li>局域网 LAN</li><li>个域网 PAN</li></ul></li><li>按拓扑结构分类 <ul><li>总线型网络</li><li>星型网络</li><li>环型网络</li><li>网状型网络</li></ul></li></ol><h2 id="_5-计算机网络的性能指标" tabindex="-1"><a class="header-anchor" href="#_5-计算机网络的性能指标" aria-hidden="true">#</a> 5. 计算机网络的性能指标</h2><h3 id="_5-1-常用性能指标" tabindex="-1"><a class="header-anchor" href="#_5-1-常用性能指标" aria-hidden="true">#</a> 5.1 常用性能指标</h3><p>性能指标可以从不同的方面来度量计算机网络的性能。 常用的计算机网络的性能指标有以下8个:</p><ul><li>速率</li><li>带宽</li><li>吞吐量</li><li>时延</li><li>时延带宽积</li><li>往返时间</li><li>利用率</li><li>丢包率</li></ul><h3 id="_5-2-速率" tabindex="-1"><a class="header-anchor" href="#_5-2-速率" aria-hidden="true">#</a> 5.2 速率</h3><h4 id="_1-比特" tabindex="-1"><a class="header-anchor" href="#_1-比特" aria-hidden="true">#</a> 1. 比特</h4><p>计算机中 <strong>数据量的单位</strong>，也是信息论中信息量的单位。一个比特就是二进制数字中的一个 <code>1</code> 或 <code>0</code>。</p><p>常用数据量单位:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>8 bit = 1 Byte  
KB = 2^10B  
MB = K·KB = 2^10·2^10 B = 2^20 B  
GB = K·MB = 2^10·2^20 B = 2^30 B  
TB = K·GB = 2^10·2^30 B = 2^40 B  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-速率" tabindex="-1"><a class="header-anchor" href="#_2-速率" aria-hidden="true">#</a> 2. 速率</h4><p>连接在计算机网络上的主机在数字信道上传送比特的速率，也称为 <strong>比特率</strong> 或 <strong>数据率</strong>。</p><p>常用数据单位：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bit/s (b/s，bps)  
kb/s = 10^3 b/s (bps)    
Mb/s = k·kb/s = 10^3·10^3 bls = 10^6 b/s (bps)   
Gb/s = k·Mb/s = 10^3·10^6 b/s = 10 b/s (bps)    
Tb/s = k·Gb/s = 10^3·10^9 b/s = 10^2 b/s (bps)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例1∶有一个待发送的数据块，大小为100 MB，网卡的发送速率为100 Mbps，则网卡发送完该数据块需要多长时间?</p>`,41),x=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mn",null,"100"),s("mi",null,"M"),s("mi",null,"B")]),s("mrow",null,[s("mn",null,"100"),s("mi",null,"M"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")])]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"M"),s("mi",null,"B")]),s("mrow",null,[s("mi",null,"M"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")])]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"20")]),s("mi",null,"B")]),s("mrow",null,[s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"6")]),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")])]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"20")]),s("mo",null,"⋅"),s("mrow",null,[s("mn",null,"8"),s("mi",null,"b")])]),s("mrow",null,[s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"6")]),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")])]),s("mo",null,"="),s("mn",null,"8.388608"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"}," T=\\frac{100MB}{100Mb/s}=\\frac{MB}{Mb/s}=\\frac{2^{20}B}{10^6b/s}=\\frac{2^{20}\\cdot{8b}}{10^6b/s}=8.388608 s ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.2963em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"100"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"100"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"MB")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.2963em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"MB")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4271em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.4911em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"6")])])])])])])]),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"20")])])])])])])])]),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4271em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.4911em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"6")])])])])])])]),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"20")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"8"),s("span",{class:"mord mathnormal"},"b")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"8.388608"),s("span",{class:"mord mathnormal"},"s")])])])])],-1),v=n('<h3 id="_5-3-带宽" tabindex="-1"><a class="header-anchor" href="#_5-3-带宽" aria-hidden="true">#</a> 5.3 带宽</h3><p>带宽在模拟信号系统中的意义：信号所包含的各种不同频率成分所占据的频率范围。</p><p><strong>带宽在计算机网络中的意义</strong>：用来表示网络的通信线路所能传送数据的能力，因此网络带宽表示在单位时间内从网络中的某一点到另一点所能通过的 <strong>“最高数据率”</strong>。<br> 单位：b/s, (kb/s, Mb/s, Gb/s, Tb/s)</p><p><strong>其实,“带宽”的这两种表述之间有着密切的联系。一条通信线路的“频带宽度”越宽,其所传输数据的“最高数据率”也越高。</strong></p><h3 id="_5-4-吞吐量" tabindex="-1"><a class="header-anchor" href="#_5-4-吞吐量" aria-hidden="true">#</a> 5.4 吞吐量</h3><ul><li>吞吐量表示在单位时间内 <strong>通过某个网络(或信道、接口)的数据量。</strong></li><li>吞吐量被经常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。</li><li>吞吐量受 <strong>网络的带宽或额定速率</strong> 的限制。</li></ul><h3 id="_5-5-时延" tabindex="-1"><a class="header-anchor" href="#_5-5-时延" aria-hidden="true">#</a> 5.5 时延</h3>',7),f=s("h4",{id:"_1-发送时延",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-发送时延","aria-hidden":"true"},"#"),a(" 1. 发送时延")],-1),z=s("p",null,[a("发送速率受 "),s("strong",null,"网卡的发送速率"),a(" 、"),s("strong",null,"信道带宽"),a("、"),s("strong",null,"接口速率"),a(" 影响。")],-1),w=s("h4",{id:"_2-传播时延",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-传播时延","aria-hidden":"true"},"#"),a(" 2. 传播时延")],-1),k=s("p",null,[a("电磁波在 "),s("strong",null,"自由空间"),a(" 的传播速率 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mo",null,"="),s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"8")]),s("mi",null,"m"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"v=3\\times10^8 m/s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"8")])])])])])])]),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])])]),s("br"),a(" 在铜线中："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mo",null,"="),s("mn",null,"2.3"),s("mo",null,"×"),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"8")]),s("mi",null,"m"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"v=2.3\\times10^8 m/s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2.3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"8")])])])])])])]),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])])]),s("br"),a(" 在光纤中："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mo",null,"="),s("mn",null,"2.0"),s("mo",null,"×"),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"8")]),s("mi",null,"m"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"v=2.0\\times10^8 m/s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2.0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"8")])])])])])])]),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])])])],-1),M=n('<p><strong>要计算传播时延，先确定传播媒体。</strong></p><h4 id="_3-处理时延" tabindex="-1"><a class="header-anchor" href="#_3-处理时延" aria-hidden="true">#</a> 3. 处理时延</h4><p>不方便计算。</p><blockquote><p>发送时延占主导还是传播时延占主导，要根据具体例子实际分析。</p></blockquote><p><img src="http://images.hellocode.top/8.3kyea9o0f1y0.png" alt="8" loading="lazy"></p><h3 id="_5-6-时延带宽积" tabindex="-1"><a class="header-anchor" href="#_5-6-时延带宽积" aria-hidden="true">#</a> 5.6 时延带宽积</h3>',6),A=n('<ul><li>若发送端连续发送数据，则在所发送的第一个比特即将到达终点时，发送端就已经发送了时延带宽积个比特</li><li>链路的时延带宽积又称为 <strong>以比特为单位的链路长度</strong>。</li></ul><h3 id="_5-7-往返时间rtt" tabindex="-1"><a class="header-anchor" href="#_5-7-往返时间rtt" aria-hidden="true">#</a> 5.7 往返时间RTT</h3><ul><li><strong>从发送端发送信息开始，到发送端接收到来自接受端发送的确认信息，称为往返时间RTT。</strong></li><li>在许多情况下，因特网上的信息不仅仅单方向传输，而是双向交互</li><li>我们有时很需要知道双向交互一次所需的时间;</li><li>因此，往返时间 RTT(Round-Trip Time)也是一个重要的性能指标。</li></ul><h3 id="_5-8-利用率" tabindex="-1"><a class="header-anchor" href="#_5-8-利用率" aria-hidden="true">#</a> 5.8 利用率</h3><p>利用率分类为 <strong>信道利用率</strong> 和 <strong>网络利用率</strong></p><ul><li>信道利用率：用来表示某信道有百分之几的时间是被利用的（有数据通过)</li><li>网络利用率：全网络的信道利用率的加权平均</li></ul><p>根据排队论，<strong>当某信道的利用率增大时，该信道引起的时延也会迅速增加</strong>。</p><p>如果令：</p>',8),C=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"D_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("：网络空闲时延")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"D")]),s("annotation",{encoding:"application/x-tex"},"D")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D")])])]),a("：网络当前时延")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"U")]),s("annotation",{encoding:"application/x-tex"},"U")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U")])])]),a("：利用率")])],-1),T=s("p",null,"那么则有下列关系：",-1),P=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"D"),s("mo",null,"="),s("mfrac",null,[s("msub",null,[s("mi",null,"D"),s("mn",null,"0")]),s("mrow",null,[s("mn",null,"1"),s("mo",null,"−"),s("mi",null,"U")])])]),s("annotation",{encoding:"application/x-tex"}," D=\\frac{D_0}{1-U} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.1297em","vertical-align":"-0.7693em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7693em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),q=n('<p><img src="http://images.hellocode.top/9.18qe7kk628jk.png" alt="9" loading="lazy"></p><ul><li>当网络的利用率达到50%时，时延就要加倍</li><li>当网络的利用率超过50%时，时延急剧增大</li><li>当网络的利用率接近100%时，时延就趋于无穷大</li><li>因此，一些拥有较大主干网的ISP通常会控制它们的信道利用率不超过50%。如果超过了，就要准备扩容，增大线路的带宽</li></ul><p>也不能使信道利用率太低，这会使宝贵的通信资源被白白浪费。应该使用一些机制，可以根据情况动态调整输入到网络中的通信量，使网络利用率保持在合理范围内。</p><h3 id="_5-9-丢包率" tabindex="-1"><a class="header-anchor" href="#_5-9-丢包率" aria-hidden="true">#</a> 5.9 丢包率</h3><ol><li>丢包率即分组丢失率，是指在一定的时间范围内，传输过程中 <strong>丢失的分组数量与总分组数量的比率</strong>。</li><li>丢包率具体可分为接口丢包率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。</li><li>丢包率是 <strong>网络运维人员</strong> 非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。</li><li>分组丢失主要有两种情况: <ul><li>分组在传输过程中出现 <strong>误码</strong>，被结点丢弃;</li><li>分组到达一台队列已满的分组交换机时被丢弃;</li><li>在通信量较大时就可能造成 <strong>网络拥塞</strong>。</li></ul></li><li>因此，丢包率反映了网络的拥塞情况: <ul><li>无拥塞时路径丢包率为0</li><li>轻度拥塞时路径丢包率为1%~4%</li><li>严重拥塞时路径丢包率为5%~15%</li></ul></li></ol><h2 id="_6-计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#_6-计算机网络体系结构" aria-hidden="true">#</a> 6. 计算机网络体系结构</h2><h3 id="_6-1-常见的计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#_6-1-常见的计算机网络体系结构" aria-hidden="true">#</a> 6.1 常见的计算机网络体系结构</h3><ul><li>常见网络体系结构--&gt;OSI体系结构</li><li>常见网络体系结构--&gt;TCP/IP体系结构</li><li>OSI体系结构--&gt;五层协议结构</li><li>TCP/IP体系结构--&gt;五层协议结构</li></ul><h4 id="_1-osi体系结构" tabindex="-1"><a class="header-anchor" href="#_1-osi体系结构" aria-hidden="true">#</a> 1. OSI体系结构</h4><p>法律上的国际标准时 OSI 七层体系结构，但由于专家却反实际经验、分层过于复杂、指定周期长、层次划分不合理等原因，并没有投入实际引用。</p><h4 id="_2-tcp-ip体系结构" tabindex="-1"><a class="header-anchor" href="#_2-tcp-ip体系结构" aria-hidden="true">#</a> 2. TCP/IP体系结构</h4><p><img src="http://images.hellocode.top/11.7jg9trjr19c0.png" alt="11" loading="lazy"></p><h4 id="_3-五层协议体系结构" tabindex="-1"><a class="header-anchor" href="#_3-五层协议体系结构" aria-hidden="true">#</a> 3. 五层协议体系结构</h4><p>结合了 OSI 和 TCP/IP 的特点，一般用于学习。</p><p><img src="http://images.hellocode.top/10.6tklu3mmr7c0.png" alt="10" loading="lazy"></p><h3 id="_6-2-计算机网络体系结构分层的必要性" tabindex="-1"><a class="header-anchor" href="#_6-2-计算机网络体系结构分层的必要性" aria-hidden="true">#</a> 6.2 计算机网络体系结构分层的必要性</h3><ul><li><strong>计算机网络是个非常复杂的系统</strong>。早在最初的ARPANET设计时就提出了分层的设计理念。</li><li><strong>&quot;分层&quot;</strong> 可将庞大而复杂的问题，转化为若干较小的局部问题，而这些较小的局部问题就比较易于研究和处理。</li></ul><p>下面按照由简单到复杂的顺序，来看看实现计算机网络要面临哪些主要的问题，以及如何将这些问题划分到相应的层次，层层处理。</p><p><img src="http://images.hellocode.top/12.2ax7qe9se84.png" alt="12" loading="lazy"></p><h3 id="_6-3-计算机网络体系结构分层思想举例" tabindex="-1"><a class="header-anchor" href="#_6-3-计算机网络体系结构分层思想举例" aria-hidden="true">#</a> 6.3 计算机网络体系结构分层思想举例</h3><p><img src="http://images.hellocode.top/1.9p63ey33olk.jpg" alt="1" loading="lazy"></p><h3 id="_6-4-计算机网络体系结构中的专用术语" tabindex="-1"><a class="header-anchor" href="#_6-4-计算机网络体系结构中的专用术语" aria-hidden="true">#</a> 6.4 计算机网络体系结构中的专用术语</h3><h4 id="_1-实体" tabindex="-1"><a class="header-anchor" href="#_1-实体" aria-hidden="true">#</a> 1. 实体</h4><p>实体：任何可发送或接受信息的 <strong>硬件</strong> 或 <strong>软件进程</strong>。<br> 对等实体：收发双方 <strong>相同层次中的实体</strong>。</p><p><img src="http://images.hellocode.top/1.4woox10eux60.png" alt="1" loading="lazy"></p><h4 id="_2-协议" tabindex="-1"><a class="header-anchor" href="#_2-协议" aria-hidden="true">#</a> 2. 协议</h4><p>协议：控制两个对等实体进行逻辑通信的规则的集合。协议的三要素：语法、语义、同步</p><ul><li>语法：定义所交换信息的格式</li><li>语义：定义收发双方所要完成的操作</li><li>同步：定义收发双方的时序关系</li></ul><p><img src="http://images.hellocode.top/2.3avcyll0vd40.png" alt="" loading="lazy"></p><ul><li>在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务。</li><li>要实现本层协议，还需要使用下面一层所提供的服务。</li><li><strong>协议是“水平的”，服务是“垂直的”。</strong></li><li>实体看得见相邻下层所提供的服务，但并不知道实现该服务的具体协议。也就是说，下面的协议对上面的实体是 <strong>&quot;透明&quot;</strong> 的。</li></ul><h4 id="_3-服务" tabindex="-1"><a class="header-anchor" href="#_3-服务" aria-hidden="true">#</a> 3. 服务</h4><ul><li><strong>服务访问点</strong>：在同一系统中相邻两层的实体交换信息的逻辑接口，用于区分不同的服务类型。 <ul><li>数据链路层的服务访问点为帧的“类型”字段。</li><li>网络层的服务访问点为IP数据报首部中的“协议字段”。</li><li><strong>运输层的服务访问点为“端口号”。</strong></li></ul></li><li><strong>服务原语</strong>：上层使用下层所提供的服务必须通过与下层交换一些命令，这些命令称为服务原语。</li><li><strong>协议数据单元PDU</strong>：对等层次之间传送的数据包称为该层的协议数据单元。</li><li><strong>服务数据单元SDU</strong>：同一系统内，层与层之间交换的数据包称为服务数据单元。</li><li>多个SDU可以合成为一个PDU，一个SDU也可划分为几个PDU。</li></ul><p><img src="http://images.hellocode.top/4.4185qagvpxu0.png" alt="4" loading="lazy"></p><h2 id="_7-总时延计算" tabindex="-1"><a class="header-anchor" href="#_7-总时延计算" aria-hidden="true">#</a> 7. 总时延计算</h2>',34),D=s("p",null,[a("假设:分组等长，各链路长度相同、带宽也相同，忽略路由器的处理时延。"),s("br"),a(" 若有 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 个分组，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" 段链路，则总时延计算公式为：")],-1),I=s("p",null,"设：",-1),L=s("ul",null,[s("li",null,[a("总时延："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])])]),s("li",null,[a("一个分组的发送时延："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"t_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])]),s("li",null,[a("一段链路的传播时延："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"s")])]),s("annotation",{encoding:"application/x-tex"},"t_s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),N=s("p",null,"则有：",-1),R=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T"),s("mo",null,"="),s("mi",null,"n"),s("mo",null,"×"),s("msub",null,[s("mi",null,"t"),s("mn",null,"0")]),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("msub",null,[s("mi",null,"t"),s("mn",null,"0")]),s("mo",null,"+"),s("mi",null,"m"),s("mo",null,"×"),s("msub",null,[s("mi",null,"t"),s("mi",null,"s")])]),s("annotation",{encoding:"application/x-tex"}," T=n \\times t_0 + (m-1) \\times t_0 + m \\times t_s ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),S=s("blockquote",null,[s("p",null,[a("公式理解：除了 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mo",null,"×"),s("msub",null,[s("mi",null,"t"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"n \\times t_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("，其他都只计算最后一个分组。")])],-1),V=n('<p><strong>注意</strong></p><blockquote><p>注意题目中，分组文件大小和分组头大小的区分。转发过程中，会给分组加上分组头。</p></blockquote><h1 id="二-物理层" tabindex="-1"><a class="header-anchor" href="#二-物理层" aria-hidden="true">#</a> （二）物理层</h1><h2 id="_1-物理层基本概念" tabindex="-1"><a class="header-anchor" href="#_1-物理层基本概念" aria-hidden="true">#</a> 1. 物理层基本概念</h2><ul><li>物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流。</li><li>物理层为数据链路层屏蔽了各种传输媒体的差异，使数据链路层只需要考虑如何完成本层的协议和服务，而不必考虑网络具体的传输媒体是什么。</li><li>物理层协议的主要任务：<strong>机械特性、电气特性、功能特性、过程特性</strong></li><li>传输媒体不属于任何一层，如果一定要分类，则属于物理层</li><li>传输媒体 <ul><li>导引型传输媒体 <ul><li>同轴电缆</li><li>双绞线</li><li>光纤</li></ul></li><li>非导引型传输媒体：微波通信</li></ul></li></ul><p><img src="http://images.hellocode.top/2-1.6szqcx8du700.png" alt="2-1" loading="lazy"></p><h2 id="_2-物理层下面的传输媒体" tabindex="-1"><a class="header-anchor" href="#_2-物理层下面的传输媒体" aria-hidden="true">#</a> 2. 物理层下面的传输媒体</h2><p><img src="http://images.hellocode.top/2-2.42613wqcz0q0.png" alt="2-2" loading="lazy"></p><p><strong>双绞线绞合的作用</strong>：</p><ol><li>抵御部分来自外界的电磁干扰</li><li>减少相邻导线的电磁干扰</li></ol><ul><li>目前的家用以太网,最低应选用超5类(5E)双绞线</li><li>屏蔽双绞线比非屏蔽双绞线只有更好的抗干扰性能,但价格也更贵。|</li></ul><p><strong>微波传播特性</strong></p><ol><li>直线传播，可以穿透电离层</li><li>地面100米发生塔，最大视距LOS传输距离为100公里</li><li>地球同步卫星</li><li>低轨道卫星</li></ol><h2 id="_3-传输方式" tabindex="-1"><a class="header-anchor" href="#_3-传输方式" aria-hidden="true">#</a> 3. 传输方式</h2><p><img src="http://images.hellocode.top/2-3.13dwbapop3hc.png" alt="2-3" loading="lazy"></p><h4 id="_1-串行传输与并行传输" tabindex="-1"><a class="header-anchor" href="#_1-串行传输与并行传输" aria-hidden="true">#</a> 1. 串行传输与并行传输</h4><ol><li>串行传输<br> 串行传输是指数据是一个比特一个比特依次发送的，只需要一条传输链路。</li><li>并行传输<br> 并行传输是指一次发送n个比特而不是一个比特，为此。在发送端和接收端之间需要有n条传输线路。</li></ol><p><img src="http://images.hellocode.top/2-4.3x2zi4moxp00.png" alt="2-4" loading="lazy"></p><h4 id="_2-同步传输和异步传输" tabindex="-1"><a class="header-anchor" href="#_2-同步传输和异步传输" aria-hidden="true">#</a> 2. 同步传输和异步传输</h4><ol><li>同步传输<br> 收发双方时钟同步的方法 <ul><li>外同步: 在收发双方之间添加一条单独的时钟信号线</li><li>内同步: 发送端将时钟同步信号编码到发送数据中一起传输（例如曼彻斯特编码)</li></ul></li><li>异步传输 <ul><li><strong>字节之间异步</strong>（字节之间的时间间隔不固定)</li><li>字节中的每个比特仍然要同步(各比特的持续时间是相同的)</li></ul></li></ol><p><img src="http://images.hellocode.top/2-5.73qli229xks0.png" alt="2-5" loading="lazy"></p><h4 id="_3-单工、半双工、全双工通信" tabindex="-1"><a class="header-anchor" href="#_3-单工、半双工、全双工通信" aria-hidden="true">#</a> 3. 单工、半双工、全双工通信</h4><ol><li>单工：一方向另一方传递信息</li><li>半双工：双方互相传递信息，但是不能同时传递</li><li>全双工：双方可同时互相传递信息</li></ol><p><img src="http://images.hellocode.top/2-6.6kq2puyj6uw0.png" alt="2-6" loading="lazy"></p><h2 id="_4-编码与调制" tabindex="-1"><a class="header-anchor" href="#_4-编码与调制" aria-hidden="true">#</a> 4. 编码与调制</h2><h3 id="_4-1-编码与调制" tabindex="-1"><a class="header-anchor" href="#_4-1-编码与调制" aria-hidden="true">#</a> 4.1 编码与调制</h3><p><img src="http://images.hellocode.top/2-7.46knmkk9zk40.png" alt="2-7" loading="lazy"></p><h3 id="_4-2-码元" tabindex="-1"><a class="header-anchor" href="#_4-2-码元" aria-hidden="true">#</a> 4.2 码元</h3><p>码元：在使用时间域的波形表示数字信号时,代表不同 <strong>离散数值的基本波形</strong>。</p><p><img src="http://images.hellocode.top/2-8.46qrecmq5um0.png" alt="2-8" loading="lazy"></p><h3 id="_4-3-传输媒体与信道的关系" tabindex="-1"><a class="header-anchor" href="#_4-3-传输媒体与信道的关系" aria-hidden="true">#</a> 4.3 传输媒体与信道的关系</h3><p>传输媒体不等同于信道，对于单工通信，传输媒体只有一条 <strong>发送信道或者接收信道</strong>；对于半双工和全双工传输，则包含两条信道；如果使用 <strong>信道复用</strong> 技术，则可以包含多条信道。</p><p><img src="http://images.hellocode.top/2-9.2gxv9ho4lr60.png" alt="2-9" loading="lazy"></p><h3 id="_4-4-信道复用技术" tabindex="-1"><a class="header-anchor" href="#_4-4-信道复用技术" aria-hidden="true">#</a> 4.4 信道复用技术</h3><p><img src="http://images.hellocode.top/信道复用技术.1ifqtkrn9bmo.png" alt="信道复用技术" loading="lazy"></p><h3 id="_4-5-常用编码" tabindex="-1"><a class="header-anchor" href="#_4-5-常用编码" aria-hidden="true">#</a> 4.5 常用编码</h3><p><img src="http://images.hellocode.top/2-10.1opitsaiihvk.png" alt="2-10" loading="lazy"></p><h3 id="_4-6-基本调制方法" tabindex="-1"><a class="header-anchor" href="#_4-6-基本调制方法" aria-hidden="true">#</a> 4.6 基本调制方法</h3><p>基本调制方法：调幅、调频、调相</p><p><img src="http://images.hellocode.top/2-11.2xghqcoe0tg0.png" alt="2-11" loading="lazy"></p><h3 id="_4-7-混合调制" tabindex="-1"><a class="header-anchor" href="#_4-7-混合调制" aria-hidden="true">#</a> 4.7 混合调制</h3><p><strong>正交振幅调制</strong>：通常情况下，相位和振幅可以结合起来一起调制，称为正交振幅调制 QAM。</p><p><img src="http://images.hellocode.top/2-12.1bxefanjzb40.png" alt="2-12" loading="lazy"></p><h3 id="_4-8-混合调制举例-正交振幅调制" tabindex="-1"><a class="header-anchor" href="#_4-8-混合调制举例-正交振幅调制" aria-hidden="true">#</a> 4.8 混合调制举例：正交振幅调制</h3><p><img src="http://images.hellocode.top/2-13.193zdnz65lhc.png" alt="2-13" loading="lazy"></p><h2 id="_5-信道的极限容量" tabindex="-1"><a class="header-anchor" href="#_5-信道的极限容量" aria-hidden="true">#</a> 5. 信道的极限容量</h2><h3 id="_5-1-信号失真" tabindex="-1"><a class="header-anchor" href="#_5-1-信号失真" aria-hidden="true">#</a> 5.1 信号失真</h3><p>信号在通过信道时，会产生失真现象。<br> 信号通过通信质量较好的信道时，失真不严重，可以识别；但信号通过通信质量较差的信道时，失真严重，无法识别。<br> 影响失真的因素：<strong>码元传输速率、信号传输距离、噪声干扰、传输媒体质量</strong>等</p><p><img src="http://images.hellocode.top/2-14.glealc1ccu0.png" alt="2-14" loading="lazy"></p><h3 id="_5-2-奈氏准则" tabindex="-1"><a class="header-anchor" href="#_5-2-奈氏准则" aria-hidden="true">#</a> 5.2 奈氏准则</h3><p><img src="http://images.hellocode.top/2-15.7fl55rgwsio0.png" alt="2-15" loading="lazy"></p><p><strong>奈氏准则计算公式</strong><br> 理想低通信道下极限数据传输速率</p>',52),B=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"C"),s("mo",null,"="),s("mn",null,"2"),s("mi",null,"W"),s("msubsup",null,[s("mrow",null,[s("mi",null,"log"),s("mo",null,"⁡")]),s("mn",null,"2"),s("mi",null,"V")])]),s("annotation",{encoding:"application/x-tex"}," C=2W\\log_2^{V} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1727em","vertical-align":"-0.247em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9257em"}},[s("span",{style:{top:"-2.453em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])]),s("span",{style:{top:"-3.1473em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.22222em"}},"V")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])])])])])])],-1),W=n('<p>其中，C是数据传输速率（bit/s），W是信道带宽（Hz），V是信号状态数（可调制的不同波形的数量）</p><h3 id="_5-3-香农公式" tabindex="-1"><a class="header-anchor" href="#_5-3-香农公式" aria-hidden="true">#</a> 5.3 香农公式</h3><p><img src="http://images.hellocode.top/2-16.2mp8es8zbbm0.png" alt="2-16" loading="lazy"></p><h3 id="_5-4-数据传输速率公式" tabindex="-1"><a class="header-anchor" href="#_5-4-数据传输速率公式" aria-hidden="true">#</a> 5.4 数据传输速率公式</h3>',4),E=n('<h3 id="_5-5-奈氏准则与香农公式的意义" tabindex="-1"><a class="header-anchor" href="#_5-5-奈氏准则与香农公式的意义" aria-hidden="true">#</a> 5.5 奈氏准则与香农公式的意义</h3><p><img src="http://images.hellocode.top/2-17.bnv6xoj47rk.png" alt="2-17" loading="lazy"></p><h1 id="三-数据链路层" tabindex="-1"><a class="header-anchor" href="#三-数据链路层" aria-hidden="true">#</a> （三）数据链路层</h1><h2 id="_1-数据链路层概述" tabindex="-1"><a class="header-anchor" href="#_1-数据链路层概述" aria-hidden="true">#</a> 1. 数据链路层概述</h2><h3 id="_1-1-数据链路层在网络体系结构中的地位" tabindex="-1"><a class="header-anchor" href="#_1-1-数据链路层在网络体系结构中的地位" aria-hidden="true">#</a> 1.1 数据链路层在网络体系结构中的地位</h3><p>数据链路层上传输的数据包称为帧。</p><p><img src="http://images.hellocode.top/3-1.5ea3zzg868g0.png" alt="3-1" loading="lazy"></p><h3 id="_1-2-使用点对点信道的数据链路层" tabindex="-1"><a class="header-anchor" href="#_1-2-使用点对点信道的数据链路层" aria-hidden="true">#</a> 1.2 使用点对点信道的数据链路层</h3><blockquote><p>数据链路层的三个重要问题</p></blockquote><h4 id="_1-封装成帧" tabindex="-1"><a class="header-anchor" href="#_1-封装成帧" aria-hidden="true">#</a> 1. 封装成帧</h4><p><strong>封装成帧</strong>：数据链路层给网络层交付的协议数据单元添加 <strong>帧头和帧尾</strong> 的操作。称为封装成帧。<br><strong>目的</strong>：为了在链路上 <strong>以帧为单元</strong> 来传送数据，也就是 <strong>为了实现数据链路层本身的功能。</strong></p><p><img src="http://images.hellocode.top/3-2.vvt6v0jxdpc.png" alt="" loading="lazy"></p><h4 id="_2-差错检测" tabindex="-1"><a class="header-anchor" href="#_2-差错检测" aria-hidden="true">#</a> 2. 差错检测</h4><p>接收方主机收到帧后，通过检错码和检错算法，就可以判断出帧在传输过程中是否出现了了误码。</p><p><img src="http://images.hellocode.top/3-3.6soswamch480.png" alt="3-3" loading="lazy"></p><h4 id="_3-可靠传输" tabindex="-1"><a class="header-anchor" href="#_3-可靠传输" aria-hidden="true">#</a> 3. 可靠传输</h4><p>接受方主机收到有误码的帧后，不会接受，将其丢弃。<br> 如果数据链路层向其上层提供的是不可靠服务，丢弃就丢弃了，不会有更多措施。<br> 如果数据链路层向其上层提供的是 <strong>可靠服务</strong>，就还需要其他措施，确保接收方主机回以重新收到被丢弃的这个帧的确副本。</p><p><img src="http://images.hellocode.top/3-4.5nykph0hbik0.png" alt="3-4" loading="lazy"></p><blockquote><p>以上都是使用 <strong>点对点</strong> 信道的数据链路层来举例的。</p></blockquote><h3 id="_1-3-使用广播信道的数据链路层" tabindex="-1"><a class="header-anchor" href="#_1-3-使用广播信道的数据链路层" aria-hidden="true">#</a> 1.3 使用广播信道的数据链路层</h3><ul><li>共享式以太网的媒体接入控制协议CSMA/CD</li><li>802.11局域网的媒体接入控制协议CSMA/CA</li></ul><p><img src="http://images.hellocode.top/3-6.240tmjjr18jk.png" alt="3-6" loading="lazy"></p><h3 id="_1-4-数据链路层的互联设备" tabindex="-1"><a class="header-anchor" href="#_1-4-数据链路层的互联设备" aria-hidden="true">#</a> 1.4 数据链路层的互联设备</h3><ul><li>网桥和交换机的工作原理</li><li>集线器（物理层互连设备)与交换机的区别</li></ul><p><img src="http://images.hellocode.top/3-5.1k0uqz9x8dz4.png" alt="3-5" loading="lazy"></p><h2 id="_2-封装成帧" tabindex="-1"><a class="header-anchor" href="#_2-封装成帧" aria-hidden="true">#</a> 2. 封装成帧</h2><h3 id="_2-1-封装成帧" tabindex="-1"><a class="header-anchor" href="#_2-1-封装成帧" aria-hidden="true">#</a> 2.1 封装成帧</h3><p>封装成帧是指数据链路层给上层交付的协议数据单元添加帧头和帧尾使之成为帧。</p><ul><li>帧头和帧尾中包含有重要的控制信息。</li><li>帧头和帧尾的作用之一就是帧定界。</li></ul><p>1）PPP帧的帧头和帧尾各有一个标志字节，作用是帧定界。</p><p><img src="http://images.hellocode.top/3-9.156vth7bfmao.png" alt="" loading="lazy"></p><p>2）<strong>并不是每一种数据链路层协议的帧都包含帧定界标志。</strong> 例如，以太网MAC帧。而且以太网V2的MAC帧还有帧间间隔，规定为 96 比特时间。</p><p><img src="http://images.hellocode.top/3-10.7iclb7mbp4c0.png" alt="" loading="lazy"></p><h3 id="_2-2-透明传输" tabindex="-1"><a class="header-anchor" href="#_2-2-透明传输" aria-hidden="true">#</a> 2.2 透明传输</h3><p><strong>透明传输</strong>：是指数据链路层对上层交付的传输数据没有任何限制，就好像数据链路层不存在一样。</p><p><img src="http://images.hellocode.top/3-7.g2e5zs24zs8.png" alt="3-7" loading="lazy"></p><p><strong>例题</strong></p><p><img src="http://images.hellocode.top/3-11.3u07pmbp2fc0.png" alt="3-11" loading="lazy"></p><h3 id="_2-3-提高帧传输效率" tabindex="-1"><a class="header-anchor" href="#_2-3-提高帧传输效率" aria-hidden="true">#</a> 2.3 提高帧传输效率</h3><p><img src="http://images.hellocode.top/3-8.652gtybl8vo0.png" alt="3-8" loading="lazy"></p><h2 id="_3-差错检测" tabindex="-1"><a class="header-anchor" href="#_3-差错检测" aria-hidden="true">#</a> 3. 差错检测</h2><h3 id="_3-1-差错检测" tabindex="-1"><a class="header-anchor" href="#_3-1-差错检测" aria-hidden="true">#</a> 3.1 差错检测</h3><ul><li><strong>比特差错</strong>：实际的通信链路都不是理想的，比特在传输过程中可能会产生差错: 1可能会变成0,而0也可能变成1。这称为比特差错。</li><li><strong>误码率BER</strong>：在一段时间内，传输错误的比特占所传输比特总数的比率称为误码率BER(Bit Error Rate)</li><li><strong>差错检测码FCS</strong>：使用差错检测码来检测数据在传输过程中是否产生了比特差错，是数据链路层所要解决的重要问题之一。</li></ul><p><img src="http://images.hellocode.top/3-12.2jhqh0ugkrs0.png" alt="3-12" loading="lazy"></p><h3 id="_3-2-奇偶校验" tabindex="-1"><a class="header-anchor" href="#_3-2-奇偶校验" aria-hidden="true">#</a> 3.2 奇偶校验</h3><ul><li><strong>奇/偶校验</strong>：在待发送的数据后面 <strong>添加1位奇偶校验位</strong>，使整个数据（包括所添加的校验位在内)中 <strong>“1”的个数</strong> 为奇数(奇校验)或偶数（偶校验)。</li><li>如果有 <strong>奇数个位发生误码</strong>，则奇偶性发生变化，<strong>可以检查出误码</strong></li><li>如果有 <strong>偶数个位发生误码</strong>，则奇偶性不发生变化，<strong>不能检查出误码（漏检)</strong></li></ul><p><img src="http://images.hellocode.top/3-13.3075ixh62600.png" alt="3-13" loading="lazy"></p><blockquote><p>奇偶校验法的漏检率较高，数据链路层一般不采用这种方法。</p></blockquote><h3 id="_3-3-循环冗余检验" tabindex="-1"><a class="header-anchor" href="#_3-3-循环冗余检验" aria-hidden="true">#</a> 3.3 循环冗余检验</h3><h4 id="_1-循环冗余检验-crc-cyclic-redundancy-check" tabindex="-1"><a class="header-anchor" href="#_1-循环冗余检验-crc-cyclic-redundancy-check" aria-hidden="true">#</a> 1. 循环冗余检验:CRC(Cyclic Redundancy Check)</h4><p><strong>1）CRC</strong></p><p><img src="http://images.hellocode.top/3-17.35cd446mr900.png" alt="3-17" loading="lazy"></p><p><strong>2）生成多项式</strong></p><p><img src="http://images.hellocode.top/3-18.2nsiqx5fa7o0.png" alt="3-18" loading="lazy"></p><h4 id="_2-举例" tabindex="-1"><a class="header-anchor" href="#_2-举例" aria-hidden="true">#</a> 2. 举例</h4><p><strong>1）发送方处理</strong></p><p><img src="http://images.hellocode.top/3-14.2zqhaxf0kag.png" alt="3-14" loading="lazy"></p><p><strong>2）接收方处理</strong></p><p><img src="http://images.hellocode.top/3-15.wl7q2nrrjo0.png" alt="3-15" loading="lazy"></p><h3 id="_3-4-本节总结" tabindex="-1"><a class="header-anchor" href="#_3-4-本节总结" aria-hidden="true">#</a> 3.4 本节总结</h3><p><img src="http://images.hellocode.top/3-16.1fgm6l28lvpc.png" alt="3-16" loading="lazy"></p><h2 id="_4-可靠传输" tabindex="-1"><a class="header-anchor" href="#_4-可靠传输" aria-hidden="true">#</a> 4. 可靠传输</h2><h3 id="_4-1-可靠传输的基本概念" tabindex="-1"><a class="header-anchor" href="#_4-1-可靠传输的基本概念" aria-hidden="true">#</a> 4.1 可靠传输的基本概念</h3><ul><li>使用 <strong>差错检测技术</strong> （例如循环冗余校验CRC)，接收方的数据链路层就可检测出帧在传输过程中是否产生了 <strong>误码</strong> （比特错误)。</li><li>数据链路层向上层提供的服务类型 <ul><li><strong>不可靠传输服务</strong>: <strong>仅仅丢弃有误码的帧</strong> ，其他什么也不做;</li><li><strong>可靠传输服务</strong>: 想办法实现 <strong>发送端发送什么，接收端就收到什么</strong>。</li></ul></li></ul><p><img src="http://images.hellocode.top/3-19.1wvty52scfuo.png" alt="3-19" loading="lazy"></p><ul><li>一般情况下，<strong>有线链路</strong> 的误码率比较低，为了减小开销，并 <strong>不要求数据链路层向上提供可靠传输服务</strong>。即使出现了误码，可靠传输的问题由其上层处理。</li><li><strong>无线链路</strong> 易受干扰，误码率比较高，因此 <strong>要求数据链路层</strong> 必须向上层提供 <strong>可靠传输服务</strong>。</li></ul><p><img src="http://images.hellocode.top/3-20.3cn9h2uq7vq0.png" alt="3-20" loading="lazy"></p><ul><li><strong>比特差错</strong> 只是传输差错中的一种。</li><li>从整个计算机网络体系结构来看，传输差错还包括<strong>分组丢失、分组失序</strong> 以及 <strong>分组重复</strong>。</li><li>分组丢失、分组失序以及分组重复这些传输差错，一般不会出现在数据链路层，而会出现在其上层。</li><li><strong>可靠传输服务并不仅局限于数据链路层</strong>，其他各层均可选择实现可靠传输。</li></ul><p><img src="http://images.hellocode.top/3-21.6srus6nv06w0.png" alt="3-21" loading="lazy"></p><ul><li>可靠传输的实现比较复杂，开销也比较大，是否使用可靠传输取决于应用需求。</li></ul><h3 id="_4-2-三种可靠传输实现机制" tabindex="-1"><a class="header-anchor" href="#_4-2-三种可靠传输实现机制" aria-hidden="true">#</a> 4.2 三种可靠传输实现机制</h3><p>下面介绍可靠传输的三种实现机制：</p><p><strong>停止等待协议SW、回退N帧协议GBN、选择重传协议SR</strong></p><ul><li>这三种可靠传输实现机制的基本原理并不仅限于数据链路层,可以应用到计算机网络体系结构的各层协议中。</li><li>在学习时,不要把思维局限在数据链路层,而应放眼于整个网络体系结构。</li></ul><h3 id="_4-3-一-停止-等待协议" tabindex="-1"><a class="header-anchor" href="#_4-3-一-停止-等待协议" aria-hidden="true">#</a> 4.3 （一）停止-等待协议</h3><h4 id="_1-停止-等待协议" tabindex="-1"><a class="header-anchor" href="#_1-停止-等待协议" aria-hidden="true">#</a> 1. 停止-等待协议</h4><p><strong>停止-等待协议：SW（Stop and Wait）</strong>：发送方每发送一个分组，就停止发送并等待接收方的确认分组。当收到接收方的确认分组后，才能发送下一个数据分组，如此反复进行。</p><ul><li><strong>DATA</strong>：发送分组</li><li><strong>ACK</strong>：确认接受分组</li><li><strong>NAK</strong>：未接受，否定应答分组</li></ul><p><img src="http://images.hellocode.top/3-22.49czoiacbse0.png" alt="3-22" loading="lazy"></p><h4 id="_2-超时重传机制" tabindex="-1"><a class="header-anchor" href="#_2-超时重传机制" aria-hidden="true">#</a> 2. 超时重传机制</h4><p><img src="http://images.hellocode.top/3-23.6c40g10nhx80.png" alt="3-23" loading="lazy"></p><h4 id="_3-避免分组重复" tabindex="-1"><a class="header-anchor" href="#_3-避免分组重复" aria-hidden="true">#</a> 3. 避免分组重复</h4><p><strong>分组重复</strong>：接收方发送的 ACK 数据包丢失，发送方启动超时重传机制，发送重复分组。<br><strong>解决机制</strong>：为 <strong>避免分组重复这种传输错误</strong>，必须给 <strong>每个分组带上序号</strong>。对于停止-等待协议，由于每发送一个数据分组就停止等待,只要保证每发送一个新的数据分组，其发送序号与上次发送的数据分组的序号不同就可以了，因此用 <strong>一个比特来编号就够了</strong>。</p><p><img src="http://images.hellocode.top/3-25.56vynwvuyts0.png" alt="3-25" loading="lazy"></p><h4 id="_4-确认分组ack迟到-确认分组也需要编号" tabindex="-1"><a class="header-anchor" href="#_4-确认分组ack迟到-确认分组也需要编号" aria-hidden="true">#</a> 4. 确认分组ACK迟到：确认分组也需要编号</h4><blockquote><p>对于PPP信道的数据链路层实现停止-等待协议，往返时间固定，不需要给确认分组编号。</p></blockquote><p><img src="http://images.hellocode.top/3-26.77zevrzgjbk0.png" alt="3-26" loading="lazy"></p><h4 id="_5-停止-等待协议的注意事项" tabindex="-1"><a class="header-anchor" href="#_5-停止-等待协议的注意事项" aria-hidden="true">#</a> 5. 停止-等待协议的注意事项</h4><ul><li>接收端检测到数据分组有误码时，将其 <strong>丢弃并等待发送方的超时重传</strong>。但对于误码率较高的点对点链路，为使发送方尽早重传，也 <strong>可给发送方发送NAK分组</strong></li><li>为了让接收方能够判断所收到的数据分组是否是重复的，需要给 <strong>数据分组编号</strong>。由于停止-等待协议的停等特性，只需1个比特编号就够了，即编号0和1.</li><li>为了让发送方能够判断所收到的ACK分组是否是重复的，需要 <strong>给ACK分组编号</strong>，所用比特数量与数据分组编号所用比特数量一样。</li><li>点对点信道的数据链路层一般不会出现ACK分组迟到的情况，因此 <strong>在数据链路层实现停止-等待协议可以不用给ACK分组编号</strong>。</li><li>超时计时器设置的重传时间应仔细选择。一般可将重传时间选为 <strong>略大于“从发送方到接收方的平均往返时间”。</strong><ul><li>在数据链路层点对点的往返时间比较确定，重传时间比较好设定。</li><li>然而在运输层，由于端到端往返时间非常不确定，设置合适的重传时间有时并不容易</li></ul></li></ul><h4 id="_6-停止-等待协议的信道利用率" tabindex="-1"><a class="header-anchor" href="#_6-停止-等待协议的信道利用率" aria-hidden="true">#</a> 6. 停止-等待协议的信道利用率</h4>',90),F=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"D")])]),s("annotation",{encoding:"application/x-tex"},"T_D")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"D")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("：数组分组的发送时延")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"A")])]),s("annotation",{encoding:"application/x-tex"},"T_A")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"A")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("：接收方主机的处理时延")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mi",null,"T"),s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"RTT")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"RTT")])])]),a("：往返时延")])],-1),j=s("p",null,[a("则 "),s("strong",null,"停止-等待协议的信道利用率计算公式"),a(),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"U")]),s("annotation",{encoding:"application/x-tex"},"U")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U")])])]),a(" 为：")],-1),U=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"U"),s("mo",null,"="),s("mfrac",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"D")]),s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"d")]),s("mo",null,"+"),s("mi",null,"R"),s("mi",null,"T"),s("mi",null,"T"),s("mo",null,"+"),s("msub",null,[s("mi",null,"T"),s("mi",null,"A")])])])]),s("annotation",{encoding:"application/x-tex"}," U=\\frac{T_D}{T_d+RTT+T_A} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.1963em","vertical-align":"-0.836em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"RTT"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"A")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"D")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.836em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),K=n('<p><img src="http://images.hellocode.top/3-27.4dtomysg9440.png" alt="3-27" loading="lazy"></p><p><strong>计算举例</strong></p><p><img src="http://images.hellocode.top/3-28.1gm2i4d9hkhs.png" alt="3-28" loading="lazy"></p><ul><li>当往返时延RTT远大于数据帧发送时延Tp时（例如使用卫星链路)，信道利用率非常低。若出现重传，则对于传送有用的数据信息来说，信道利用率还要降低</li><li>为了克服停止-等待协议信道利用率很低的缺点，就产生了另外两种协议，即 <strong>后退N帧协议GBN和选择重传协议SR</strong></li></ul><p><strong>例题</strong></p><p><img src="http://images.hellocode.top/3-29.37dfa94s6lq0.png" alt="3-29" loading="lazy"></p><h3 id="_4-4-二-回退n帧协议gbn" tabindex="-1"><a class="header-anchor" href="#_4-4-二-回退n帧协议gbn" aria-hidden="true">#</a> 4.4 （二）回退N帧协议GBN</h3><h4 id="_1-停止-等待协议sw的缺点及优化" tabindex="-1"><a class="header-anchor" href="#_1-停止-等待协议sw的缺点及优化" aria-hidden="true">#</a> 1. 停止-等待协议SW的缺点及优化</h4><ul><li><strong>缺点</strong>：停止-等待协议SW的信道利用率很低，若出现超时重传，利用率更低。</li><li><strong>优化</strong>：采用流水线传输可以提高信道利用率。</li></ul><p><img src="http://images.hellocode.top/3-30.qk3ngibc10w.png" alt="3-30" loading="lazy"></p><h4 id="_2-回退n帧协议" tabindex="-1"><a class="header-anchor" href="#_2-回退n帧协议" aria-hidden="true">#</a> 2. 回退N帧协议</h4><p>在流水线传输的基础上，利用发送窗口限制发送方可连续发送数据分组的个数。</p>',12),H=s("ol",null,[s("li",null,[a("使用3个比特给分组编序号，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"−"),s("mn",null,"7")]),s("annotation",{encoding:"application/x-tex"},"0-7")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"7")])])])]),s("li",null,[a("发送窗口的尺寸 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")])]),s("annotation",{encoding:"application/x-tex"},"W_T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 取值："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"<"),s("msub",null,[s("mi",null,"W"),s("mi",null,"T")]),s("mo",null,"<"),s("mo",null,"="),s("msup",null,[s("mn",null,"2"),s("mn",null,"3")]),s("mo",null,"−"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1 < W_T <= 2^3-1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6835em","vertical-align":"-0.0391em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8974em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a("，本例取 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")]),s("mo",null,"="),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"W_T=5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])])]),s("li",null,[a("接收窗口"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"R")])]),s("annotation",{encoding:"application/x-tex"},"W_R")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("的取值："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"R")]),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"W_R=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])])],-1),G=s("blockquote",null,[s("p",null,[a("当 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")]),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"W_T=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" 为停止-等待协议SW。")])],-1),O=n('<h5 id="_1-无差错情况" tabindex="-1"><a class="header-anchor" href="#_1-无差错情况" aria-hidden="true">#</a> （1）无差错情况</h5><p><strong>无差错情况</strong>：正常发送与接受，无误码或丢失等情况。</p><p><img src="http://images.hellocode.top/3-31.3uu8ugznfci0.png" alt="3-31" loading="lazy"></p><h5 id="_2-累计确认" tabindex="-1"><a class="header-anchor" href="#_2-累计确认" aria-hidden="true">#</a> （2）累计确认</h5>',4),Q=s("p",null,[s("strong",null,"累计确认"),a("：接收方不一定要对收到的数据分组逐个发送确认，而是可以在收到几个数据分组后（由具体实现决定)对 "),s("strong",null,"按序到达的最后一个数据分组发送确认"),a("。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A"),s("mi",null,"C"),s("msub",null,[s("mi",null,"K"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"ACK_n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("表示序号为n及以前的所有数据分组都已正确接收。")],-1),J=n('<blockquote><p>即使 AKC1丢失了，也有ACK4来确认，发送方也可能不必重传。</p></blockquote><p><img src="http://images.hellocode.top/3-32.22n3jtl2zm9s.png" alt="3-32" loading="lazy"></p><ul><li>累计确认的优点：减少接收方的开销、减少对网络资源的占用。</li><li>累计确认的缺点：不能向发送方及时发送接收方正确接受数据分组的信息。</li></ul><h5 id="_3-有差错情况" tabindex="-1"><a class="header-anchor" href="#_3-有差错情况" aria-hidden="true">#</a> （3）有差错情况</h5><ul><li>在本例中。尽管序号为6,7,0,1的数据分组正确到达接收方，<strong>但由于5号数据分组误码不被接受，它们也“受到牵连”而不被接受</strong>。发送方还要重传这些数据分组，这就是所谓的 <strong>Go-back-N (回退N帧)</strong></li><li>可见，<strong>当通信线路质量不好时，回退N帧协议的信道利用率并不比停止-等待协议高</strong>。</li></ul><p><img src="http://images.hellocode.top/3-33.5cbbcv2dz4o0.png" alt="3-33" loading="lazy"></p>',6),X=s("h5",{id:"_4-超过其上限7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-超过其上限7","aria-hidden":"true"},"#"),a(" （4）"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")])]),s("annotation",{encoding:"application/x-tex"},"W_T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("超过其上限7")],-1),Y=s("p",null,[a("若"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")])]),s("annotation",{encoding:"application/x-tex"},"W_T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("超过取值范围，例如"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"T")]),s("mo",null,"="),s("mn",null,"8")]),s("annotation",{encoding:"application/x-tex"},"W_T=8")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"8")])])]),a("，会出现什么情况?")],-1),Z=n('<p><img src="http://images.hellocode.top/3-34.1q4q2no3jb34.png" alt="3-34" loading="lazy"></p><blockquote><p>如果是失败重传，序号为0-7；如果是发送新的分组，序号也为0-7。就无法分辨新旧数据分组了。</p></blockquote><h4 id="_3-回退n帧协议总结" tabindex="-1"><a class="header-anchor" href="#_3-回退n帧协议总结" aria-hidden="true">#</a> 3. 回退N帧协议总结</h4><ul><li>回退N帧协议在流水线传输的基础上利用发送窗口来限制发送方连续发送数据分组的数量，是一种连续ARQ协议。</li><li>在协议的工作过程中发送窗回和接收窗口不断向前滑动,因此这类协议叉称为滑动窗回协议。</li><li>由于回退N帧协议的特性,当通信线路质量不好时,其信道利用率并不比停止-等待协议高。</li></ul><p><img src="http://images.hellocode.top/3-35.5ndsrweq16w0.png" alt="3-35" loading="lazy"></p><p><strong>例题</strong></p><p><img src="http://images.hellocode.top/3-36.3dv2v8n50o80.png" alt="3-36" loading="lazy"></p><h3 id="_4-5-三-选择重传协议sr" tabindex="-1"><a class="header-anchor" href="#_4-5-三-选择重传协议sr" aria-hidden="true">#</a> 4.5 （三）选择重传协议SR</h3><h4 id="_1-由gbn过渡到sr" tabindex="-1"><a class="header-anchor" href="#_1-由gbn过渡到sr" aria-hidden="true">#</a> 1. 由GBN过渡到SR</h4>',9),$=s("ul",null,[s("li",null,[s("strong",null,"回退N帧协议"),a(" 的接收窗口尺寸 "),s("strong",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"R")])]),s("annotation",{encoding:"application/x-tex"},"W_R")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("只能等于1")]),a("，因此 "),s("strong",null,"接收方只能按序接收正确到达的数据分组"),a("。")]),s("li",null,"一个数据分组的误码就会导致其后续多个数据分组不能被接收方按序接收而丢弃(尽管它们无乱序和误码)。这必然会造成发送方对这些数据分组的超时重传，显然这是对通信资源的极大浪费。"),s("li",null,[a("为了进一步提高性能，可设法只重传出现误码的数据分组。因此，接收窗口的尺寸 "),s("strong",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"R")])]),s("annotation",{encoding:"application/x-tex"},"W_R")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("不应再等于1(而应大于1)，以便接收方先收下失序到达但无误码并且序号落在接收窗口内的那些数据分组")]),a("，等到所缺分组收齐后再一并送交上层。这就是 "),s("strong",null,"选择重传协议"),a("。")])],-1),ss=n('<p><strong>注意</strong></p><p>选择重传协议为了使发送方仅重传出现差错的分组，接收方 <strong>不能采用累计确认</strong>，而需要对每个正确接收到的数据分组进行 <strong>逐一确认。</strong></p><h4 id="_2-选择重传协议sr" tabindex="-1"><a class="header-anchor" href="#_2-选择重传协议sr" aria-hidden="true">#</a> 2. 选择重传协议SR</h4><p><img src="http://images.hellocode.top/3-37.28iehhil08n4.png" alt="3-37" loading="lazy"></p><h5 id="_1-选择重传协议发送窗口与接收窗口应满足的条件" tabindex="-1"><a class="header-anchor" href="#_1-选择重传协议发送窗口与接收窗口应满足的条件" aria-hidden="true">#</a> 1）选择重传协议发送窗口与接收窗口应满足的条件</h5><p><img src="http://images.hellocode.top/3-38.7igj3l4ex100.png" alt="3-38" loading="lazy"></p><h5 id="_2-若发送窗口取值超过限制" tabindex="-1"><a class="header-anchor" href="#_2-若发送窗口取值超过限制" aria-hidden="true">#</a> 2）若发送窗口取值超过限制</h5><p>如果发送窗口和接收窗口超过了取值范围，就会使 <strong>接收方无法区分新、旧数据分组</strong>，进而出现 <strong>分组重复</strong> 这种差错。</p><p><img src="http://images.hellocode.top/3-39.7b7sq1249o00.png" alt="3-39" loading="lazy"></p><h4 id="_3-sr协议总结" tabindex="-1"><a class="header-anchor" href="#_3-sr协议总结" aria-hidden="true">#</a> 3. SR协议总结</h4><p><img src="http://images.hellocode.top/3-40.2oa58zu4dq20.png" alt="3-40" loading="lazy"></p><p><strong>例题</strong></p><blockquote><p>【2011年题35】数据链路层采用选择重传协议（SR）传输数据，发送方已发送了0~3号数据帧，现已收到1号帧的确认，而0、2号帧依次超时，则此时需要重传的帧数是<br> A.1 B.2 C.3 D.4</p></blockquote><p><strong>解析</strong></p><p><img src="http://images.hellocode.top/3-41.3hf6j05r2sc0.png" alt="3-41" loading="lazy"></p><h2 id="_5-点对点协议ppp" tabindex="-1"><a class="header-anchor" href="#_5-点对点协议ppp" aria-hidden="true">#</a> 5. 点对点协议PPP</h2><h3 id="_5-1-ppp协议的组成" tabindex="-1"><a class="header-anchor" href="#_5-1-ppp协议的组成" aria-hidden="true">#</a> 5.1 PPP协议的组成</h3><ul><li>点对点协议PPP（Point-to-Point Protocol）是目前使用最广泛的 <strong>点对点数据链路层协议</strong>。</li><li>PPPoE：Point-to-Point Protocol over Ethernet</li><li>PPP协议是因特网工程任务组IETF在1992年制定的。经过1993年和1994年的修订，现在的PPP协议已成为因特网的正式标准[RFC1661，RFC1662]。</li></ul><p><img src="http://images.hellocode.top/3-42.789r2rd22pk0.png" alt="3-42" loading="lazy"></p><ul><li>PPP协议为在点对点链路传输各种协议数据报提供了一个标准方法，主要由以下三部分构成: <ul><li>对各种协议数据报的封装方法（封装成帧)</li><li>链路控制协议LCP：用于建立、配置以及测试数据链路的连接</li><li>一套网络控制协议NCPs：其中的每一个协议支持不同的网络层协议</li></ul></li></ul><p><img src="http://images.hellocode.top/3-43.1m5k2nwuq1s0.png" alt="3-43" loading="lazy"></p><h3 id="_5-2-点对点协议ppp的帧格式" tabindex="-1"><a class="header-anchor" href="#_5-2-点对点协议ppp的帧格式" aria-hidden="true">#</a> 5.2 点对点协议PPP的帧格式</h3><p><img src="http://images.hellocode.top/3-44.181dut81ll5s.png" alt="3-44" loading="lazy"></p><h3 id="_5-3-点对点协议ppp透明传输" tabindex="-1"><a class="header-anchor" href="#_5-3-点对点协议ppp透明传输" aria-hidden="true">#</a> 5.3 点对点协议PPP透明传输</h3><p>点多点协议PPP实现透明传输的两种方法：</p><ul><li>面向字节的异步链路采用插入转义字符的字节填充法</li><li>面向比特的同步链路采用插入比特 0 的比特填充法</li></ul><h4 id="_1-字节填充法" tabindex="-1"><a class="header-anchor" href="#_1-字节填充法" aria-hidden="true">#</a> 1. 字节填充法</h4><p><img src="http://images.hellocode.top/3-46.3ev0onisi7c0.png" alt="3-46" loading="lazy"></p><h4 id="_2-比特填充法" tabindex="-1"><a class="header-anchor" href="#_2-比特填充法" aria-hidden="true">#</a> 2. 比特填充法</h4><p><img src="http://images.hellocode.top/3-47.5s99frf73qc0.png" alt="3-47" loading="lazy"></p><h3 id="_5-4-差错检测" tabindex="-1"><a class="header-anchor" href="#_5-4-差错检测" aria-hidden="true">#</a> 5.4 差错检测</h3><p><img src="http://images.hellocode.top/3-48.1oyab118igu8.png" alt="3-48" loading="lazy"></p><h3 id="_5-5-工作状态" tabindex="-1"><a class="header-anchor" href="#_5-5-工作状态" aria-hidden="true">#</a> 5.5 工作状态</h3><p><img src="http://images.hellocode.top/3-49.m026a75vdvk.png" alt="3-49" loading="lazy"></p><h2 id="_6-媒体接入控制" tabindex="-1"><a class="header-anchor" href="#_6-媒体接入控制" aria-hidden="true">#</a> 6. 媒体接入控制</h2><h3 id="_6-1-媒体接入控制基本概念" tabindex="-1"><a class="header-anchor" href="#_6-1-媒体接入控制基本概念" aria-hidden="true">#</a> 6.1 媒体接入控制基本概念</h3><p>共享信道要着重考虑的一个问题就是如何协调多个发送和接收站点对一个共享传输媒体的占用，即 <strong>媒体接入控制MAC(Medium Access Control)。</strong></p><p><img src="http://images.hellocode.top/3-50.3v43beoi02s0.png" alt="3-50" loading="lazy"></p><h3 id="_6-2-媒体接入技术分类" tabindex="-1"><a class="header-anchor" href="#_6-2-媒体接入技术分类" aria-hidden="true">#</a> 6.2 媒体接入技术分类</h3><p><img src="http://images.hellocode.top/3-51.48hs0cfh6gs0.png" alt="3-51" loading="lazy"></p><blockquote><p>随着技术的发展，交换技术的成熟和成本的降低，具有更高性能的使用点对点链路和链路层交换机的交换式局域网在有线领域已完全取代了共享式局域网，但由于无线信道的广播天性，无线局域网仍然使用的是共享媒体技术。</p></blockquote><h3 id="_6-3-媒体接入控制-静态划分信道" tabindex="-1"><a class="header-anchor" href="#_6-3-媒体接入控制-静态划分信道" aria-hidden="true">#</a> 6.3 媒体接入控制：静态划分信道</h3><h4 id="信道复用" tabindex="-1"><a class="header-anchor" href="#信道复用" aria-hidden="true">#</a> 信道复用</h4><ul><li>复用(Multiplexing）是通信技术中的一个重要概念。复用就是通过一条物理线路同时传输多路用户的信号。</li><li>当网络中传输媒体的传输容量大于多条单一信道传输的总通信量时，可利用复用技术在一条物理线路上建立多条通信信道来充分利用传输媒体的带宽。</li><li>分类：<strong>频分复用、时分复用、波分复用、码分复用</strong></li></ul><p><img src="http://images.hellocode.top/3-52.2yyxyctbj4w0.png" alt="3-52" loading="lazy"></p><h4 id="_1-频分复用-fdm" tabindex="-1"><a class="header-anchor" href="#_1-频分复用-fdm" aria-hidden="true">#</a> 1. 频分复用 FDM</h4><p>频分复用的所有用户 <strong>同时占用不同的频带资源</strong> 并行通信。</p><p><img src="http://images.hellocode.top/3-53.20kd4ckp3ue8.png" alt="3-53" loading="lazy"></p><h4 id="_2-时分复用-tdm" tabindex="-1"><a class="header-anchor" href="#_2-时分复用-tdm" aria-hidden="true">#</a> 2. 时分复用 TDM</h4><p>时分复用的所有用户在 <strong>不同的时间占用同样的频带宽度</strong> 。</p><p><img src="http://images.hellocode.top/3-54.3s4o1moyxnq0.png" alt="3-54" loading="lazy"></p><h4 id="_3-波分复用-wdm" tabindex="-1"><a class="header-anchor" href="#_3-波分复用-wdm" aria-hidden="true">#</a> 3. 波分复用 WDM</h4><p><img src="http://images.hellocode.top/3-55.4qk4s4d1on00.png" alt="3-55" loading="lazy"></p><h4 id="_4-码分复用-cdm" tabindex="-1"><a class="header-anchor" href="#_4-码分复用-cdm" aria-hidden="true">#</a> 4. 码分复用 CDM</h4><h5 id="_1-cdm-基本概念-理解、了解" tabindex="-1"><a class="header-anchor" href="#_1-cdm-基本概念-理解、了解" aria-hidden="true">#</a> （1）CDM 基本概念（理解、了解）</h5><ul><li>码分复用 CDM 是另一种共享信道的方法。实际上，由于该技术主要用于多址接入，人们更常用 的名词是 <strong>码分多址CDMA(Code Division Multiple Access)。</strong></li><li>同理，频分复用 FDM 和时分复用 TDM 同样可用于多址接入，相应的名词是频分多址 FDMA (Frequency Division Multiple Access)和时分多址TDMA(Time Division Multiple</li><li>本课程中，我们不严格区分复用与多址的概念。可简单理解如下: <ul><li>复用是将单一媒体的频带资源划分成很多子信道，这些子信道之间相互独立，互不干扰。从 媒体的整体频带资源上看，每个子信道只占用该媒体频带资源的一-部分。</li><li>多址(更确切地应该称为多点接入)处理的是动态分配信道给用户。这在用户仅仅暂时性地占用信道 的应用中是必须的，而所有的移动通信系统基本上都属于这种情况。相反,在信道永久性地分配给用 户的应用中，多址是不需要的(对于无线广播或电视广播站就是这样)。</li><li>某种程度上，FDMA、TDMA、CDMA可以分别看成是FDM、TDM、CDM的应用。</li></ul></li><li>与 FDM 和 TDM 不同，CDM的每一个用户可以在 <strong>同样的时间使用同样的频带进行通信。</strong></li><li>由于 <strong>各用户使用经过特殊挑选的不同码型，因此各用户之间不会造成干扰。</strong></li><li>CDM 最初是用于军事通信的，因为这种系统所发送的信号有很强的抗干扰能力，其频谱类似于 白噪声,不易被敌人发现。</li><li>随着技术的进步，CDMA设备的价格和体积都大幅度下降，因而现在已广泛用于民用的移动通信中</li></ul><h5 id="_2-码片-理解、应用" tabindex="-1"><a class="header-anchor" href="#_2-码片-理解、应用" aria-hidden="true">#</a> （2）码片（理解、应用）</h5><ul><li>在CDMA中，每一个比特时间再划分为m个短的间隔，称为码片(Chip)。通常m=64或128。<br> 为了简单起见，在后续的举例中，我们 <strong>假设m为8</strong>。</li></ul><blockquote><p>注意：1个比特时间是指发送1个比特所花费的时间。</p></blockquote><ul><li>使用CDMA的每一个站被指派一个唯一的 <strong>m bit</strong> 码片序列(Chip Sequence)。 <ul><li>一个站如果 <strong>要发送比特1</strong>,则发送它 <strong>自己的m bit码片序列</strong></li><li>个站如果要 <strong>发送比特0</strong>，则发送它 <strong>自己的m bit码片序列的二进制反码</strong></li></ul></li><li>码片序列的挑选 <strong>原则</strong> 如下: <ol><li>分配给每个站的码片序列必须 <strong>各不相同</strong>，实际常采用伪随机码序列。</li><li>分配给每个站的码片序列必须 <strong>相互正交(规格化内积为0)</strong></li></ol></li><li>计算公式如下 <ul><li>令向量 S 表示站 S 的码片序列，令向量 T 表示其他任何站的码片序列</li><li>两个不同站 S 和 T 的码片序列正交，就是向量 S 和 T 的规格化内积为 0</li></ul></li></ul><p><img src="http://images.hellocode.top/3-56.6t4cylgwngs0.png" alt="3-56" loading="lazy"></p><h5 id="_3-码片的应用举例" tabindex="-1"><a class="header-anchor" href="#_3-码片的应用举例" aria-hidden="true">#</a> （3）码片的应用举例</h5><p><img src="http://images.hellocode.top/3-57.6b04u9kaw7k0.png" alt="3-57" loading="lazy"></p><p><img src="http://images.hellocode.top/3-58.3zgqxwlnudk0.png" alt="3-58" loading="lazy"></p><p><strong>解析</strong></p><p><img src="http://images.hellocode.top/3-59.1b2aarwjffa8.png" alt="3-59" loading="lazy"></p><p>其他选项类似计算。（A发送1；B发送0；C未发送；D发送1）</p><p><img src="http://images.hellocode.top/3-60.71qtevi8ibk0.png" alt="3-60" loading="lazy"></p><p><strong>解答</strong></p><p><img src="http://images.hellocode.top/3-61.79nkp43g98w0.png" alt="3-61" loading="lazy"></p><h3 id="_6-4-随机接入-csma-cd-协议" tabindex="-1"><a class="header-anchor" href="#_6-4-随机接入-csma-cd-协议" aria-hidden="true">#</a> 6.4 随机接入：CSMA/CD 协议</h3><h4 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h4><p>对于使用广播信道的总线型以太网，就会出现各种 **碰撞（冲突）**现象。 <img src="http://images.hellocode.top/3-62.ko0cxzbqk4g.png" alt="3-62" loading="lazy"></p><h4 id="_2-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-基本概念" aria-hidden="true">#</a> 2. 基本概念</h4><p>媒体接入控制-动态接入控制-随机接入方式：<br><strong>CSMA/CD 协议</strong><br> （载波监听多址接入/碰撞检测）<br> （Carrier Sense Multiple Access/Collision Detection）</p>',75),as=s("p",null,[s("img",{src:"http://images.hellocode.top/3-63.35f4d7a5g7g0.png",alt:"3-63",loading:"lazy"})],-1),ls=s("strong",null,"“先听后说”",-1),ts=s("ul",null,[s("li",null,[a("若检测到 "),s("strong",null,"总线空闲 96 比特时间"),a("，则发送这个帧")]),s("li",null,[a("若检测到总线忙，则继续检测并等待总线转为 "),s("strong",null,"空闲 96 比特时间"),a("，然后发送这个帧。")])],-1),es=s("p",null,[s("img",{src:"http://images.hellocode.top/3-64.1gg9d6z73wn4.png",alt:"3-64",loading:"lazy"})],-1),ns=s("strong",null,"边检测碰撞（“边说边听”）",-1),is=s("br",null,null,-1),rs=s("strong",null,"“一旦冲突，立即停说，等待时机，重新再说”",-1),hs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-65.1h69628gc534.png",alt:"3-65",loading:"lazy"})],-1),os=n('<p>以太网还采取一种叫做 <strong>强化碰撞</strong> 的措施。当发送帧的站点一旦检测到碰撞，除了 <strong>立即停止发送帧</strong> 外，还要再继续发送32比特或48比特的 <strong>人为干扰信号</strong>(Jamming Signal) ，以便有 <strong>足够多的碰撞信号</strong> 使所有站点 <strong>都能检测出碰撞</strong>。</p><h4 id="_3-争用期-碰撞窗口" tabindex="-1"><a class="header-anchor" href="#_3-争用期-碰撞窗口" aria-hidden="true">#</a> 3. 争用期（碰撞窗口）</h4><p><strong>注意：</strong></p>',3),ps=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"τ")]),s("annotation",{encoding:"application/x-tex"},"\\tau")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.1132em"}},"τ")])])]),a("：以太网单程端到端传播时延。")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"δ")]),s("annotation",{encoding:"application/x-tex"},"\\delta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03785em"}},"δ")])])]),a("："),s("strong",null,"B站发送数据"),a(" 到 "),s("strong",null,"B站检测到碰撞"),a(" 所经历的一段时间。")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"},"t")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6151em"}}),s("span",{class:"mord mathnormal"},"t")])])]),a("：纵轴向下，时间的正向进行。")]),s("li",null,[a("电磁波在 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mi",null,"k"),s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"1km")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord mathnormal"},"km")])])]),a(" 电缆传播时延约等于 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mi",null,"μ")]),s("annotation",{encoding:"application/x-tex"},"5\\mu")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8389em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mord mathnormal"},"μ")])])]),a("s")])],-1),cs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-66.13ke9jqzfmow.png",alt:"3-66",loading:"lazy"})],-1),ms=s("li",null,[a("主机 "),s("strong",null,"最多"),a(" 经过 **"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2"),s("mi",null,"τ")]),s("annotation",{encoding:"application/x-tex"},"2\\tau")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.1132em"}},"τ")])])]),a("（即δ→0）**的时长就可检测到本次发送是否遭受了碰撞")],-1),ds=s("strong",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2"),s("mi",null,"τ")]),s("annotation",{encoding:"application/x-tex"},"2\\tau")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.1132em"}},"τ")])])])],-1),gs=s("strong",null,"碰撞窗口",-1),us=s("li",null,[a("经过争用期这段时间还 "),s("strong",null,"没有检测到碰撞"),a("，才能 "),s("strong",null,"肯定这次发送不会发生碰撞")],-1),_s=s("li",null,"每一个主机在自己发送帧之后的一小段时间内，存在着遭遇碰撞的可能性。这一小段时间是不确定的。它取决于另一个发送帧的主机到本主机的距离，但不会超过总线的端到端往返传播时延，即一个争用期时间。",-1),ys=s("li",null,[a("显然，在以太网中发送帧的主机越多，端到端往返传播时延越大，发生碰撞的概率就越大。因此，"),s("strong",null,"共享式以太网不能连接太多的主机，使用的总线也不能太长。"),s("br"),a(" 10Mb/s以太网把争用期定为 512 比特发送时间，即 51 .2μs,因此其总线长度不能超过 5120m，但考虑到其他一些因素，如信号衰减等，以太网规定总线长度不能超过 2500m。")],-1),bs=s("h4",{id:"_4-最小帧长",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-最小帧长","aria-hidden":"true"},"#"),a(" 4. 最小帧长")],-1),xs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-67.100e5e729s1c.png",alt:"3-67",loading:"lazy"})],-1),vs=s("p",null,[a("A站 发送一个帧 "),s("strong",null,"完毕后"),a("，不再针对该帧进行碰撞检测，不知道已发送完毕的帧是否遭遇碰撞，不进行重传。而这时候C站 "),s("strong",null,"检测到信道空闲时间 96 bit"),a("，发送帧，将 "),s("strong",null,"产生碰撞"),a("。")],-1),fs=s("li",null,[a("以太网规定最小帧长为64字节，即512比特（512比特时间即为争用期） "),s("ul",null,[s("li",null,"如果要发送的数据非常少，那么必须加入一些填充字节,使帧长不小于64字节。")])],-1),zs=s("li",null,"如果在争用期（共发送64字节）没有检测到碰撞,那么后续发送的数据就一定不会发生碰撞;",-1),ws=n('<h4 id="_5-最大帧长" tabindex="-1"><a class="header-anchor" href="#_5-最大帧长" aria-hidden="true">#</a> 5. 最大帧长</h4><p><img src="http://images.hellocode.top/3-68.rb6g1xohoeo.png" alt="3-68" loading="lazy"></p><h4 id="_6-截断二进制指数退避算法" tabindex="-1"><a class="header-anchor" href="#_6-截断二进制指数退避算法" aria-hidden="true">#</a> 6. 截断二进制指数退避算法</h4><p><img src="http://images.hellocode.top/3-69.66m74vavijc0.png" alt="3-69" loading="lazy"></p><h4 id="_7-信道利用率" tabindex="-1"><a class="header-anchor" href="#_7-信道利用率" aria-hidden="true">#</a> 7. 信道利用率</h4><h5 id="_1-一般信道利用率" tabindex="-1"><a class="header-anchor" href="#_1-一般信道利用率" aria-hidden="true">#</a> （1）一般信道利用率</h5><p><img src="http://images.hellocode.top/3-71.47gnnn69sim0.png" alt="3-71" loading="lazy"></p><h5 id="_2-极限信道利用率" tabindex="-1"><a class="header-anchor" href="#_2-极限信道利用率" aria-hidden="true">#</a> （2）极限信道利用率</h5>',8),ks=s("p",null,[a("发送一帧所用时间为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mn",null,"0")]),s("mo",null,"+"),s("mi",null,"τ")]),s("annotation",{encoding:"application/x-tex"},"T_0+\\tau")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.1132em"}},"τ")])])]),a("，帧本身发送时间为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"T_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("，则信道利用率计算公式如下")],-1),Ms=n('<p><img src="http://images.hellocode.top/3-72.6h9z8xxzyy0.png" alt="3-72" loading="lazy"></p><p><img src="http://images.hellocode.top/3-70.1zfp5os3jtc0.png" alt="3-70" loading="lazy"></p><h4 id="_8-帧发送-接收流程" tabindex="-1"><a class="header-anchor" href="#_8-帧发送-接收流程" aria-hidden="true">#</a> 8. 帧发送/接收流程</h4><h5 id="_1-帧发送流程" tabindex="-1"><a class="header-anchor" href="#_1-帧发送流程" aria-hidden="true">#</a> （1）帧发送流程</h5><p><img src="http://images.hellocode.top/3-73.7l7dzeaaid40.png" alt="3-73" loading="lazy"></p><h5 id="_2-帧接收流程" tabindex="-1"><a class="header-anchor" href="#_2-帧接收流程" aria-hidden="true">#</a> （2）帧接收流程</h5><p><img src="http://images.hellocode.top/3-74.6oqwz8w34d00.png" alt="3-74" loading="lazy"></p><h4 id="_9-测试题" tabindex="-1"><a class="header-anchor" href="#_9-测试题" aria-hidden="true">#</a> 9. 测试题</h4><p><img src="http://images.hellocode.top/3-75.pbat88dw4dc.png" alt="3-75" loading="lazy"></p><p><img src="http://images.hellocode.top/3-76.5noc24hijxs0.png" alt="3-76" loading="lazy"></p>',10),As=n('<p><strong>（1）最短时间：</strong></p><p><img src="http://images.hellocode.top/3-77.6vjsnp5z58w0.png" alt="3-77" loading="lazy"><strong>（2）最长时间：</strong></p><p><img src="http://images.hellocode.top/3-78.7cbrvg5bbqg0.png" alt="3-78" loading="lazy"></p><blockquote><p>CSMA/CD协议曾经用于各种总线结构以太网和双绞线以太网的早期版本中。现在的以太网基于交换机和全双工连接，不会有碰撞，因此没有必要使用CSMA/CD协议。</p></blockquote><h2 id="_7-mac-地址" tabindex="-1"><a class="header-anchor" href="#_7-mac-地址" aria-hidden="true">#</a> 7. MAC 地址</h2><h3 id="_7-1-mac-地址" tabindex="-1"><a class="header-anchor" href="#_7-1-mac-地址" aria-hidden="true">#</a> 7.1 MAC 地址</h3><p>MAC 地址是以太网的 MAC 子层所使用的地址，属于数据链路层。</p><ul><li>对于点对点信道的数据链路层不需要地址。</li><li>使用广播信道的数据链路层则需要使用 MAC 地址。</li></ul><p><img src="http://images.hellocode.top/3-79.47v16lx74240.png" alt="3-79" loading="lazy"></p>',9),Cs=s("li",null,"当多个主机连接在同一个广播信道上,要想实现两个主机之间的通信，则每个主机都必须有一个唯- -的标识， 即一个数据链路层地址;",-1),Ts=s("h3",{id:"_7-2-ieee-802局域网的mac地址格式",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_7-2-ieee-802局域网的mac地址格式","aria-hidden":"true"},"#"),a(" 7.2 IEEE 802局域网的MAC地址格式")],-1),Ps=s("p",null,"IEEE 802 局域网 MAC 地址格式：（共 6 字节，48位）",-1),qs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-80.ezsn5iuuvzs.png",alt:"3-80",loading:"lazy"})],-1),Ds=s("p",null,[s("img",{src:"http://images.hellocode.top/3-81.1szmag9p42ow.png",alt:"3-81",loading:"lazy"})],-1),Is=n('<h3 id="_7-3-ieee-802-局域网-mac-地址发送顺序" tabindex="-1"><a class="header-anchor" href="#_7-3-ieee-802-局域网-mac-地址发送顺序" aria-hidden="true">#</a> 7.3 IEEE 802 局域网 MAC 地址发送顺序</h3><p><img src="http://images.hellocode.top/3-82.7kltoy6kmqc0.png" alt="3-82" loading="lazy"></p><h3 id="_7-4-单播-多播-广播地址举例" tabindex="-1"><a class="header-anchor" href="#_7-4-单播-多播-广播地址举例" aria-hidden="true">#</a> 7.4 单播/多播/广播地址举例</h3><h4 id="_1-单播地址" tabindex="-1"><a class="header-anchor" href="#_1-单播地址" aria-hidden="true">#</a> （1）单播地址</h4><p>主机B将本主机地址填入单播帧源地址，主机C地址填入目的地址，形成该单播帧。</p><p><img src="http://images.hellocode.top/3-83.2n84zt5t6fc0.png" alt="3-83" loading="lazy"></p><h4 id="_2-广播地址" tabindex="-1"><a class="header-anchor" href="#_2-广播地址" aria-hidden="true">#</a> （2）广播地址</h4><p>主机B将本机地址填入源地址，将 <code>FF-FF-FF-FF-FF-FF</code> 广播地址填入目的地址，构成广播帧。</p><p><img src="http://images.hellocode.top/3-84.4vs3mdbc74i0.png" alt="3-84" loading="lazy"></p><h4 id="_3-多播地址" tabindex="-1"><a class="header-anchor" href="#_3-多播地址" aria-hidden="true">#</a> （3）多播地址</h4><p>主机A发送含有多播地址的多播帧，其他主机根据自己的多播组列表，判断是否接收帧。</p><p><img src="http://images.hellocode.top/3-85.5q96pqot6d80.png" alt="3-85" loading="lazy"></p><h2 id="_8-ip-地址" tabindex="-1"><a class="header-anchor" href="#_8-ip-地址" aria-hidden="true">#</a> 8. IP 地址</h2><blockquote><p>由于MAC地址、IP地址、ARP协议三者联系紧密，故提前一起讲述。</p></blockquote><h3 id="_8-1-初识-ip-地址" tabindex="-1"><a class="header-anchor" href="#_8-1-初识-ip-地址" aria-hidden="true">#</a> 8.1 初识 IP 地址</h3><ul><li>IP地址是因特网（Internet）上的 <strong>主机和路由器</strong> 所使用的地址， 用于标识两部分信息: <ul><li><strong>网络编号</strong>：标识因特网上数以百万计的网络</li><li><strong>主机编号</strong>：标识同一网络上不同主机（或路由器各接口）</li></ul></li><li>很显然， 之前介绍的MAC地址不具备区分不同网络的功能 <ul><li>如果只是一个单独的网络，不接入因特网，可以只使用MAC地址（这不是一般用户的应用方式）</li><li>如果主机所在的网络要接入因特网，则IP地址和MAC地址都需要使用。</li></ul></li></ul><p><img src="http://images.hellocode.top/3-86.1rgrw1lfm5s0.png" alt="3-86" loading="lazy"></p><h3 id="_8-1-从网络体系结构看ip地址与mac地址" tabindex="-1"><a class="header-anchor" href="#_8-1-从网络体系结构看ip地址与mac地址" aria-hidden="true">#</a> 8.1 从网络体系结构看IP地址与MAC地址</h3><p>IP 地址属于网络层，MAC 地址属于数据链路层。</p><p><img src="http://images.hellocode.top/3-87.5olppozu4ew0.png" alt="3-87" loading="lazy"></p><h3 id="_8-2-数据包转发过程中ip地址与mac地址的变化情况" tabindex="-1"><a class="header-anchor" href="#_8-2-数据包转发过程中ip地址与mac地址的变化情况" aria-hidden="true">#</a> 8.2 数据包转发过程中IP地址与MAC地址的变化情况</h3>',21),Ls=s("p",null,[s("img",{src:"http://images.hellocode.top/3-88.cfqcetmeug8.png",alt:"3-88",loading:"lazy"})],-1),Ns=n('<h3 id="_8-3-测试题" tabindex="-1"><a class="header-anchor" href="#_8-3-测试题" aria-hidden="true">#</a> 8.3 测试题</h3><p><img src="http://images.hellocode.top/3-89.58buq2ceu340.png" alt="3-89" loading="lazy"></p><h2 id="_9-arp-地址转移协议" tabindex="-1"><a class="header-anchor" href="#_9-arp-地址转移协议" aria-hidden="true">#</a> 9. ARP 地址转移协议</h2><h3 id="_9-1-介绍" tabindex="-1"><a class="header-anchor" href="#_9-1-介绍" aria-hidden="true">#</a> 9.1 介绍</h3><ul><li>高速缓存表</li></ul><p><img src="http://images.hellocode.top/3-92.1nsjcorozveo.png" alt="3-92" loading="lazy"></p><ul><li>ARP 协议：由 IP 地址获取 MAC 地址的一种协议。</li></ul><p><img src="http://images.hellocode.top/3-90.6k578pmwods0.png" alt="3-90" loading="lazy"></p><h3 id="_9-2-arp-地址解析协议原理" tabindex="-1"><a class="header-anchor" href="#_9-2-arp-地址解析协议原理" aria-hidden="true">#</a> 9.2 ARP：地址解析协议原理</h3><p>B 发送带有广播 MAC 地址广播帧，以获取指定 IP 地址的固化 MAC 地址。</p><p><img src="http://images.hellocode.top/3-91.557pb0kwgn80.png" alt="3-91" loading="lazy"></p><h3 id="_9-3-高速缓存表分类" tabindex="-1"><a class="header-anchor" href="#_9-3-高速缓存表分类" aria-hidden="true">#</a> 9.3 高速缓存表分类</h3><ul><li>动态：自动获取，生命周期默认为两分钟;</li><li>静态：手工设置，不同操作系统下的生命周期不同，例如系统重启后不存在或系统重启后依然有效。</li></ul>',13),Rs=n('<p><img src="http://images.hellocode.top/3-93.43wjzvoyiwy0.png" alt="3-93" loading="lazy"></p><h2 id="_10-集线器和交换机的区别" tabindex="-1"><a class="header-anchor" href="#_10-集线器和交换机的区别" aria-hidden="true">#</a> 10. 集线器和交换机的区别</h2><h3 id="_10-1-早期总线型以太网" tabindex="-1"><a class="header-anchor" href="#_10-1-早期总线型以太网" aria-hidden="true">#</a> 10.1 早期总线型以太网</h3>',3),Ss=s("p",null,[s("img",{src:"http://images.hellocode.top/3-94.5mnkqpbsz3s.png",alt:"3-94",loading:"lazy"})],-1),Vs=s("h3",{id:"_10-2-使用双绞线和集线器hub的星型以太网",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_10-2-使用双绞线和集线器hub的星型以太网","aria-hidden":"true"},"#"),a(" 10.2 使用双绞线和集线器HUB的星型以太网")],-1),Bs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-95.3l53bqs5qjo0.png",alt:"3-95",loading:"lazy"})],-1),Ws=s("h3",{id:"_10-3-使用集线器hub在物理层扩展以太网",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_10-3-使用集线器hub在物理层扩展以太网","aria-hidden":"true"},"#"),a(" 10.3 使用集线器HUB在物理层扩展以太网")],-1),Es=s("p",null,[s("img",{src:"http://images.hellocode.top/3-96.67a4hxxfsx00.png",alt:"3-96",loading:"lazy"})],-1),Fs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-97.3wsqushigvk0.png",alt:"3-97",loading:"lazy"})],-1),js=s("h3",{id:"_10-4-以太网交换机",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_10-4-以太网交换机","aria-hidden":"true"},"#"),a(" 10.4 以太网交换机")],-1),Us=s("li",null,[a("以太网交换机- -般都具有多种速率的接口，例如:"),s("br"),a(" 10Mb/s、100Mb/s、 1Gb/s、 10Gb/s接口的多种组合。")],-1),Ks=n('<p><img src="http://images.hellocode.top/3-98.2arqeu089cys.png" alt="3-98" loading="lazy"></p><h3 id="_10-5-集线器和交换机的区别" tabindex="-1"><a class="header-anchor" href="#_10-5-集线器和交换机的区别" aria-hidden="true">#</a> 10.5 集线器和交换机的区别</h3><h4 id="_1-单播-一个" tabindex="-1"><a class="header-anchor" href="#_1-单播-一个" aria-hidden="true">#</a> （1）单播（一个）</h4><p><img src="http://images.hellocode.top/3-99.55g65f5lovg0.png" alt="3-99" loading="lazy"></p><h4 id="_2-广播" tabindex="-1"><a class="header-anchor" href="#_2-广播" aria-hidden="true">#</a> （2）广播</h4><p><img src="http://images.hellocode.top/3-100.3mg5p0gvn200.png" alt="3-100" loading="lazy"></p><h4 id="_3-单播-两个" tabindex="-1"><a class="header-anchor" href="#_3-单播-两个" aria-hidden="true">#</a> （3）单播（两个）</h4><p>两个同时进行的单播，对于集线器，会发生碰撞。而对于交换机，则不会产生碰撞。</p><p><img src="http://images.hellocode.top/3-101.3a9p4kvm6ok0.png" alt="3-101" loading="lazy"></p><h3 id="_10-6-集线器与交换机对比" tabindex="-1"><a class="header-anchor" href="#_10-6-集线器与交换机对比" aria-hidden="true">#</a> 10.6 集线器与交换机对比</h3>',10),Hs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-102.6vv4arwseyg0.png",alt:"3-102",loading:"lazy"})],-1),Gs=s("h4",{id:"_1-集线器hub",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-集线器hub","aria-hidden":"true"},"#"),a(" （1）集线器HUB")],-1),Os=s("h4",{id:"_2-交换机switch",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-交换机switch","aria-hidden":"true"},"#"),a(" （2）交换机SWITCH")],-1),Qs=s("h2",{id:"_11-以太网交换机自学习和转发帧的过程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_11-以太网交换机自学习和转发帧的过程","aria-hidden":"true"},"#"),a(" 11. 以太网交换机自学习和转发帧的过程")],-1),Js=s("p",null,[s("img",{src:"http://images.hellocode.top/3-103.pnszm7tr940.png",alt:"3-103",loading:"lazy"})],-1),Xs=s("br",null,null,-1),Ys=s("ol",null,[s("li",null,"交换机的接口改接了另一台主机"),s("li",null,"主机更换了网卡")],-1),Zs=s("p",null,[s("img",{src:"http://images.hellocode.top/3-104.345c2ut9tcm0.png",alt:"",loading:"lazy"})],-1),$s=n('<p><img src="http://images.hellocode.top/3-105.1ayg20fghrds.png" alt="3-105" loading="lazy"></p><h2 id="_12-以太网交换机的生成树协议stp" tabindex="-1"><a class="header-anchor" href="#_12-以太网交换机的生成树协议stp" aria-hidden="true">#</a> 12. 以太网交换机的生成树协议STP</h2><h3 id="_12-1-背景" tabindex="-1"><a class="header-anchor" href="#_12-1-背景" aria-hidden="true">#</a> 12.1 背景</h3><p><img src="http://images.hellocode.top/3-106.cbnvap4f5h.png" alt="3-106" loading="lazy"></p><h3 id="_12-2-生成树协议stp" tabindex="-1"><a class="header-anchor" href="#_12-2-生成树协议stp" aria-hidden="true">#</a> 12.2 生成树协议STP</h3><p><img src="http://images.hellocode.top/3-106.cbnvap4f5h.png" alt="3-106" loading="lazy"></p><h2 id="_13-虚拟局域网vlan" tabindex="-1"><a class="header-anchor" href="#_13-虚拟局域网vlan" aria-hidden="true">#</a> 13. 虚拟局域网VLAN</h2><h3 id="_13-1-虚拟局域网概述" tabindex="-1"><a class="header-anchor" href="#_13-1-虚拟局域网概述" aria-hidden="true">#</a> 13.1 虚拟局域网概述</h3>',8),sa=s("p",null,[s("img",{src:"http://images.hellocode.top/3-108.6gbqu279nyw0.png",alt:"3-108",loading:"lazy"})],-1),aa=s("p",null,[a("一种方法是使用 "),s("strong",null,"路由器"),a("，路由器工作在 "),s("strong",null,"网络层"),a("，"),s("strong",null,"默认情况下不对广播数据包进行转发"),a("。")],-1),la=s("p",null,[s("img",{src:"http://images.hellocode.top/3-109.77efv0entx40.png",alt:"3-109",loading:"lazy"})],-1),ta=n('<p><img src="http://images.hellocode.top/3-110.43m49ag3f240.png" alt="3-110" loading="lazy"></p><h3 id="_13-2-虚拟局域网的实现机制" tabindex="-1"><a class="header-anchor" href="#_13-2-虚拟局域网的实现机制" aria-hidden="true">#</a> 13.2 虚拟局域网的实现机制</h3><h4 id="ieee-802-1q帧" tabindex="-1"><a class="header-anchor" href="#ieee-802-1q帧" aria-hidden="true">#</a> IEEE 802.1Q帧</h4>',3),ea=s("ul",null,[s("li",null,"以太网V2的MAC帧（最大长度1518字节）"),s("li",null,"插入VLAN标记后的802.1Q帧（最大长度1522字节）")],-1),na=s("p",null,[s("img",{src:"http://images.hellocode.top/3-111.68elddwjhu80.png",alt:"3-111",loading:"lazy"})],-1),ia=s("li",null,[a("VID的取值范围是0 ~ 4095（0 ~ "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"12")]),s("mo",null,"−"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"2^{12}-1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8974em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"12")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a("）")],-1),ra=s("h4",{id:"交换机的端口类型",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#交换机的端口类型","aria-hidden":"true"},"#"),a(" 交换机的端口类型")],-1),ha=s("li",null,"Hybrid",-1),oa=s("li",null,[a("交换机各端口的缺省VLAN ID "),s("ul",null,[s("li",null,"在思科交换机上称为 Native VLAN，即本征VLAN。"),s("li",null,"在华为交换机.称为 Port VLAN ID，即端口VLAN ID，简记为PVID。")])],-1),pa=s("h5",{id:"_1-access-端口",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-access-端口","aria-hidden":"true"},"#"),a(" （1）Access 端口")],-1),ca=s("li",null,"Access端口只能属于一个VLAN",-1),ma=s("br",null,null,-1),da=s("p",null,[s("img",{src:"http://images.hellocode.top/3-112.29fs52xkk44k.png",alt:"3-112",loading:"lazy"})],-1),ga=s("h5",{id:"_2-trunk-端口",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-trunk-端口","aria-hidden":"true"},"#"),a(" （2）Trunk 端口")],-1),ua=s("li",null,"Trunk端口可以属于多个VLAN",-1),_a=s("li",null,"用户可以设置Trunk端口的PVID值。默认情况下，Trunk端口的PVID值为1。",-1),ya=s("p",null,[s("img",{src:"http://images.hellocode.top/3-113.3vsphrqmy820.png",alt:"3-113",loading:"lazy"})],-1),ba=s("p",null,[s("img",{src:"http://images.hellocode.top/3-114.6t9rx42nid40.png",alt:"3-114",loading:"lazy"})],-1),xa=s("p",null,[s("img",{src:"http://images.hellocode.top/3-115.2oajfghyk2u0.png",alt:"3-115",loading:"lazy"})],-1),va=s("h5",{id:"_3-hybrid-端口-了解",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-hybrid-端口-了解","aria-hidden":"true"},"#"),a(" （3）Hybrid 端口（了解）")],-1),fa=s("p",null,[s("img",{src:"http://images.hellocode.top/3-116.4zlnkmsdy8c0.png",alt:"3-116",loading:"lazy"})],-1);function za(wa,ka){const r=i("ExternalLinkIcon"),t=i("font");return o(),p("div",null,[m,s("ol",null,[d,s("li",null,[g,s("ul",null,[s("li",null,[a("因特网所有的RFC(Request For Comments)技术文档都可从因特网上免费下载;("),s("a",u,[a("http://www.ietf.org/rfc.html"),l(r)]),a(")")]),_])]),y]),b,x,v,l(t,{color:"red"},{default:e(()=>[a("网络时延 = 发送时延 + 传播时延 + 处理时延")]),_:1}),f,l(t,{color:"red"},{default:e(()=>[a("发送时延(s) = 分组长度(b) / 发送速率(b/s)")]),_:1}),z,w,l(t,{color:"red"},{default:e(()=>[a("传播时延(s) = 信道长度(m) / 电磁波传播速率(m/s)")]),_:1}),k,M,l(t,{color:"red"},{default:e(()=>[a("时延带宽积 = 传播时延 * 带宽")]),_:1}),A,C,T,P,q,D,l(t,{color:"red"},{default:e(()=>[a("总时延 = n个分组的发送时延 + 1 个分组的发送时延 * (m-1) + 1段链路的传播时延 * m")]),_:1}),I,L,N,R,S,V,B,W,l(t,{color:"red"},{default:e(()=>[a("数据传输速率(比特/秒) = 波特率(码元传输速率，码元/秒) * 每个码元携带的信息量(比特/码元)")]),_:1}),E,F,j,U,K,H,G,O,Q,J,X,Y,Z,$,ss,s("p",null,[a("（1）"),l(t,{color:"red"},{default:e(()=>[a("多址接入（MA）")]),_:1}),a("：多个站连接在一条总线上，竞争使用")]),as,s("p",null,[a("（2）"),l(t,{color:"red"},{default:e(()=>[a("载波监听（CS）")]),_:1}),a("：每一个站在发送帧之前先要检测一下总线上是否有其他站点在发送帧（"),ls,a("）")]),ts,es,s("p",null,[a("（3）"),l(t,{color:"red"},{default:e(()=>[a("碰撞检测（CD）")]),_:1}),a("：每一个正在发送帧的站边发送 "),ns,is,a(" 一旦发现总线，上出现碰撞，则立即停止发送，退避一段随机时间后再次发送("),rs,a(" ）。")]),hs,s("p",null,[a("（4）"),l(t,{color:"red"},{default:e(()=>[a("强化碰撞")]),_:1})]),os,ps,cs,s("ul",null,[ms,s("li",null,[a("因此，以太网的端到端往返传播时延 "),ds,a(" 称为 "),l(t,{color:"red",size:"4"},{default:e(()=>[a("争用期")]),_:1}),a(" 或 "),gs]),us,_s,ys]),bs,xs,vs,l(t,{color:"red",size:"4"},{default:e(()=>[a("显然，以太网的帧长不能太短！")]),_:1}),s("ul",null,[fs,s("li",null,[a("以太网的 "),l(t,{color:"red",size:"3"},{default:e(()=>[a("最小帧长确保了主机可在帧发送完成之前就检测到该帧的发送过程中是否遭遇了碰撞")]),_:1}),s("ul",null,[zs,s("li",null,[a("如果在争用期内检测到碰撞，就立即中止发送，这时已经发送出去的数据一定小于64字节，因此 "),l(t,{color:"red",size:"3"},{default:e(()=>[a("凡长度小于64字节的帧都是由于碰撞而异常中止的无效帧。")]),_:1})])])])]),l(t,{size:"4",color:"green"},{default:e(()=>[a("最小帧长计算公式")]),_:1}),l(t,{color:"red"},{default:e(()=>[a(" 最小帧长 = 争用期 * 数据传输速率 ")]),_:1}),ws,ks,Ms,l(t,{size:"4",color:"red"},{default:e(()=>[a("解析")]),_:1}),As,s("ul",null,[Cs,s("li",null,[a("在每个主机发送的 "),l(t,{size:"4",color:"blue"},{default:e(()=>[a("帧中必须携带标识发送主机和接收主机的地址")]),_:1}),a("。由于这类地址是用于媒体接入控制 MAC(Media Access Control)，因此这类地址被称为 "),l(t,{size:"4",color:"blue"},{default:e(()=>[a("MAC地址")]),_:1}),a(" -MAC 地址一般被固化在网卡(网络适配器)的电可擦可编程只读存储器EEPROM中，因此MAC地址也 被称为 "),l(t,{size:"4",color:"blue"},{default:e(()=>[a("硬件地址")]),_:1}),s("ul",null,[s("li",null,[a("MAC 地址有时也被称为 "),l(t,{size:"4",color:"blue"},{default:e(()=>[a("物理地址")]),_:1}),a("。请注意："),l(t,{size:"4",color:"red"},{default:e(()=>[a("这并不意味着MAC地址属于网络体系结构中的物理层！")]),_:1})])])]),s("li",null,[a("般情况下，用户主机会包含两个网络适配器：有线局域网适配器(有线网卡)和无线局域网适配器(无线 网卡)。每个网络适配器都有一个全球唯一的 MAC 地址。 而交换机和路由器往往拥有更多的网络接口，所以 会拥有更多的MAC地址。综上所述，严格来说，"),l(t,{size:"4",color:"red"},{default:e(()=>[a("MAC地址是对网络上各接口的唯一标识，而不是对网络上各设备的唯一标识。")]),_:1})])]),Ts,Ps,l(t,{size:"4",color:"blue"},{default:e(()=>[a("前 3 位字节（OUI） + 后 3 位（扩展标识符）")]),_:1}),qs,l(t,{size:"4",color:"blue"},{default:e(()=>[a("第 1 位字节的低位为 1、3、5、7、9、B、D，则为多播地址，48 位全为 1 时，则为广播地址。")]),_:1}),Ds,l(t,{size:"4",color:"red"},{default:e(()=>[a("提问：EU1-48地址空间会耗尽吗？")]),_:1}),a(),l(t,{size:"4",color:"blue"},{default:e(()=>[a("答：对于使用EUI-48空间的应用程序，IEEE的目标寿命为100年(直到2080)，但是鼓励采用EUI-64作为替代。")]),_:1}),Is,s("ul",null,[s("li",null,[l(t,{size:"4",color:"blue"},{default:e(()=>[a("数据包转发过程中源IP地址和目的IP地址保持不变")]),_:1})]),s("li",null,[l(t,{size:"4",color:"blue"},{default:e(()=>[a("数据包转发过程中源MAC地址和目的MAC地址逐个链路(或逐个网络)改变。")]),_:1})])]),Ls,l(t,{size:"4",color:"orange"},{default:e(()=>[a("暂且这么认为")]),_:1}),a("：H1知道应该把数据包传给R1，由R1帮其把数据包转发出去。H1知道R1相应接口的IP地址为IP3，但不知道其对应的MAC地址是什么! "),Ns,l(t,{color:"red",size:"4"},{default:e(()=>[a("ARP 协议只在同一段链路间使用。")]),_:1}),Rs,s("p",null,[a("传统以太网是使用 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("粗同轴电缆")]),_:1}),a("的总线以太网，后面转变为较为便宜的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("细同轴电缆")]),_:1}),a("。最后 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("淘汰")]),_:1}),a("，被双绞线代替。")]),Ss,Vs,s("ul",null,[s("li",null,[a("使用集线器的以太网在 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("逻辑上仍是一个总线网，各站共享总线资源，使用的还是CSMA/CD协议")]),_:1})]),s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("集线器只工作在物理层")]),_:1}),a("，它的每个接口仅简单地转发比特，不进行碰撞检测（由各站的网卡检测）")]),s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("集线器一般都有少量的容错能力和网络管理功能")]),_:1}),a("。例如，若网络中某个网卡出了故障，不停地发送帧。此时，集线器可以检测到这个问题，在内部断开与出故障网卡的连线，使整个以太网仍然能正常工作。")])]),Bs,Ws,s("p",null,[a("如图，在局域网扩展以前，三个小局域网 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("各自是一个广播域")]),_:1}),a("，也各自成 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("一个碰撞域")]),_:1}),a("。")]),Es,s("p",null,[a("通过一个“主干”集线器将三个系互连，成为一个更大的以太网。新的以太网还是一个 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("更大的广播域")]),_:1}),a("，也是一个 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("更大的碰撞域")]),_:1}),a("。")]),Fs,js,s("p",null,[a("前提："),l(t,{size:"3",color:"orange"},{default:e(()=>[a("① 忽略ARP过程 ②假设交换机的帧交换表已“学习好了”")]),_:1})]),s("ul",null,[s("li",null,[a("以太网交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("通常都有多个接口")]),_:1}),a("。每个接口都可以直接与一台主机或另一个以太网交换机相连。一般都工作在 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("全双工方式")]),_:1}),a("。")]),s("li",null,[a("以太网交换机具有并行性，能 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("同时连通多对接口")]),_:1}),a("，使多对主机能同时通信，"),l(t,{size:"3",color:"red"},{default:e(()=>[a("无碰撞（不使用CSMA/CD协议）")]),_:1}),a("。")]),Us,s("li",null,[a("以太网交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("工作在数据链路层（也包括物理层）")]),_:1}),a("， 它收到帧后，在帧交换表中 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("查找帧的目的MAC地址所对应的接口号")]),_:1}),a("，然后通过该接口转发帧。")]),s("li",null,[a("以太网交换机使一种即插即用设备，其内部的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("帧交换表")]),_:1}),a(" 是通过 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("自学习算法")]),_:1}),a(" 自动地逐渐建立起来的。")]),s("li",null,[a("帧的两种转发方式: "),s("ol",null,[s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("存储转发")]),_:1})]),s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("直通交换")]),_:1}),a("：采用基于硬件的交叉矩阵（交换时延非常小，但不检查帧是否有差错）")])])])]),Ks,s("ul",null,[s("li",null,[a("相同点，集线器和交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("都扩大了广播域")]),_:1})]),s("li",null,[a("不同点，集线器扩大了碰撞域（冲突域），"),l(t,{size:"3",color:"red"},{default:e(()=>[a("而交换机没有扩大碰撞域")]),_:1})])]),Hs,Gs,s("ul",null,[s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("早期")]),_:1}),a(" 以太网的互连设备")]),s("li",null,[a("工作在OSI体系结构的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("物理层")]),_:1})]),s("li",null,[a("对接收到的信号进行 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("放大、转发")]),_:1})]),s("li",null,[a("使用集线器作为互连设备的以太网仍然 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("属于共享总线式以太网")]),_:1}),a("。集线器互连起来的所有主机共享总线带宽，属于同一个碰撞域和广播域。")]),s("li",null,[a("目前，集线器已 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("被淘汰")]),_:1}),a("。")])]),Os,s("ul",null,[s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("目前")]),_:1}),a(" 以太网中使用最广泛的互连设备")]),s("li",null,[a("工作在OSI体系结构的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("数据链路层（也包括物理层）")]),_:1})]),s("li",null,[a("根据 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("MAC地址")]),_:1}),a(" 对帧进行转发")]),s("li",null,[a("使用交换机作为互连设备的以太网，称为 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("交换式以太网")]),_:1}),a("。交换机可以根据MAC地址 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("过滤")]),_:1}),a(" 帧，即隔离碰撞域。")]),s("li",null,[a("交换机的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("每个接口是一个独立的碰撞域")]),_:1})]),s("li",null,[a("交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("隔离碰撞域")]),_:1}),a(" 但 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("不隔离广播域(VLAN除外）")]),_:1})])]),Qs,l(t,{size:"5",color:"orange"},{default:e(()=>[a("前提")]),_:1}),a(),l(t,{size:"3",color:"orange"},{default:e(()=>[a("假设各主机知道网络中其他各主机的MAC地址（无需进行ARP）")]),_:1}),s("ul",null,[s("li",null,[a("以太网交换机工作在 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("数据链路层（也包括物理层）")]),_:1})]),s("li",null,[a("以太网交换机收到帧后，在帧交换表中查找 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("帧的目的MAC地址所对应的接口号")]),_:1}),a("，然后通过该接口转发帧。")]),s("li",null,[a("以太网交换机是一种即插即用设备，刚上电启动时其内部的帧交换表是空的。随着网络中各主机间的通信，以太网交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("通过自学习算法自动逐渐建立起帧交换表")]),_:1}),a("。")])]),Js,l(t,{size:"5",color:"red"},{default:e(()=>[a("具体过程")]),_:1}),s("ol",null,[s("li",null,[a("收到帧后进行 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("登记")]),_:1}),a("。登记的内容为帧的源MAC地址及进入交换机的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("接口号")]),_:1})]),s("li",null,[a("根据 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("帧的目的MAC地址")]),_:1}),a(" 和交换机的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("帧交换表")]),_:1}),a(" 对帧进行 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("转发")]),_:1}),a("，有以下三种情况： "),s("ul",null,[s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("明确转发")]),_:1}),a("：交换机知道应当从哪个(或哪些)接口转发该帧（单播,多播,广播）")]),s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("盲目转发")]),_:1}),a("：交换机不知道 应当从哪个端口转发帧，只能将其通过除进入交换机的接口外的其他所有接口转发（也称为泛洪）。")]),s("li",null,[l(t,{size:"3",color:"red"},{default:e(()=>[a("明确丢弃")]),_:1}),a("：交换机知道不应该转发该帧，将其丢弃。")])])])]),l(t,{size:"5",color:"red"},{default:e(()=>[a("注意")]),_:1}),s("p",null,[a("每条记录都有自己的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("有效时间")]),_:1}),a("，到期自动删除！这是因为 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("MAC地址与交换机接口的对应关系并不是永久性的！")]),_:1}),Xs,a(" 具体可能原因如下：")]),Ys,l(t,{size:"5",color:"blue"},{default:e(()=>[a("习题")]),_:1}),Zs,l(t,{size:"5",color:"red"},{default:e(()=>[a("解析")]),_:1}),$s,l(t,{size:"4",color:"red"},{default:e(()=>[a("广播风暴会浪费网络资源和各主机的CPU资源！")]),_:1}),sa,s("p",null,[a("但是 "),l(t,{size:"4",color:"blue"},{default:e(()=>[a("网络中会频繁出现广播信息")]),_:1}),a("，于是就需要划分广播域。")]),aa,la,s("p",null,[a("但是路由器的成本太高，因此 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("虚拟局域网VLAN技术")]),_:1}),a(" 应运而生。")]),l(t,{size:"3",color:"red"},{default:e(()=>[a("虚拟局域网VLAN")]),_:1}),a("（Virtual Local Area Network）是一种将局域网内的 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("设备划分成与物理位置无关的逻辑组的技术，这些逻辑组具有某些共同的需求")]),_:1}),a("。"),ta,s("ul",null,[s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("IEEE 802.1Q帧")]),_:1}),a("（也称Dot One Q帧）对以太网的MAC帧格式进行了扩展，插入了 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("4字节的VLAN标记。")]),_:1}),ea])]),na,s("ul",null,[s("li",null,[s("p",null,[a("VLAN标记的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("最后12比特")]),_:1}),a("称为 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("VLAN标识符VID")]),_:1}),a("，它唯一地标志了以太网帧属于哪一一个VLAN。")]),s("ul",null,[ia,s("li",null,[a("0和4095都不用来表示VLAN，因此用于表示VLAN的 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("VID的有效取值范围是 1~4094。")]),_:1})])])]),s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("802.1Q帧是由交换机来处理的，而不是用户主机来处理的。")]),_:1}),s("ul",null,[s("li",null,[a("当交换机收到 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("普通的以太网帧")]),_:1}),a("时， 会将其插入4字节的VLAN标记转变为802.1Q帧，简称 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("“打标签”")]),_:1}),a("。")]),s("li",null,[a("当交换机 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("转发802.1Q帧")]),_:1}),a("时， "),l(t,{size:"3",color:"red"},{default:e(()=>[a("可能")]),_:1}),a("会删除其4字节VLAN标记转变为普通以太网帧，简称 "),l(t,{size:"3",color:"red"},{default:e(()=>[a("“去标签”")]),_:1})])])])]),ra,s("ul",null,[s("li",null,[a("交换机的端口类型有以下三种: "),s("ul",null,[s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("Access")]),_:1})]),s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("Trunk")]),_:1})]),ha])]),oa]),pa,s("ul",null,[s("li",null,[a("Accss端口一-般用于 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("连接用户计算机")]),_:1})]),ca,s("li",null,[a("Access端口的 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("PVID值与端口所属VLAN的ID相同（默认为1）")]),_:1})]),s("li",null,[a("Access端口接收处理方法: 一般只接受“未打标签”的普通以太网MAC帧。"),ma,a(" 根据接收帧的端口的PVID给帧 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("“打标签”")]),_:1}),a("，即插入4字节VLAN标记字段，字段中的 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("VID取值与端口的PVID取值相等")]),_:1}),a("。")]),s("li",null,[a("Access端口发送处理方法： 若帧中的VID与端口的PVID相等，则 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("“去标签”")]),_:1}),a(" 并转发该帧；"),l(t,{size:"4",color:"red"},{default:e(()=>[a("否则不转发")]),_:1}),a("。")])]),da,ga,s("ul",null,[s("li",null,[a("Trunk端口- -般 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("用于交换机之间或交换机与路由器之间的互连")]),_:1})]),ua,_a,s("li",null,[a("Trunk端口发送处理方法： "),s("ul",null,[s("li",null,[a("对 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("VID等于PVID的帧，“去标签” 再转发")]),_:1})]),s("li",null,[a("对 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("VID不等于PVID的帧，直接转发")]),_:1})])])]),s("li",null,[a("Trunk端口接收处理方法： "),s("ul",null,[s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("接收 “未打标签” 的帧")]),_:1}),a("，根据接收帧的端口的PVID给帧 "),l(t,{size:"4",color:"red"},{default:e(()=>[a("“打标签”")]),_:1}),a("，即插入4字节VLAN标记字段，字段中的VID取值与端口的PVID取值相等。")]),s("li",null,[l(t,{size:"4",color:"red"},{default:e(()=>[a("接收 “已打标签” 的帧")]),_:1})])])])]),ya,l(t,{size:"4",color:"blue"},{default:e(()=>[a("测试题")]),_:1}),ba,l(t,{size:"4",color:"red"},{default:e(()=>[a("解答")]),_:1}),xa,va,fa])}const Ca=h(c,[["render",za],["__file","network.html.vue"]]);export{Ca as default};
