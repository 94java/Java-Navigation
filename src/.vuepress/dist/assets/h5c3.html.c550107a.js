import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,e}from"./app.401b812b.js";const t={},i=e(`<h1 id="html5-css3" tabindex="-1"><a class="header-anchor" href="#html5-css3" aria-hidden="true">#</a> Html5&amp;Css3</h1><h2 id="_1-html5新特性" tabindex="-1"><a class="header-anchor" href="#_1-html5新特性" aria-hidden="true">#</a> 1. HTML5新特性</h2><h3 id="_1-1-html5新增语义化标签" tabindex="-1"><a class="header-anchor" href="#_1-1-html5新增语义化标签" aria-hidden="true">#</a> 1.1 HTML5新增语义化标签</h3><ul><li><code>&lt;header&gt;</code>：头部标签</li><li><code>&lt;nav&gt;</code>：导航标签</li><li><code>&lt;article&gt;</code>：内容标签</li><li><code>&lt;section&gt;</code>：定义文档某个区域</li><li><code>&lt;asider&gt;</code>：侧边栏标签</li><li><code>&lt;footer&gt;</code>：尾部标签</li></ul><h3 id="_1-2-html5新增多媒体标签" tabindex="-1"><a class="header-anchor" href="#_1-2-html5新增多媒体标签" aria-hidden="true">#</a> 1.2 HTML5新增多媒体标签</h3><h4 id="_1-视频-vedio" tabindex="-1"><a class="header-anchor" href="#_1-视频-vedio" aria-hidden="true">#</a> 1. 视频 <code>&lt;vedio&gt;</code></h4><p>所有浏览器支持 mp4 格式。</p><ul><li><code>autoplay=&quot;autoplay&quot;</code></li><li><code>controls=&quot;controls&quot;</code> 显示控件</li><li><code>width</code> 设置宽度</li><li><code>height</code> 设置高度</li><li><code>loop=loop</code> 设置循环播放</li><li><code>preload=&quot;auto/none&quot;</code> 是否预加载</li><li><code>src=url</code> 视频地址</li><li><code>poster=url</code> 封面图片</li><li><code>muted=muted</code> 静音播放</li></ul><h4 id="_2-音频-audio" tabindex="-1"><a class="header-anchor" href="#_2-音频-audio" aria-hidden="true">#</a> 2. 音频 <code>&lt;audio&gt;</code></h4><p>所有浏览器支持 mp3 格式。</p><ul><li><code>controls</code>：显示控件</li><li><code>autoplay</code>：（谷歌禁用）</li><li><code>loop=loop</code> 设置循环播放</li></ul><h3 id="_1-3-html5-新增-input-类型" tabindex="-1"><a class="header-anchor" href="#_1-3-html5-新增-input-类型" aria-hidden="true">#</a> 1.3 HTML5 新增 input 类型</h3><ul><li><code>type=&quot;email&quot;</code></li><li><code>type=&quot;url&quot;</code></li><li><code>type=&quot;date&quot;</code></li><li><code>type=&quot;time&quot;</code></li><li><code>type=&quot;month&quot;</code></li><li><code>type=&quot;week&quot;</code></li><li><code>type=&quot;number&quot;</code></li><li><code>type=&quot;tel&quot;</code></li><li><code>type=&quot;search&quot;</code></li><li><code>type=&quot;color&quot;</code></li></ul><h3 id="_1-4-html5新增的表单属性" tabindex="-1"><a class="header-anchor" href="#_1-4-html5新增的表单属性" aria-hidden="true">#</a> 1.4 HTML5新增的表单属性</h3><table><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单拥有该属性表示其内容不能为空，必填</td></tr><tr><td>placeholder</td><td>提示文本</td><td>表单的提示信息</td></tr><tr><td>autofocus</td><td>autofocus</td><td>自动聚焦属性，页面加载完成自动聚焦到指定表单</td></tr><tr><td>autocomplete</td><td>off/on</td><td>当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项默认已经打开,如autocomplete=&quot;on&quot;,关闭autocomplete =&quot;off&quot; 需要放在表单内，同时加上name属性，同时成功提交</td></tr><tr><td>multiple</td><td>multiple</td><td>可以多选文件</td></tr></tbody></table><p>可以通过以下设置方式修改placeholder里面的字体颜色：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input::placeholder</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-css3-新特性" tabindex="-1"><a class="header-anchor" href="#_2-css3-新特性" aria-hidden="true">#</a> 2. CSS3 新特性</h2><h3 id="_2-1-css3-新增选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-css3-新增选择器" aria-hidden="true">#</a> 2.1 CSS3 新增选择器</h3><p>CSS3给我们新增了选择器，可以更加便捷，更加自由的选择元素。</p><ol><li>属性选择器</li><li>结构伪类选择器</li><li>伪元素选择器</li></ol><h3 id="_2-2-属性选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-属性选择器" aria-hidden="true">#</a> 2.2 属性选择器</h3><p>属性选择器可以根据元素特定属性的来选择元素。这样就可以不用借助于类或者id选择器。</p><table><thead><tr><th>简介</th><th>选择</th></tr></thead><tbody><tr><td><code>E[att]</code></td><td>选择具有att属性的E元素</td></tr><tr><td><code>E[att:val</code></td><td>选择具有att属性且属性值等于val的E元素</td></tr><tr><td><code>E[att^=val]</code></td><td>匹配具有att属性且值以val开头的E元素</td></tr><tr><td><code>E[att$=val]</code></td><td>匹配具有att属性且值以val结尾的E元素</td></tr><tr><td><code>E[att*=val]</code></td><td>匹配具有att属性且值中含有val的E元素</td></tr></tbody></table><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input[type=text]</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>&lt;input type=&quot;password&quot;&gt;
&lt;input type=&quot;text&quot;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>类选择器、属性选择器、伪类选择器的权重都为 10</p><h3 id="_2-3-结构伪类选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-结构伪类选择器" aria-hidden="true">#</a> 2.3 结构伪类选择器</h3><p>结构伪类选择器主要根据文档结构来选择器元素，常用于根据父级选择器里面的子元素。</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td><code>E: first-child</code></td><td>匹配父元素中的第一个子元素E</td></tr><tr><td><code>E: last-child</code></td><td>匹配父元素中最后一个E元素</td></tr><tr><td><code>E: nth-child(n)</code></td><td>匹配父元素中的第n个子元素E</td></tr><tr><td><code>E: first-of-type</code></td><td>指定类型E的第一个</td></tr><tr><td><code>E: last-of-type</code></td><td>指定类型E的最后一个</td></tr><tr><td><code>E: nth-of-type(n)</code></td><td>指定类型E的第n个</td></tr></tbody></table><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ul li:first-child</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">ul li:last-child</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">ul li:nth-child(5)</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点：<code>E: nth-child(key)</code></p><ul><li><code>key</code> 可以是整数、关键字（<code>even/odd</code>）、公式（<code>n/2n/2n+1</code>）</li></ul><table><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n-1</td><td>奇数</td></tr><tr><td>5n</td><td>5 10 15 ...</td></tr><tr><td>n+</td><td>5 6 7 8 ...</td></tr><tr><td>-n+5</td><td>前五个</td></tr></tbody></table><p>关于 <code>nth-of-type</code> 与 <code>nth-of-child</code></p><ol><li><code>div: nth-child</code> 会把所有的盒子都排列序号 执行的时候首先看 <code>:nth-child(1)</code> 之后回去看 前面 <code>div</code></li><li><code>div: nth-of-type</code> 会把指定元素的盒子排列序号 执行的时候首先看 div指定的元素 之后回去看 <code>:nth-of-type(1)</code> 第几个孩子</li></ol><p>区别：</p><ol><li>nth—child对父元素里面所有孩子排序选择（序号是固定的）先找到第n个孩子，然后看看是否和E匹配</li><li>nth—of—type对父元素里面指定子元素进行排序选择。先去匹配E ，然后再根据E找第n个孩子</li></ol><h3 id="_2-4-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_2-4-伪元素选择器" aria-hidden="true">#</a> 2.4 伪元素选择器</h3><p>伪元素选择器可以帮助我们利用CSS创建新标签元素，而不需要HTML标签，从而简化HTML结构。</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td><code>::before</code></td><td>在元素内部的前面插入内容</td></tr><tr><td><code>::after</code></td><td>在元素内部的后面插入内容</td></tr></tbody></table><p>注意：</p><ul><li>before 和 after 创建一个元素，但是属于行内元素</li><li>新创建的这个元素在文档树中是找不到的，所以我们称为伪元素</li><li>语法：<code>element：before{}</code></li><li>before 和 after 必须有 content 属性</li><li>before 在父元素内容的前面创建元素， after 在父元素内容的后面插入元素</li><li>伪元素选择器和标签选择器一样，权重为 1</li></ul><h4 id="_2-4-1-案例一-伪元素字体图标" tabindex="-1"><a class="header-anchor" href="#_2-4-1-案例一-伪元素字体图标" aria-hidden="true">#</a> 2.4.1 案例一：伪元素字体图标</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">div::after</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;icomoon&#39;</span><span class="token punctuation">;</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;\\e91b&#39;</span><span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-2-案例二-伪元素遮罩层" tabindex="-1"><a class="header-anchor" href="#_2-4-2-案例二-伪元素遮罩层" aria-hidden="true">#</a> 2.4.2 案例二：伪元素遮罩层</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.tudou::before</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .3<span class="token punctuation">)</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/arr.png<span class="token punctuation">)</span></span> no-repeat center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-3-案例三-伪元素清除浮动" tabindex="-1"><a class="header-anchor" href="#_2-4-3-案例三-伪元素清除浮动" aria-hidden="true">#</a> 2.4.3 案例三：伪元素清除浮动</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix::after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> 
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>双伪元素清除浮动</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix::before,
.clearfix::after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.clearfix::after</span> <span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-css3盒子模型" tabindex="-1"><a class="header-anchor" href="#_2-5-css3盒子模型" aria-hidden="true">#</a> 2.5 CSS3盒子模型</h3><p>CSS3中可以通过 box-sizing 来指定盒模型，有2个值：即可指定为 content-box，border-box ，这样我们计算盒子大小的方式就发生了改变。</p><p>可以分成两种情况：</p><ol><li><code>box-sizing：content-box</code> 盒子大小为 width + padding + border （以前默认的）</li><li><code>box-sizing: border-box</code> 盒子大小为 width 如果盒子模型我们改为了 box-sizing： border-box ，那padding 和 border就不会撑大盒子了（前提 padding 和 border 不会超过 width 宽度）</li></ol><h3 id="_2-6-css3-渐变" tabindex="-1"><a class="header-anchor" href="#_2-6-css3-渐变" aria-hidden="true">#</a> 2.6 CSS3 渐变</h3><p>CSS 渐变是 CSS3 图像模块中添加的新类型的图像。CSS 渐变允许您在 <strong>两个或多个指定颜色之间显示平滑过渡</strong>。 浏览器支持两种类型的渐变：</p><ul><li>线性渐变（Linear Gradients）：向下/向上/向左/向右/对角方向，用 <code>linear-gradient()</code> 函数定义</li><li>径向渐变（Radial Gradients）：由它们的中心定义，用 <code>radial-gradient()</code> 函数定义</li></ul><h4 id="_2-6-1-线性渐变" tabindex="-1"><a class="header-anchor" href="#_2-6-1-线性渐变" aria-hidden="true">#</a> 2.6.1 线性渐变</h4><p>语法</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>direction<span class="token punctuation">,</span> color1<span class="token punctuation">,</span> color2<span class="token punctuation">,</span> ...<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><ul><li><code>direction</code>：指定了颜色过度的方向，不写默认为从上到下，值可以为 <code>to bottom</code>、<code>to top</code>、<code>to right</code>、<code>to left</code>、<code>to bottom right</code> 等。</li><li><code>color1</code>：可以有多个 <code>color</code> 值，指定了颜色变化的范围。</li></ul><h3 id="_2-7-css3过渡-重点" tabindex="-1"><a class="header-anchor" href="#_2-7-css3过渡-重点" aria-hidden="true">#</a> 2.7 CSS3过渡（重点）</h3><p>过渡（transition）是CSS3中具有颠覆性的特征之一，我们可以在不使用Flash动画或JavaScript的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。</p><p>过渡动画：是从一个状态渐渐的过渡到另外一个状态 可以让我们页面更好看，更动感十足，虽然低版本浏览器不支持（ie9以下版本）但是不会影响页面布局。</p><p>我们现在经常和 :hover 一起搭配使用。</p><h4 id="_2-7-1-transition-的使用" tabindex="-1"><a class="header-anchor" href="#_2-7-1-transition-的使用" aria-hidden="true">#</a> 2.7.1 transition 的使用</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transition</span><span class="token punctuation">:</span> 要过渡的属性 花费时间 运动曲线 何时开始<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>属性：想要变化的css属性，宽度高度背景颜色内外边距都可以。如果想要所有的属性都变化过渡，写一个all就可以。</li><li>花费时间：单位是秒（必须写单位）比如 0.5s</li><li>运动曲线：默认是ease （可以省略）</li><li>何时开始：单位是秒（必须写单位）可以设置延迟触发时间默认是Os （可以省略）</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
    <span class="token comment">/* transition: width .5s, height .5s; */</span>
    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div:hover</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8-css3-的其他特性" tabindex="-1"><a class="header-anchor" href="#_2-8-css3-的其他特性" aria-hidden="true">#</a> 2.8 CSS3 的其他特性</h3><h4 id="_2-8-1-css3-滤镜-filter" tabindex="-1"><a class="header-anchor" href="#_2-8-1-css3-滤镜-filter" aria-hidden="true">#</a> 2.8.1 CSS3 滤镜 filter</h4><p>filter CSS属性将模糊或颜色偏移等图形效果应用于元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">filter</span><span class="token punctuation">:</span> 函数<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如： <code>filter： blur(5px);</code> blur 模糊处理数值越大越模糊</p><h4 id="_2-8-2-css3-calc函数" tabindex="-1"><a class="header-anchor" href="#_2-8-2-css3-calc函数" aria-hidden="true">#</a> 2.8.2 CSS3 calc函数</h4><p>此 CSS 函数让你在声明CSS属性值时执行一些计算。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100%-30px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 子盒子永远比父盒子小30px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>括号里面可以使用 <code>+ - * /</code> 来进行计算。</p><h2 id="_3-2d-转换" tabindex="-1"><a class="header-anchor" href="#_3-2d-转换" aria-hidden="true">#</a> 3. 2D 转换</h2><p>转换（<code>transform</code>）是 CSS3 中具有颠覆性的特征之一，可以实现元素的位移、旋转、缩放等效果。</p><p>转换可以理解为变形。</p><ul><li>移动：<code>translate</code></li><li>旋转：<code>rotate</code></li><li>缩放：<code>scale</code></li></ul><h3 id="_3-1-二维坐标系" tabindex="-1"><a class="header-anchor" href="#_3-1-二维坐标系" aria-hidden="true">#</a> 3.1 二维坐标系</h3><h3 id="_3-2-移动-translate" tabindex="-1"><a class="header-anchor" href="#_3-2-移动-translate" aria-hidden="true">#</a> 3.2 移动 translate</h3><p>语法</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 <code>x, y</code> 可以是百分数，为盒子自身的宽度或高度。</li></ul><p>重点</p><ul><li>定义 2D 转换中的移动，沿着X和Y轴移动元素</li><li>translate 最大的优点：不会影响到其他元素的位置</li><li>translate 中的百分比单位是相对于 自身元素 的 <code>trainslate:(50%，50%)</code></li><li>对行内标签没有效果</li></ul><h3 id="_3-3-让盒子实现水平和垂直居中" tabindex="-1"><a class="header-anchor" href="#_3-3-让盒子实现水平和垂直居中" aria-hidden="true">#</a> 3.3 让盒子实现水平和垂直居中</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*子绝父相*/</span>
<span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
<span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
<span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-旋转-rotate" tabindex="-1"><a class="header-anchor" href="#_3-4-旋转-rotate" aria-hidden="true">#</a> 3.4 旋转 rotate</h3><p>值为正数则顺时针旋转，为负数则逆时针旋转。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-5-2d-转换中心点-transform-origin" tabindex="-1"><a class="header-anchor" href="#_3-5-2d-转换中心点-transform-origin" aria-hidden="true">#</a> 3.5 2D 转换中心点 transform-origin</h3><p>我们可以通过设置 <code>transform-origin</code> 设置元素转换的中心点。</p><h4 id="_3-5-1-语法" tabindex="-1"><a class="header-anchor" href="#_3-5-1-语法" aria-hidden="true">#</a> 3.5.1 语法</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform-origin</span><span class="token punctuation">:</span> x y<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-5-2-重点" tabindex="-1"><a class="header-anchor" href="#_3-5-2-重点" aria-hidden="true">#</a> 3.5.2 重点</h4><ul><li>注意后面的参数 x 和 y 用空格隔开</li><li>x y 默认转换的中心点是元素的中心点（50% 50%）</li><li>还可以给 x y 设置像素或者方位名词（top bottom left right center）</li></ul><h3 id="_3-6-2d-转换之缩放-scale" tabindex="-1"><a class="header-anchor" href="#_3-6-2d-转换之缩放-scale" aria-hidden="true">#</a> 3.6 2D 转换之缩放 scale</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>x, y</code> 不跟单位的话，是指缩放的倍数。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数大于 <code>1</code> 则放大，小于 <code>1</code> 则缩小。</li><li>可以配合 <code>transform-origin</code> 使用，改变缩放中心。</li><li><code>scale</code> 的优势：不占空间</li></ul><h3 id="_3-7-2d-转换综合写法" tabindex="-1"><a class="header-anchor" href="#_3-7-2d-转换综合写法" aria-hidden="true">#</a> 3.7 2D 转换综合写法</h3><p>注意：</p><ol><li>同时使用多个转换，其格式为： <code>transform: translate(), rotate() scale()</code></li><li>其顺序会影转换的效果。（先旋转会改变坐标轴方向）</li><li>当我们同时有位移和其他属性的时候，记得要将位移放到最前.</li></ol><h2 id="_4-动画" tabindex="-1"><a class="header-anchor" href="#_4-动画" aria-hidden="true">#</a> 4. 动画</h2><p>动画( animation ) 是 CSS3 中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画，常用来实现复杂的动画效果。 相比较过渡，动画可以实现更多变化，更多控制，连续自动播放等效果。</p><h3 id="_4-1-动画的基本使用" tabindex="-1"><a class="header-anchor" href="#_4-1-动画的基本使用" aria-hidden="true">#</a> 4.1 动画的基本使用</h3><p>分为两步：</p><ol><li>定义动画 (动画序列 <code>%α</code>)</li><li>使用动画</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token comment">/* 1. 定义动画 */</span>
<span class="token atrule"><span class="token rule">@keyframes</span> move</span> <span class="token punctuation">{</span>
    <span class="token comment">/*开始状态*/</span>
    <span class="token selector">0%</span> <span class="token punctuation">{</span>
        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*结束状态*/</span>
    <span class="token selector">100%</span> <span class="token punctuation">{</span>
        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>1000px<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
    <span class="token comment">/* 2. 调用动画 */</span>
    <span class="token comment">/* 动画名称 */</span>
    <span class="token property">animation-name</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span>
    <span class="token comment">/* 持续时间 */</span>
    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>动画序列</strong></p><ul><li>0% 是动画的开始，100% 是动画的完成。这样的规则就是动画序列。</li><li>在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。</li><li>动画是使元素从一种样式逐渐变化为另一种样式的效果。您可以改变任意多的样式任意多的次数。</li><li>请用百分比来规定变化发生的时间，或用关键词&quot;from&quot;和“to”，等同于0%和100%。</li></ul><p>注意:</p><ol><li>可以做多个状态的变化 <code>keyframes</code> 关键帧</li><li>百分比必须是整数</li><li>百分比是总时间 <code>animation-duration</code> 的划分</li></ol><h3 id="_4-2-动画常用属性" tabindex="-1"><a class="header-anchor" href="#_4-2-动画常用属性" aria-hidden="true">#</a> 4.2 动画常用属性</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>keyframes</code></td><td>规定动画。</td></tr><tr><td><code>animation</code></td><td>所有动画属性的简写属性,除了animation-play-state属性。</td></tr><tr><td><code>animation-name</code></td><td>规定@keyframes动画的名称。(必须的)</td></tr><tr><td><code>animation-duration</code></td><td>规定动画完成一个周期所花费的秒或毫秒，默认是0。（必须的)</td></tr><tr><td><code>animation-timing-function</code></td><td>规定动画的速度曲线，默认是“ease” .</td></tr><tr><td><code>animation-delay</code></td><td>规定动画何时开始，默认是0.</td></tr><tr><td><code>animation-iteration-count</code></td><td>规定动画被播放的次数，默认是1，还有infinite</td></tr><tr><td><code>animation-direction</code></td><td>规定动画是否在下一周期逆向播放，默认是 &quot;normal&quot;,alternate逆播放</td></tr><tr><td><code>animation-play-state</code></td><td>规定动画是否正在运行或暂停。默认是&quot;running&quot;,还有&quot;paused&quot;.</td></tr><tr><td><code>animation-fill-mode</code></td><td>规定动画结束后状态,保持forwards回到起始backwards</td></tr></tbody></table><h3 id="_4-3-动画简写属性" tabindex="-1"><a class="header-anchor" href="#_4-3-动画简写属性" aria-hidden="true">#</a> 4.3 动画简写属性</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span> 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span> myfirst 5s linear 2s infinite alternate<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>简写属性里面不包含 <code>animation-play-state</code></li><li>暂停动画: <code>animation-play-state: puased;</code></li><li>经常和鼠标经过等其他配合使用想要动画走回来，而不是直接跳回来: <code>animation-direction: alternate</code></li><li>盒子动画结束后，停在结束位置: <code> animation-fill-mode: forwards</code></li></ul><h2 id="_5-浏览器私有属性" tabindex="-1"><a class="header-anchor" href="#_5-浏览器私有属性" aria-hidden="true">#</a> 5. 浏览器私有属性</h2><p>浏览器私有前缀是为了兼容老版本的写法，比较新版本的浏览器无须添加。</p><ol><li><p>私有前缀</p><ul><li><code>-moz-</code>: 代表firefox浏览器私有属性</li><li><code>-ms-</code>: 代表ie浏览器私有属性</li><li><code>-webkit-</code>: 代表safari、chrome私有属性-o-∶代表Opera私有属性</li></ul></li><li><p>提倡的写法</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">-o-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_6-css3-新特性" tabindex="-1"><a class="header-anchor" href="#_6-css3-新特性" aria-hidden="true">#</a> 6. CSS3 新特性</h2><p><img src="https://cdn.jsdelivr.net/gh/hacker-c/Picture-Bed@main/CSS3.png" alt="CSS3" loading="lazy"></p>`,131),o=[i];function c(l,p){return a(),s("div",null,o)}const u=n(t,[["render",c],["__file","h5c3.html.vue"]]);export{u as default};
