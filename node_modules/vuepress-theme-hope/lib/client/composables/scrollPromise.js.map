{"version":3,"file":"scrollPromise.js","sourceRoot":"","sources":["../../../src/client/composables/scrollPromise.ts"],"names":[],"mappings":"AAMA,IAAI,OAAO,GAAyB,IAAI,CAAC;AACzC,IAAI,cAAc,GAAwB,IAAI,CAAC;AAE/C,MAAM,aAAa,GAAkB;IACnC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO;IACnB,OAAO,EAAE,GAAG,EAAE;QACZ,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC;IACjE,CAAC;IACD,OAAO,EAAE,GAAG,EAAE;QACZ,cAAc,EAAE,EAAE,CAAC;QACnB,OAAO,GAAG,IAAI,CAAC;QACf,cAAc,GAAG,IAAI,CAAC;IACxB,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAkB,EAAE,CAAC,aAAa,CAAC","sourcesContent":["export interface ScrollPromise {\n  wait(): Promise<void> | null;\n  pending: () => void;\n  resolve: () => void;\n}\n\nlet promise: Promise<void> | null = null;\nlet promiseResolve: (() => void) | null = null;\n\nconst scrollPromise: ScrollPromise = {\n  wait: () => promise,\n  pending: () => {\n    promise = new Promise((resolve) => (promiseResolve = resolve));\n  },\n  resolve: () => {\n    promiseResolve?.();\n    promise = null;\n    promiseResolve = null;\n  },\n};\n\nexport const useScrollPromise = (): ScrollPromise => scrollPromise;\n"]}