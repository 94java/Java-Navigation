{"version":3,"file":"setup.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/composables/setup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAOzD,MAAM,CAAC,MAAM,kBAAkB,GAC7B,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAE7B;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAS,EAAE;IAC1C,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC;IAE3D,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,GAAoB,EAAE;IACnD,MAAM,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAEhD,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;IAED,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { computed, inject, provide } from \"vue\";\nimport { resolveSidebarItems } from \"./resolveConfig.js\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { ResolvedSidebarItem } from \"../utils/index.js\";\n\nexport type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;\n\nexport const sidebarItemsSymbol: InjectionKey<SidebarItemsRef> =\n  Symbol.for(\"sidebarItems\");\n\n/**\n * Create sidebar items ref and provide as global computed in setup\n */\nexport const setupSidebarItems = (): void => {\n  const sidebarItems = computed(() => resolveSidebarItems());\n\n  provide(sidebarItemsSymbol, sidebarItems);\n};\n\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = (): SidebarItemsRef => {\n  const sidebarItems = inject(sidebarItemsSymbol);\n\n  if (!sidebarItems) {\n    throw new Error(\"useSidebarItems() is called without provider.\");\n  }\n\n  return sidebarItems;\n};\n"]}