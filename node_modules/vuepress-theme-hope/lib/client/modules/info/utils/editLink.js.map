{"version":3,"file":"editLink.js","sourceRoot":"","sources":["../../../../../src/client/modules/info/utils/editLink.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,kBAAkB,EAClB,iBAAiB,GAClB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAI7D,MAAM,CAAC,MAAM,gBAAgB,GAA4C;IACvE,MAAM,EAAE,0BAA0B;IAClC,MAAM,EAAE,4BAA4B;IACpC,KAAK,EAAE,0BAA0B;IACjC,SAAS,EACP,iFAAiF;CACpF,CAAC;AAUF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,EAC9B,QAAQ,EACR,UAAU,EACV,OAAO,EACP,gBAAgB,EAChB,eAAe,GACC,EAAiB,EAAE;IACnC,IAAI,CAAC,gBAAgB;QAAE,OAAO,IAAI,CAAC;IAEnC,MAAM,QAAQ,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;IAE3C,IAAI,OAA2B,CAAC;IAEhC,IAAI,eAAe;QAAE,OAAO,GAAG,eAAe,CAAC;SAC1C,IAAI,QAAQ,KAAK,IAAI;QAAE,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAEjE,IAAI,CAAC,OAAO;QAAE,OAAO,IAAI,CAAC;IAE1B,OAAO,OAAO;SACX,OAAO,CACN,OAAO,EACP,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,sBAAsB,QAAQ,EAAE,CACnE;SACA,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;SAC9B,OAAO,CACN,OAAO,EACP,kBAAkB,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,gBAAgB,EAAE,CAAC,CACxE,CAAC;AACN,CAAC,CAAC","sourcesContent":["import {\n  isLinkHttp,\n  removeLeadingSlash,\n  removeEndingSlash,\n} from \"@vuepress/shared\";\nimport { resolveRepoType } from \"@theme-hope/utils/index.js\";\n\nimport type { RepoType } from \"@theme-hope/utils/index.js\";\n\nexport const editLinkPatterns: Record<Exclude<RepoType, null>, string> = {\n  GitHub: \":repo/edit/:branch/:path\",\n  GitLab: \":repo/-/edit/:branch/:path\",\n  Gitee: \":repo/edit/:branch/:path\",\n  Bitbucket:\n    \":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default\",\n};\n\ninterface EditLinkOptions {\n  docsRepo: string;\n  docsBranch: string;\n  docsDir: string;\n  filePathRelative: string | null;\n  editLinkPattern?: string;\n}\n\nexport const resolveEditLink = ({\n  docsRepo,\n  docsBranch,\n  docsDir,\n  filePathRelative,\n  editLinkPattern,\n}: EditLinkOptions): string | null => {\n  if (!filePathRelative) return null;\n\n  const repoType = resolveRepoType(docsRepo);\n\n  let pattern: string | undefined;\n\n  if (editLinkPattern) pattern = editLinkPattern;\n  else if (repoType !== null) pattern = editLinkPatterns[repoType];\n\n  if (!pattern) return null;\n\n  return pattern\n    .replace(\n      /:repo/,\n      isLinkHttp(docsRepo) ? docsRepo : `https://github.com/${docsRepo}`\n    )\n    .replace(/:branch/, docsBranch)\n    .replace(\n      /:path/,\n      removeLeadingSlash(`${removeEndingSlash(docsDir)}/${filePathRelative}`)\n    );\n};\n"]}