{"version":3,"file":"NavScreenDropdown.js","sourceRoot":"","sources":["../../../../../src/client/modules/navbar/components/NavScreenDropdown.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,KAAK,CAAC;AACtE,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,QAAQ,MAAM,oCAAoC,CAAC;AAC1D,OAAO,IAAI,MAAM,gCAAgC,CAAC;AAQlD,OAAO,oCAAoC,CAAC;AAE5C,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,mBAAmB;IAEzB,KAAK,EAAE;QACL;;;;WAIG;QACH,MAAM,EAAE;YACN,IAAI,EAAE,MAAmE;YACzE,QAAQ,EAAE,IAAI;SACf;KACF;IAED,KAAK,CAAC,KAAK;QACT,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QACzB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEtC,MAAM,iBAAiB,GAAG,QAAQ,CAChC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAClD,CAAC;QAEF,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;QAExB,KAAK,CACH,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAChB,GAAG,EAAE;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CACF,CAAC;QAEF,MAAM,iBAAiB,GAAG,CAAI,IAAO,EAAE,GAAQ,EAAW,EAAE,CAC1D,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;QAE/B,OAAO,GAAY,EAAE,CAAC;YACpB,CAAC,CACC,QAAQ,EACR;gBACE,KAAK,EAAE,CAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC5D,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,iBAAiB,CAAC,KAAK;gBACrC,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC3B,CAAC;aACF,EACD;gBACE,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;oBAC5B,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;oBACpC,KAAK,CAAC,MAAM,CAAC,IAAI;iBAClB,CAAC;gBACF,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;aAC/D,CACF;YACD,CAAC,CACC,IAAI,EACJ;gBACE,KAAK,EAAE,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;aACtD,EACD,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAClC,CAAC,CACC,IAAI,EACJ,EAAE,KAAK,EAAE,eAAe,EAAE,EAC1B,UAAU,IAAI,KAAK;gBACjB,CAAC,CAAC;oBACE,CAAC,CACC,IAAI,EACJ,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAC9B,KAAK,CAAC,IAAI;wBACR,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;4BACV,MAAM,EAAgB,KAAK;4BAC3B,UAAU,EAAE,GAAG,EAAE;gCACf,IACE,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;oCAC/C,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;oCAE3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;4BACvB,CAAC;yBACF,CAAC;wBACJ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAC1B;oBACD,CAAC,CACC,IAAI,EACJ,EAAE,KAAK,EAAE,0BAA0B,EAAE,EACrC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAChC,CAAC,CACC,IAAI,EACJ,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAC7B,CAAC,CAAC,QAAQ,EAAE;wBACV,MAAM,EAAE,UAAU;wBAClB,UAAU,EAAE,GAAG,EAAE;4BACf,IACE,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC;gCAC7C,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;gCAE/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACvB,CAAC;qBACF,CAAC,CACH,CACF,CACF;iBACF;gBACH,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;oBACV,MAAM,EAAE,KAAK;oBACb,UAAU,EAAE,GAAG,EAAE;wBACf,IAAI,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;4BACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACvB,CAAC;iBACF,CAAC,CACP,CACF,CACF;SACF,CAAC;IACJ,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { computed, defineComponent, h, ref, toRef, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nimport AutoLink from \"@theme-hope/components/AutoLink.js\";\nimport Icon from \"@theme-hope/components/Icon.js\";\n\nimport type { PropType, VNode } from \"vue\";\nimport type {\n  AutoLinkOptions as AutoLinkType,\n  NavGroup,\n} from \"../../../../shared/index.js\";\n\nimport \"../styles/nav-screen-dropdown.scss\";\n\nexport default defineComponent({\n  name: \"NavScreenDropdown\",\n\n  props: {\n    /**\n     * Navbar Screen Dropdown list config\n     *\n     * 导航栏下拉列表配置\n     */\n    config: {\n      type: Object as PropType<NavGroup<AutoLinkType | NavGroup<AutoLinkType>>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n    const config = toRef(props, \"config\");\n\n    const dropdownAriaLabel = computed(\n      () => config.value.ariaLabel || config.value.text\n    );\n\n    const open = ref(false);\n\n    watch(\n      () => route.path,\n      () => {\n        open.value = false;\n      }\n    );\n\n    const isLastItemOfArray = <T>(item: T, arr: T[]): boolean =>\n      arr[arr.length - 1] === item;\n\n    return (): VNode[] => [\n      h(\n        \"button\",\n        {\n          class: [\"nav-screen-dropdown-title\", { active: open.value }],\n          type: \"button\",\n          \"aria-label\": dropdownAriaLabel.value,\n          onClick: () => {\n            open.value = !open.value;\n          },\n        },\n        [\n          h(\"span\", { class: \"title\" }, [\n            h(Icon, { icon: config.value.icon }),\n            props.config.text,\n          ]),\n          h(\"span\", { class: [\"arrow\", open.value ? \"down\" : \"right\"] }),\n        ]\n      ),\n      h(\n        \"ul\",\n        {\n          class: [\"nav-screen-dropdown\", { hide: !open.value }],\n        },\n        config.value.children.map((child) =>\n          h(\n            \"li\",\n            { class: \"dropdown-item\" },\n            \"children\" in child\n              ? [\n                  h(\n                    \"h4\",\n                    { class: \"dropdown-subtitle\" },\n                    child.link\n                      ? h(AutoLink, {\n                          config: <AutoLinkType>child,\n                          onFocusout: () => {\n                            if (\n                              isLastItemOfArray(child, config.value.children) &&\n                              child.children.length === 0\n                            )\n                              open.value = false;\n                          },\n                        })\n                      : h(\"span\", child.text)\n                  ),\n                  h(\n                    \"ul\",\n                    { class: \"dropdown-subitem-wrapper\" },\n                    child.children.map((grandchild) =>\n                      h(\n                        \"li\",\n                        { class: \"dropdown-subitem\" },\n                        h(AutoLink, {\n                          config: grandchild,\n                          onFocusout: () => {\n                            if (\n                              isLastItemOfArray(grandchild, child.children) &&\n                              isLastItemOfArray(child, config.value.children)\n                            )\n                              open.value = false;\n                          },\n                        })\n                      )\n                    )\n                  ),\n                ]\n              : h(AutoLink, {\n                  config: child,\n                  onFocusout: () => {\n                    if (isLastItemOfArray(child, config.value.children))\n                      open.value = false;\n                  },\n                })\n          )\n        )\n      ),\n    ];\n  },\n});\n"]}