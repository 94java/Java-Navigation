{"version":3,"file":"SocialMedia.js","sourceRoot":"","sources":["../../../../../src/client/modules/blog/components/SocialMedia.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,8BAA8B,CAAC;AACrD,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,+CAA+C,CAAC;AAI/E,OAAO,6BAA6B,CAAC;AAErC,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,aAAa;IAEnB,KAAK;QACH,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;QACrC,MAAM,MAAM,GAAG,OAAO,EAAE,CAAC;QAEzB,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC/B,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;YAExC,OAAO,MAAM;gBACX,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC5C,IAAI,EAAE,KAAK;oBACX,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC;oBAClB,GAAG;iBACJ,CAAC,CAAC;gBACL,CAAC,CAAC,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;QAEH,OAAO,GAAiB,EAAE,CACxB,UAAU,CAAC,KAAK,CAAC,MAAM;YACrB,CAAC,CAAC,CAAC,CACC,KAAK,EACL,EAAE,KAAK,EAAE,sBAAsB,EAAE,EACjC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,CAC3C,CAAC,CAAC,GAAG,EAAE;gBACL,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,GAAG;gBACT,GAAG,EAAE,qBAAqB;gBAC1B,MAAM,EAAE,QAAQ;gBAChB,YAAY,EAAE,IAAI;gBAClB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;gBACrD,SAAS,EAAE,IAAI;aAChB,CAAC,CACH,CACF;YACH,CAAC,CAAC,IAAI,CAAC;IACb,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { computed, defineComponent, h } from \"vue\";\nimport { icons } from \"@temp/theme-hope/socialMedia\";\nimport { usePure } from \"@theme-hope/composables/index.js\";\nimport { useBlogOptions } from \"@theme-hope/modules/blog/composables/index.js\";\n\nimport type { VNode } from \"vue\";\n\nimport \"../styles/social-media.scss\";\n\nexport default defineComponent({\n  name: \"SocialMedia\",\n\n  setup() {\n    const blogOptions = useBlogOptions();\n    const isPure = usePure();\n\n    const mediaLinks = computed(() => {\n      const config = blogOptions.value.medias;\n\n      return config\n        ? Object.entries(config).map(([media, url]) => ({\n            name: media,\n            icon: icons[media],\n            url,\n          }))\n        : [];\n    });\n\n    return (): VNode | null =>\n      mediaLinks.value.length\n        ? h(\n            \"div\",\n            { class: \"social-media-wrapper\" },\n            mediaLinks.value.map(({ name, icon, url }) =>\n              h(\"a\", {\n                class: \"social-media\",\n                href: url,\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                \"aria-label\": name,\n                ...(isPure.value ? {} : { \"data-balloon-pos\": \"up\" }),\n                innerHTML: icon,\n              })\n            )\n          )\n        : null;\n  },\n});\n"]}