{"version":3,"file":"encryptedArticles.js","sourceRoot":"","sources":["../../../../../src/client/modules/blog/composables/encryptedArticles.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAQ3D,MAAM,CAAC,MAAM,uBAAuB,GAClC,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAElC;;GAEG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAyB,EAAE;IAC7D,MAAM,iBAAiB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;IAE1D,IAAI,CAAC,iBAAiB,EAAE;QACtB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACvE;IAED,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAS,EAAE;IAC/C,MAAM,iBAAiB,GAAG,WAAW,CAAc,WAAW,CAAC,CAAC;IAEhE,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;AACtD,CAAC,CAAC","sourcesContent":["import { inject, provide } from \"vue\";\nimport { useBlogType } from \"vuepress-plugin-blog2/client\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { BlogTypeData } from \"vuepress-plugin-blog2/client\";\nimport type { ArticleInfo } from \"../../../../shared/index.js\";\n\nexport type EncryptedArticlesRef = ComputedRef<BlogTypeData<ArticleInfo>>;\n\nexport const encryptedArticlesSymbol: InjectionKey<EncryptedArticlesRef> =\n  Symbol.for(\"encryptedArticles\");\n\n/**\n * Inject encryptedArticles\n */\nexport const useEncryptedArticles = (): EncryptedArticlesRef => {\n  const encryptedArticles = inject(encryptedArticlesSymbol);\n\n  if (!encryptedArticles) {\n    throw new Error(\"useEncryptedArticles() is called without provider.\");\n  }\n\n  return encryptedArticles;\n};\n\n/**\n * Provide encryptedArticles\n */\nexport const setupEncryptedArticles = (): void => {\n  const encryptedArticles = useBlogType<ArticleInfo>(\"encrypted\");\n\n  provide(encryptedArticlesSymbol, encryptedArticles);\n};\n"]}