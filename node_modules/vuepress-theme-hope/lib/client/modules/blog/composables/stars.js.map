{"version":3,"file":"stars.js","sourceRoot":"","sources":["../../../../../src/client/modules/blog/composables/stars.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAQ3D,MAAM,CAAC,MAAM,WAAW,GAA2B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAEvE;;GAEG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAa,EAAE;IACrC,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;IAElC,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;KAC3D;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,GAAS,EAAE;IACnC,MAAM,KAAK,GAAG,WAAW,CAAc,MAAM,CAAC,CAAC;IAE/C,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import { inject, provide } from \"vue\";\nimport { useBlogType } from \"vuepress-plugin-blog2/client\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { BlogTypeData } from \"vuepress-plugin-blog2/client\";\nimport type { ArticleInfo } from \"../../../../shared/index.js\";\n\nexport type StarsRef = ComputedRef<BlogTypeData<ArticleInfo>>;\n\nexport const starsSymbol: InjectionKey<StarsRef> = Symbol.for(\"stars\");\n\n/**\n * Inject stars\n */\nexport const useStars = (): StarsRef => {\n  const stars = inject(starsSymbol);\n\n  if (!stars) {\n    throw new Error(\"useStars() is called without provider.\");\n  }\n\n  return stars;\n};\n\nexport const setupStars = (): void => {\n  const stars = useBlogType<ArticleInfo>(\"star\");\n\n  provide(starsSymbol, stars);\n};\n"]}