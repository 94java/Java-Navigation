{"version":3,"file":"blog.js","sourceRoot":"","sources":["../../../src/node/plugins/blog.ts"],"names":[],"mappings":"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","sourcesContent":["import { blogPlugin } from \"vuepress-plugin-blog2\";\nimport { ArticleInfoType, PageType } from \"../../shared/index.js\";\n\nimport type { Page, Plugin } from \"@vuepress/core\";\nimport type { GitData } from \"@vuepress/plugin-git\";\nimport type { BlogOptions } from \"vuepress-plugin-blog2\";\nimport type {\n  ArticleInfo,\n  ThemeNormalPageFrontmatter,\n  BlogLocaleData,\n  BlogPluginOptions,\n  ThemeData,\n} from \"../../shared/index.js\";\n\nconst defaultOptions: BlogPluginOptions = {\n  article: \"/article/\",\n  category: \"/category/\",\n  categoryItem: \"/category/:name/\",\n  tag: \"/tag/\",\n  tagItem: \"/tag/:name/\",\n  encrypted: \"/encrypted/\",\n  slide: \"/slide/\",\n  star: \"/star/\",\n  timeline: \"/timeline/\",\n};\n\nconst compareDate = (\n  dateA: Date | undefined,\n  dateB: Date | undefined\n): number => {\n  if (!dateA) return 1;\n  if (!dateB) return -1;\n\n  return dateB.getTime() - dateA.getTime();\n};\n\nconst sorter = (\n  pageA: Page<\n    { git: GitData },\n    ThemeNormalPageFrontmatter,\n    { routeMeta: ArticleInfo }\n  >,\n  pageB: Page<\n    { git: GitData },\n    ThemeNormalPageFrontmatter,\n    { routeMeta: ArticleInfo }\n  >\n): number => {\n  const prevKey = pageA.frontmatter.sticky;\n  const nextKey = pageB.frontmatter.sticky;\n\n  if (prevKey && nextKey && prevKey !== nextKey)\n    return Number(nextKey) - Number(prevKey);\n  if (prevKey && !nextKey) return -1;\n  if (!prevKey && nextKey) return 1;\n\n  return compareDate(\n    pageA.routeMeta[ArticleInfoType.date],\n    pageB.routeMeta[ArticleInfoType.date]\n  );\n};\n\nexport const getBlogOptions = (\n  options?: BlogPluginOptions | boolean\n): BlogPluginOptions => ({\n  ...defaultOptions,\n  ...(typeof options === \"object\" ? options : {}),\n});\n\nexport const getTitleLocales = (\n  themeData: ThemeData,\n  key: keyof BlogLocaleData\n): Record<string, string> =>\n  Object.fromEntries(\n    Object.entries(themeData.locales).map(([localePath, value]) => [\n      localePath,\n      value.blogLocales[key],\n    ])\n  );\n\nexport const getBlogPlugin = (\n  themeData: ThemeData,\n  options?: BlogPluginOptions | boolean,\n  hotReload = false\n): Plugin | null => {\n  if (!options) return null;\n\n  const blogOptions = {\n    ...defaultOptions,\n    ...(typeof options === \"object\" ? options : {}),\n  };\n\n  return blogPlugin(<BlogOptions>{\n    metaScope: \"\",\n\n    filter:\n      blogOptions.filter ||\n      (({ routeMeta }): boolean =>\n        routeMeta[ArticleInfoType.type] == PageType.article ||\n        routeMeta[ArticleInfoType.type] == PageType.slide),\n\n    category: [\n      {\n        key: \"category\",\n        getter: ({\n          routeMeta,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => routeMeta[ArticleInfoType.category] || [],\n        sorter,\n        path: blogOptions.category,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.category,\n        }),\n        itemPath: blogOptions.categoryItem,\n        itemFrontmatter: (name, localePath) => ({\n          title: `${name} ${themeData.locales[localePath].blogLocales.category}`,\n        }),\n        itemLayout: \"Blog\",\n      },\n      {\n        key: \"tag\",\n        getter: ({\n          routeMeta,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => routeMeta[ArticleInfoType.tag] || [],\n        sorter,\n        path: blogOptions.tag,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.tag,\n        }),\n        itemPath: blogOptions.tagItem,\n        itemLayout: \"Blog\",\n        itemFrontmatter: (name, localePath) => ({\n          title: `${name} ${themeData.locales[localePath].blogLocales.tag}`,\n        }),\n      },\n    ],\n\n    type: [\n      {\n        key: \"article\",\n        sorter,\n        filter: ({\n          frontmatter,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => frontmatter.article !== false,\n        path: blogOptions.article,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.article,\n        }),\n      },\n      {\n        key: \"encrypted\",\n        sorter,\n        filter: ({\n          routeMeta,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => Boolean(routeMeta[ArticleInfoType.isEncrypted]),\n        path: blogOptions.encrypted,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.encrypt,\n        }),\n      },\n      {\n        key: \"slide\",\n        sorter,\n        filter: ({\n          routeMeta,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => routeMeta[ArticleInfoType.type] === PageType.slide,\n        path: blogOptions.slide,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.slides,\n        }),\n      },\n      {\n        key: \"star\",\n        sorter: (\n          pageA: Page<\n            { git: GitData },\n            ThemeNormalPageFrontmatter,\n            { routeMeta: ArticleInfo }\n          >,\n          pageB: Page<\n            { git: GitData },\n            ThemeNormalPageFrontmatter,\n            { routeMeta: ArticleInfo }\n          >\n        ): number => {\n          const prevKey = pageA.frontmatter.star;\n          const nextKey = pageB.frontmatter.star;\n\n          if (prevKey && nextKey && prevKey !== nextKey)\n            return Number(nextKey) - Number(prevKey);\n          if (prevKey && !nextKey) return -1;\n          if (!prevKey && nextKey) return 1;\n\n          return compareDate(\n            pageA.routeMeta[ArticleInfoType.date],\n            pageB.routeMeta[ArticleInfoType.date]\n          );\n        },\n        filter: ({\n          frontmatter,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) => Boolean(frontmatter.star),\n        path: blogOptions.star,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.star,\n        }),\n      },\n      {\n        key: \"timeline\",\n        sorter: (\n          pageA: Page<\n            { git: GitData },\n            ThemeNormalPageFrontmatter,\n            { routeMeta: ArticleInfo }\n          >,\n          pageB: Page<\n            { git: GitData },\n            ThemeNormalPageFrontmatter,\n            { routeMeta: ArticleInfo }\n          >\n        ) =>\n          compareDate(\n            pageA.routeMeta[ArticleInfoType.date],\n            pageB.routeMeta[ArticleInfoType.date]\n          ),\n        filter: ({\n          frontmatter,\n          routeMeta,\n        }: Page<\n          { git: GitData },\n          ThemeNormalPageFrontmatter,\n          { routeMeta: ArticleInfo }\n        >) =>\n          ArticleInfoType.date in routeMeta &&\n          frontmatter[\"timeline\"] !== false,\n        path: blogOptions.timeline,\n        layout: \"Blog\",\n        frontmatter: (localePath) => ({\n          title: themeData.locales[localePath].blogLocales.timeline,\n        }),\n      },\n    ],\n\n    hotReload,\n    ...(\"hotReload\" in blogOptions ? { hotReload: blogOptions.hotReload } : {}),\n  });\n};\n"]}