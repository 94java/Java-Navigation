{"version":3,"file":"structure.js","sourceRoot":"","sources":["../../../../src/node/prepare/sidebar/structure.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AA0BvC,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,KAAa,EAAmB,EAAE;IAC5E,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAC/B,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,EAAE,EAAE;IACnC,+CAA+C;IAC/C,gBAAgB,EAAE,UAAU,CAAC,KAAK,CAAC;QACnC,uCAAuC;QACvC,CAAC,KAAK,KAAK,EAAE,IAAI,UAAU,KAAK,GAAG,CAAC,CACvC,CAAC;IAEF,MAAM,WAAW,GAAG,YAAY;QAC9B,aAAa;SACZ,IAAI,CACH,CACE,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,EACvC,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,EACvC,EAAE,CAAC,iBAAkB,CAAC,aAAa,CAAC,iBAAkB,CAAC,CAC1D,CAAC;IAEJ,MAAM,SAAS,GAAoB,EAAE,CAAC;IAEtC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAiB,CAAC,CAAC;QAClE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAE7C,IAAI,UAAU,GAAG,SAAS,CAAC;QAC3B,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC9B,wBAAwB;YACxB,IAAI,KAAK,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC;gBAC7B,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;YAClE,uBAAuB;iBAClB;gBACH,MAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAC5B,CAAC,IAAI,EAAmB,EAAE,CACxB,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAChD,CAAC;gBAEF,IAAI,MAAM;oBAAE,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACzC,2BAA2B;qBACtB;oBACH,MAAM,OAAO,GAAY;wBACvB,IAAI,EAAE,KAAK;wBACX,OAAO,EAAE,KAAK;wBACd,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;wBAC1C,QAAQ,EAAE,EAAE;qBACb,CAAC;oBAEF,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEzB,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC;iBAC/B;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import { path } from \"@vuepress/utils\";\n\nimport type { App, Page } from \"@vuepress/core\";\nimport type { SidebarSorterFunction } from \"../../../shared/index.js\";\n\nexport interface FileInfo {\n  type: \"file\";\n  filename: string;\n  path: string;\n}\n\nexport interface DirInfo {\n  type: \"dir\";\n  dirname: string;\n  path: string;\n  children: StructureInfo[];\n}\n\nexport type StructureInfo = DirInfo | FileInfo;\n\nexport interface ThemeSidebarInfoOptions {\n  app: App;\n  sorters: SidebarSorterFunction[];\n  nestingDepth?: number;\n}\n\nexport const getStructure = (pages: Page[], scope: string): StructureInfo[] => {\n  const relatedPages = pages.filter(\n    ({ filePathRelative, pathLocale }) =>\n      // generated from file and inside current scope\n      filePathRelative?.startsWith(scope) &&\n      // root dir should filter other locales\n      (scope !== \"\" || pathLocale === \"/\")\n  );\n\n  const sortedPages = relatedPages\n    // sort pages\n    .sort(\n      (\n        { filePathRelative: filePathRelative1 },\n        { filePathRelative: filePathRelative2 }\n      ) => filePathRelative1!.localeCompare(filePathRelative2!)\n    );\n\n  const structure: StructureInfo[] = [];\n\n  sortedPages.forEach((page) => {\n    const relativePath = path.relative(scope, page.filePathRelative!);\n    const filename = path.basename(relativePath);\n\n    let currentDir = structure;\n    const levels = relativePath.split(\"/\");\n\n    levels.forEach((level, index) => {\n      // already gets filename\n      if (index === levels.length - 1)\n        currentDir.push({ type: \"file\", filename, path: relativePath });\n      // still generating dir\n      else {\n        const result = currentDir.find<DirInfo>(\n          (item): item is DirInfo =>\n            item.type === \"dir\" && item.dirname === level\n        );\n\n        if (result) currentDir = result.children;\n        // we shall create this dir\n        else {\n          const dirInfo: DirInfo = {\n            type: \"dir\",\n            dirname: level,\n            path: levels.slice(0, index + 1).join(\"/\"),\n            children: [],\n          };\n\n          currentDir.push(dirInfo);\n\n          currentDir = dirInfo.children;\n        }\n      }\n    });\n  });\n\n  return structure;\n};\n"]}