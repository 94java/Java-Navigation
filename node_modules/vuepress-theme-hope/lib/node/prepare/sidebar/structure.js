import { path } from "@vuepress/utils";
export const getStructure = (pages, scope) => {
    const relatedPages = pages.filter(({ filePathRelative, pathLocale }) => 
    // generated from file and inside current scope
    filePathRelative?.startsWith(scope) &&
        // root dir should filter other locales
        (scope !== "" || pathLocale === "/"));
    const sortedPages = relatedPages
        // sort pages
        .sort(({ filePathRelative: filePathRelative1 }, { filePathRelative: filePathRelative2 }) => filePathRelative1.localeCompare(filePathRelative2));
    const structure = [];
    sortedPages.forEach((page) => {
        const relativePath = path.relative(scope, page.filePathRelative);
        const filename = path.basename(relativePath);
        let currentDir = structure;
        const levels = relativePath.split("/");
        levels.forEach((level, index) => {
            // already gets filename
            if (index === levels.length - 1)
                currentDir.push({ type: "file", filename, path: relativePath });
            // still generating dir
            else {
                const result = currentDir.find((item) => item.type === "dir" && item.dirname === level);
                if (result)
                    currentDir = result.children;
                // we shall create this dir
                else {
                    const dirInfo = {
                        type: "dir",
                        dirname: level,
                        path: levels.slice(0, index + 1).join("/"),
                        children: [],
                    };
                    currentDir.push(dirInfo);
                    currentDir = dirInfo.children;
                }
            }
        });
    });
    return structure;
};
//# sourceMappingURL=structure.js.map