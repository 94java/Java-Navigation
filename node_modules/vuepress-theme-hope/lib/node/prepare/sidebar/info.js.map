{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../../src/node/prepare/sidebar/info.ts"],"names":[],"mappings":"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","sourcesContent":["import { getStructure } from \"./structure.js\";\nimport { getTitle } from \"./title.js\";\n\nimport type { Page } from \"@vuepress/core\";\nimport type {\n  ThemeNormalPageFrontmatter,\n  ThemePageData,\n  SidebarDirInfo,\n  SidebarFileInfo,\n  SidebarInfo,\n  SidebarSorterFunction,\n} from \"../../../shared/index.js\";\nimport type { StructureInfo } from \"./structure.js\";\n\nexport interface FileInfo {\n  type: \"file\";\n  filename: string;\n  path: string;\n}\n\nexport interface DirInfo {\n  type: \"dir\";\n  dirname: string;\n  path: string;\n  items: (DirInfo | FileInfo)[];\n}\n\nexport interface ThemeSidebarInfoOptions {\n  pages: Page[];\n  sorters: SidebarSorterFunction[];\n  scope: string;\n}\n\nconst getChildrenInfo = (\n  { scope, pages, sorters }: ThemeSidebarInfoOptions,\n  children: StructureInfo[]\n): SidebarInfo[] =>\n  children\n    .map((item) => getInfoFromStructure({ pages, scope, sorters }, item))\n    .filter((item): item is SidebarInfo => item !== null)\n    // sort items\n    .sort((infoA, infoB) => {\n      for (let i = 0; i < sorters.length; i++) {\n        const result = sorters[i](infoA, infoB);\n\n        if (result !== 0) return result;\n      }\n\n      return 0;\n    });\n\nconst getInfoFromStructure = (\n  { scope, pages, sorters }: ThemeSidebarInfoOptions,\n  info: StructureInfo\n): SidebarInfo | null => {\n  // handle file\n  if (info.type === \"file\") {\n    const page = <Page<ThemePageData, ThemeNormalPageFrontmatter>>(\n      pages.find(\n        ({ filePathRelative }) => filePathRelative === `${scope}${info.path}`\n      )!\n    );\n\n    if (page.frontmatter.index === false) return null;\n\n    const fileInfo: SidebarFileInfo = {\n      type: \"file\",\n      filename: info.filename,\n\n      title: page.frontmatter.shortTitle || page.title,\n      order: \"order\" in page.frontmatter ? page.frontmatter.order : null,\n\n      frontmatter: page.frontmatter,\n      pageData: page.data,\n    };\n\n    return fileInfo;\n  }\n\n  // handle dir\n\n  // performance improvements\n  const relatedPages = pages.filter(({ filePathRelative }) =>\n    filePathRelative?.startsWith(`${scope}${info.path}/`)\n  );\n  const READMEFile = info.children.find(\n    (info) =>\n      info.type === \"file\" && info.filename.toLowerCase() === \"readme.md\"\n  );\n\n  if (READMEFile) {\n    const readmePage = <Page<ThemePageData, ThemeNormalPageFrontmatter>>(\n      relatedPages.find(\n        ({ filePathRelative }) =>\n          filePathRelative === `${scope}${READMEFile.path}`\n      )!\n    );\n\n    // get dir information\n    const dirOptions = readmePage.frontmatter.dir;\n\n    const title =\n      dirOptions?.text || readmePage.frontmatter.shortTitle || readmePage.title;\n    const icon = dirOptions?.icon || readmePage.frontmatter.icon;\n    const collapsible =\n      dirOptions && \"collapsible\" in dirOptions ? dirOptions.collapsible : true;\n\n    if (dirOptions?.index === false) return null;\n\n    const dirInfo: SidebarDirInfo = {\n      type: \"dir\",\n      dirname: info.dirname,\n      children: getChildrenInfo(\n        { pages: relatedPages, scope, sorters },\n        dirOptions?.link\n          ? // filter README.md\n            info.children.filter(\n              (item) =>\n                item.type !== \"file\" ||\n                item.filename.toLowerCase() !== \"readme.md\"\n            )\n          : info.children\n      ),\n\n      title,\n      order: dirOptions?.order || null,\n      // group information\n      groupInfo: {\n        ...(collapsible ? { collapsible } : {}),\n        ...(icon ? { icon } : {}),\n        ...(dirOptions?.link ? { link: readmePage.path } : {}),\n      },\n\n      frontmatter: readmePage.frontmatter,\n      pageData: readmePage.data,\n    };\n\n    return dirInfo;\n  }\n\n  const dirInfo: SidebarDirInfo = {\n    type: \"dir\",\n    dirname: info.dirname,\n    children: getChildrenInfo(\n      { pages: relatedPages, scope, sorters },\n      info.children\n    ),\n\n    title: getTitle(info.dirname),\n    order: null,\n\n    // generate information\n    // group information\n    groupInfo: {\n      collapsible: true,\n    },\n\n    frontmatter: null,\n    pageData: null,\n  };\n\n  return dirInfo;\n};\n\nexport const getSidebarInfo = ({\n  pages,\n  sorters,\n  scope,\n}: ThemeSidebarInfoOptions): // base = \"\"\nSidebarInfo[] =>\n  getStructure(pages, scope)\n    .map((info) => getInfoFromStructure({ scope, pages, sorters }, info))\n    .filter((item): item is SidebarInfo => item !== null)\n    // sort items\n    .sort((infoA, infoB) => {\n      for (let i = 0; i < sorters.length; i++) {\n        const result = sorters[i](infoA, infoB);\n\n        if (result !== 0) return result;\n      }\n\n      return 0;\n    });\n"]}