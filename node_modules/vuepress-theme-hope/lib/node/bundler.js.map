{"version":3,"file":"bundler.js","sourceRoot":"","sources":["../../src/node/bundler.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  addViteOptimizeDepsExclude,\n  addViteOptimizeDepsInclude,\n  mergeViteConfig,\n  tagHint,\n} from \"vuepress-shared/node\";\n\nimport type { App } from \"@vuepress/core\";\nimport type { ViteBundlerOptions } from \"@vuepress/bundler-vite\";\nimport type { WebpackBundlerOptions } from \"@vuepress/bundler-webpack\";\nimport type { ViteCommonOptions } from \"vuepress-shared/node\";\n\n/**\n * Add tags as customElement\n *\n * @param config VuePress Bundler config\n * @param app VuePress Node App\n * @param customElements tags recognized as custom element\n */\nexport const checkTag = (config: unknown, app: App): void => {\n  const { bundler } = app.options;\n\n  // for vite\n  if (bundler.name.endsWith(\"vite\")) {\n    const viteBundlerConfig = config as ViteBundlerOptions;\n\n    if (!viteBundlerConfig.vuePluginOptions)\n      viteBundlerConfig.vuePluginOptions = {};\n\n    if (!viteBundlerConfig.vuePluginOptions.template)\n      viteBundlerConfig.vuePluginOptions.template = {};\n\n    if (!viteBundlerConfig.vuePluginOptions.template.compilerOptions)\n      viteBundlerConfig.vuePluginOptions.template.compilerOptions = {};\n\n    const { isCustomElement } =\n      viteBundlerConfig.vuePluginOptions.template.compilerOptions;\n\n    viteBundlerConfig.vuePluginOptions.template.compilerOptions.isCustomElement =\n      (tag: string): boolean | void => {\n        if (isCustomElement) {\n          const result = isCustomElement(tag);\n\n          if (!result) tagHint(tag, app.env.isDebug);\n\n          return result;\n        }\n\n        tagHint(tag, app.env.isDebug);\n      };\n  }\n\n  // for webpack\n  if (bundler.name.endsWith(\"webpack\")) {\n    const webpackBundlerConfig = config as WebpackBundlerOptions;\n\n    if (!webpackBundlerConfig.vue) webpackBundlerConfig.vue = {};\n    if (!webpackBundlerConfig.vue.compilerOptions)\n      webpackBundlerConfig.vue.compilerOptions = {};\n\n    const { isCustomElement } = webpackBundlerConfig.vue.compilerOptions;\n\n    webpackBundlerConfig.vue.compilerOptions.isCustomElement = (\n      tag: string\n    ): boolean | void => {\n      if (isCustomElement) {\n        const result = isCustomElement(tag);\n\n        if (!result) tagHint(tag, app.env.isDebug);\n\n        return result;\n      }\n\n      tagHint(tag, app.env.isDebug);\n    };\n  }\n};\n\n// this optimize shall be at @vuepress/bundler-vite\n// TODO: Remove this\nconst optimizeChunkSplit = ({ app, config }: ViteCommonOptions): void => {\n  const { bundler } = app.options;\n\n  if (bundler.name.endsWith(\"vite\")) {\n    const bundlerConfig = <ViteBundlerOptions>config;\n\n    bundlerConfig.viteOptions = mergeViteConfig(\n      bundlerConfig.viteOptions || {},\n      {\n        build: {\n          rollupOptions: {\n            output: {\n              manualChunks(id: string) {\n                // move known framework code into a stable chunk so that\n                // custom theme changes do not invalidate hash for all pages\n                if (\n                  id.includes(\"plugin-vue:export-helper\") ||\n                  /node_modules\\/@vuepress\\/shared\\//.test(id) ||\n                  /node_modules\\/vue(-router)?\\//.test(id)\n                ) {\n                  return \"framework\";\n                }\n\n                return undefined;\n              },\n            },\n          },\n        },\n      }\n    );\n  }\n};\n\nexport const extendsBundlerOptions = (config: unknown, app: App): void => {\n  addViteOptimizeDepsInclude({ app, config }, \"@vueuse/core\");\n  addViteOptimizeDepsExclude({ app, config }, \"@theme-hope\");\n  optimizeChunkSplit({ app, config });\n\n  checkTag(config, app);\n};\n"]}