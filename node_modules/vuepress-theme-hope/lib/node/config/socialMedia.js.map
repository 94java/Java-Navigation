{"version":3,"file":"socialMedia.js","sourceRoot":"","sources":["../../../src/node/config/socialMedia.ts"],"names":[],"mappings":"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","sourcesContent":["import { fs, getDirname, path } from \"@vuepress/utils\";\nimport { logger } from \"../utils.js\";\n\nimport type { ThemeData } from \"../../shared/index.js\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const checkSocialMediaIcons = (\n  themeData: ThemeData\n): Record<string, string> => {\n  const icons: Record<string, string> = {};\n\n  const checkIcon = (\n    key: string,\n    value: string | [string, string]\n  ): string | false => {\n    if (typeof value === \"string\") {\n      const templatePath = path.resolve(\n        __dirname,\n        `../../../templates/socialMediaIcons/${key.toLocaleLowerCase()}.svg`\n      );\n\n      if (fs.existsSync(templatePath)) {\n        icons[key] = fs.readFileSync(templatePath, { encoding: \"utf-8\" });\n\n        return value;\n      }\n\n      logger.warn(`${key} icon in blog media config not found!`);\n\n      return false;\n    }\n\n    if (Array.isArray(value)) {\n      // it’s a svg string\n      if (value[1].startsWith(\"<svg\")) {\n        icons[key] = value[1];\n\n        return value[0];\n      }\n\n      // it’s probably a path\n      if (fs.existsSync(value[1])) {\n        icons[key] = fs.readFileSync(value[1], { encoding: \"utf-8\" });\n\n        return value[0];\n      }\n\n      logger.warn(`${key}'s icon ${value[1]} in blog media config is invalid!`);\n\n      return false;\n    }\n\n    logger.warn(`${key} icon in blog media config has an invalid config!`);\n\n    return false;\n  };\n\n  Object.entries(themeData.blog?.medias || {}).forEach(([key, value]) => {\n    const result = checkIcon(key, value);\n\n    if (result) themeData.blog.medias![key] = result;\n    else delete themeData.blog.medias![key];\n  });\n\n  if (themeData.locales)\n    Object.entries(themeData.locales).forEach(([, localeConfig]) => {\n      Object.entries(localeConfig.blog?.medias || {}).forEach(\n        ([key, value]) => {\n          const result = checkIcon(key, value);\n\n          if (result) localeConfig.blog.medias![key] = result;\n          else delete localeConfig.blog.medias![key];\n        }\n      );\n    });\n\n  return icons;\n};\n"]}