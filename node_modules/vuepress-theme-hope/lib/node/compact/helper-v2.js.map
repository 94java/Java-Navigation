{"version":3,"file":"helper-v2.js","sourceRoot":"","sources":["../../../src/node/compact/helper-v2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAYrC;;;;GAIG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,YAA0B,EAAiB,EAAE,CAC3E,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAEhC;;GAEG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,MAAqB,EAAiB,EAAE;IACzE,aAAa,CACX,oBAAoB,EACpB,+CAA+C,CAChD,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,MAAsB,EAAkB,EAAE;IAC5E,aAAa,CACX,qBAAqB,EACrB,gDAAgD,CACjD,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,MAA2B,EACN,EAAE;IACvB,aAAa,CACX,0BAA0B,EAC1B,qDAAqD,CACtD,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CACvC,MAA4B,EACN,EAAE;IACxB,aAAa,CACX,2BAA2B,EAC3B,sDAAsD,CACvD,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,WAAyB,EAAgB,EAAE;IAC3E,aAAa,CACX,mBAAmB,EACnB,wDAAwD,CACzD,CAAC;IAEF,OAAO,mBAAmB,CACxB,WAAqD,CACtD,CAAC;AACJ,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,MAA4C,EAChC,EAAE;IACd,MAAM,CAAC,IAAI,CACT;GACD,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,KAAK,CAAC,GAAG,CAC/C,YAAY,CACb;;EAEH,KAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;CAaf,CAAC;CACD,CACE,CAAC;IAEF,oBAAoB;IACpB,IAAI,aAAa,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,aAAa,CAAC,KAAK,QAAQ,EAAE;QACxE,MAAM,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,aAAa,CAAiB,CAAC,CAAC;KACvE;IAED,cAAc;IACd,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,UAAU;QAAE,MAAM,CAAC,KAAK,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;IAE3E,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { chalk } from \"@vuepress/utils\";\nimport { convertThemeOptions } from \"./theme.js\";\nimport { deprecatedMsg } from \"./utils.js\";\nimport { hopeTheme } from \"../theme.js\";\nimport { logger } from \"../utils.js\";\n\nimport type { ThemeFunction } from \"@vuepress/core\";\nimport type { UserConfig } from \"@vuepress/cli\";\nimport type {\n  NavbarOptions,\n  SidebarOptions,\n  SidebarArrayOptions,\n  SidebarObjectOptions,\n  ThemeOptions,\n} from \"../../shared/index.js\";\n\n/**\n * import and use `hopeTheme` instead\n *\n * @description This function will be removed in v2 future release and is only available before v2 touch stable\n */\nexport const hopeThemeLegacy = (themeOptions: ThemeOptions): ThemeFunction =>\n  hopeTheme(themeOptions, true);\n\n/**\n * @deprecated use `import { navbar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineNavbarConfig = (config: NavbarOptions): NavbarOptions => {\n  deprecatedMsg(\n    \"defineNavbarConfig\",\n    'import { navbar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { sidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarConfig = (config: SidebarOptions): SidebarOptions => {\n  deprecatedMsg(\n    \"defineSidebarConfig\",\n    'import { sidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { arraySidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarArrayConfig = (\n  config: SidebarArrayOptions\n): SidebarArrayOptions => {\n  deprecatedMsg(\n    \"defineSidebarArrayConfig\",\n    'import { arraySidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { objectSidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarObjectConfig = (\n  config: SidebarObjectOptions\n): SidebarObjectOptions => {\n  deprecatedMsg(\n    \"defineSidebarObjectConfig\",\n    'import { objectSidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { hopeThemeLegacy } from \"vuepress-theme-hope\";` instead\n */\nexport const defineThemeConfig = (themeConfig: ThemeOptions): ThemeOptions => {\n  deprecatedMsg(\n    \"defineThemeConfig\",\n    'import { hopeThemeLegacy } from \"vuepress-theme-hope\";'\n  );\n\n  return convertThemeOptions(\n    themeConfig as ThemeOptions & Record<string, unknown>\n  );\n};\n\n/**\n * @deprecated import and use `hopeTheme` instead\n */\nexport const defineHopeConfig = (\n  config: UserConfig & Record<string, unknown>\n): UserConfig => {\n  logger.warn(\n    `\\\n\"${chalk.magenta(\"defineHopeConfig\")}\" is ${chalk.red(\n      \"deprecated\"\n    )}, please use the following code instead:\n\n${chalk.magenta(`\\\nimport { defineUserConfig } from \"vuepress\";\nimport { hopeThemeLegacy } from \"vuepress-theme-hope\";\n\nexport default {\n  // site config\n  // ...\n\n  theme : hopeThemeLegacy({\n    // theme config\n    // ...\n  }),\n};\n`)}\n`\n  );\n\n  // check themeConfig\n  if (\"themeConfig\" in config && typeof config[\"themeConfig\"] === \"object\") {\n    config.theme = hopeThemeLegacy(config[\"themeConfig\"] as ThemeOptions);\n  }\n\n  // check theme\n  if (typeof config.theme !== \"function\") config.theme = hopeThemeLegacy({});\n\n  return config;\n};\n"]}