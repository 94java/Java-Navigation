{"version":3,"file":"check.js","sourceRoot":"","sources":["../../../src/node/frontmatter/check.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAS3D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAU,EAAE,OAAgB,EAAQ,EAAE;IACrE,MAAM,WAAW,GAAG,IAAI,CAAC,WAGK,CAAC;IAE/B,mBAAmB;IACnB,IAAI,UAAU,IAAI,WAAW,EAAE;QAC7B,MAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEnD,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACjC;IAED,cAAc;IACd,IAAI,KAAK,IAAI,WAAW,EAAE;QACxB,MAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAEpC,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC;KACvB;IAED,IAAI,OAAO,EAAE;QACX,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;QAElC,aAAa;QACb,IAAI,MAAM,IAAI,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,YAAY,IAAI,CAAC,EAAE;YAChE,MAAM,CAAC,KAAK,CACV,8DACE,gBAAgB,CAAC,CAAC,CAAC,cAAc,gBAAgB,EAAE,CAAC,CAAC,CAAC,EACxD,EAAE,CACH,CAAC;YAEF,OAAO,WAAW,CAAC,IAAI,CAAC;SACzB;QAED,gBAAgB;QAChB,IACE,SAAS,IAAI,WAAW;YACxB,WAAW,CAAC,OAAO,KAAK,SAAS;YACjC,OAAO,WAAW,CAAC,OAAO,KAAK,SAAS,EACxC;YACA,MAAM,CAAC,IAAI,CACT,yEACE,gBAAgB,CAAC,CAAC,CAAC,cAAc,gBAAgB,EAAE,CAAC,CAAC,CAAC,EACxD,EAAE,CACH,CAAC;YAEF,OAAO,WAAW,CAAC,OAAO,CAAC;SAC5B;QAED,sBAAsB;QACtB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACxD,IAAI,GAAG,IAAI,WAAW,IAAI,OAAO,WAAW,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;gBAC9D,MAAM,CAAC,IAAI,CACT,IAAI,GAAG,mDACL,gBAAgB,CAAC,CAAC,CAAC,cAAc,gBAAgB,EAAE,CAAC,CAAC,CAAC,EACxD,EAAE,CACH,CAAC;gBAEF,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB;YACE,MAAM;YACN,QAAQ;YACR,KAAK;YACL,OAAO;YACP,aAAa;YACb,cAAc;YACd,UAAU;YACV,YAAY;YACZ,gBAAgB;YAChB,UAAU;YACV,SAAS;SACV,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAChB,IAAI,GAAG,IAAI,WAAW,IAAI,OAAO,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBAC/D,MAAM,CAAC,IAAI,CACT,IAAI,GAAG,oDACL,gBAAgB,CAAC,CAAC,CAAC,cAAc,gBAAgB,EAAE,CAAC,CAAC,CAAC,EACxD,EAAE,CACH,CAAC;gBAEF,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;KACJ;AACH,CAAC,CAAC","sourcesContent":["import { logger } from \"@vuepress/utils\";\nimport { getCategory, getTag } from \"vuepress-shared/node\";\n\nimport type { Page } from \"@vuepress/core\";\nimport type {\n  ThemeBlogHomePageFrontmatter,\n  ThemeProjectHomePageFrontmatter,\n  ThemeNormalPageFrontmatter,\n} from \"../../shared/index.js\";\n\nexport const checkFrontmatter = (page: Page, isDebug: boolean): void => {\n  const frontmatter = page.frontmatter as\n    | ThemeProjectHomePageFrontmatter\n    | ThemeBlogHomePageFrontmatter\n    | ThemeNormalPageFrontmatter;\n\n  // resolve category\n  if (\"category\" in frontmatter) {\n    const category = getCategory(frontmatter.category);\n\n    frontmatter.category = category;\n  }\n\n  // resolve tag\n  if (\"tag\" in frontmatter) {\n    const tag = getTag(frontmatter.tag);\n\n    frontmatter.tag = tag;\n  }\n\n  if (isDebug) {\n    const { filePathRelative } = page;\n\n    // check date\n    if (\"date\" in frontmatter && !(frontmatter.date instanceof Date)) {\n      logger.error(\n        `\"date\" property in Page FrontMatter should be a valid Date.${\n          filePathRelative ? `\\nFound in ${filePathRelative}` : \"\"\n        }`\n      );\n\n      delete frontmatter.date;\n    }\n\n    // check sidebar\n    if (\n      \"sidebar\" in frontmatter &&\n      frontmatter.sidebar !== \"heading\" &&\n      typeof frontmatter.sidebar !== \"boolean\"\n    ) {\n      logger.warn(\n        `\"sidebar\" property in Page FrontMatter should be \"heading\" or boolean.${\n          filePathRelative ? `\\nFound in ${filePathRelative}` : \"\"\n        }`\n      );\n\n      delete frontmatter.sidebar;\n    }\n\n    // check string values\n    [\"title\", \"shortTitle\", \"containerClass\"].forEach((key) => {\n      if (key in frontmatter && typeof frontmatter[key] !== \"string\") {\n        logger.warn(\n          `\"${key}\" property in Page FrontMatter should be string.${\n            filePathRelative ? `\\nFound in ${filePathRelative}` : \"\"\n          }`\n        );\n\n        delete frontmatter[key];\n      }\n    });\n\n    // check boolean values\n    [\n      \"home\",\n      \"navbar\",\n      \"toc\",\n      \"index\",\n      \"lastUpdated\",\n      \"contributors\",\n      \"editLink\",\n      \"breadcrumb\",\n      \"breadcrumbIcon\",\n      \"pageview\",\n      \"article\",\n    ].forEach((key) => {\n      if (key in frontmatter && typeof frontmatter[key] !== \"boolean\") {\n        logger.warn(\n          `\"${key}\" property in Page FrontMatter should be boolean.${\n            filePathRelative ? `\\nFound in ${filePathRelative}` : \"\"\n          }`\n        );\n\n        delete frontmatter[key];\n      }\n    });\n  }\n};\n"]}