{"version":3,"file":"alias.js","sourceRoot":"","sources":["../../src/node/alias.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEvD,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE9C,MAAM,WAAW,GAAG,CAAC,GAAW,EAAsB,EAAE,CACtD,EAAE;KACC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;KACtD,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CACvE;KACA,GAAG,CAAmB,CAAC,IAAI,EAAE,EAAE,CAAC;IAC/B,eAAe,GAAG,IAAI,IAAI,EAAE;IAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;CAChD,CAAC,CAAC;AAEP,MAAM,aAAa,GAAG,CAAC,KAAa,EAA2B,EAAE,CAC/D,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IACpE,CAAC,CAAC;QACE,eAAe,KAAK,WAAW;QAC/B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC;KACxD;IACH,CAAC,CAAC,IAAI,CAAC;AAEX,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,OAAgB,EAA0B,EAAE;IACvE,+CAA+C;IAC/C,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;QAC/B,oBAAoB;QACpB,GAAG,WAAW,CAAC,YAAY,CAAC;QAC5B,+BAA+B;QAC/B,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;aACxB,GAAG,CAAC,aAAa,CAAC;aAClB,MAAM,CACL,CAAC,IAAI,EAA4B,EAAE,CAAC,IAAI,KAAK,IAAI,CAClD;QACH,iBAAiB;QACjB,GAAG,EAAE;aACF,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;aACzD,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,WAAW,MAAM,EAAE,CAAC;aACpC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACb,2BAA2B;YAC3B,GAAG,WAAW,CAAC,GAAG,IAAI,aAAa,CAAC;YACpC,sCAAsC;YACtC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;iBACxB,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,MAAM,EAAE,CAAC;iBACpC,GAAG,CAAC,aAAa,CAAC;iBAClB,MAAM,CACL,CAAC,IAAI,EAA4B,EAAE,CAAC,IAAI,KAAK,IAAI,CAClD;SACJ,CAAC;aACD,IAAI,EAAE;KACV,CAAC,CAAC;IAEH,IAAI,OAAO;QAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;IAEvD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { fs, getDirname, path } from \"@vuepress/utils\";\n\nconst __dirname = getDirname(import.meta.url);\n\nconst getDirAlias = (dir: string): [string, string][] =>\n  fs\n    .readdirSync(path.resolve(__dirname, \"../client\", dir))\n    .filter(\n      (file) =>\n        file.endsWith(\".js\") || file.endsWith(\".vue\") || !file.includes(\".\")\n    )\n    .map<[string, string]>((file) => [\n      `@theme-hope/${dir}/${file}`,\n      path.resolve(__dirname, \"../client\", dir, file),\n    ]);\n\nconst getEntryAlias = (entry: string): [string, string] | null =>\n  fs.existsSync(path.resolve(__dirname, \"../client\", entry, \"index.js\"))\n    ? [\n        `@theme-hope/${entry}/index.js`,\n        path.resolve(__dirname, \"../client\", entry, \"index.js\"),\n      ]\n    : null;\n\nexport const resolveAlias = (isDebug: boolean): Record<string, string> => {\n  // use alias to make all components replaceable\n  const alias = Object.fromEntries([\n    // define components\n    ...getDirAlias(\"components\"),\n    // define composables and utils\n    ...[\"composables\", \"utils\"]\n      .map(getEntryAlias)\n      .filter<[string, string]>(\n        (item): item is [string, string] => item !== null\n      ),\n    // define modules\n    ...fs\n      .readdirSync(path.resolve(__dirname, \"../client/modules\"))\n      .map((folder) => `modules/${folder}`)\n      .map((file) => [\n        // define module components\n        ...getDirAlias(`${file}/components`),\n        // define module composables and utils\n        ...[\"composables\", \"utils\"]\n          .map((folder) => `${file}/${folder}`)\n          .map(getEntryAlias)\n          .filter<[string, string]>(\n            (item): item is [string, string] => item !== null\n          ),\n      ])\n      .flat(),\n  ]);\n\n  if (isDebug) console.log(\"Theme alias config:\", alias);\n\n  return alias;\n};\n"]}