{"version":3,"file":"setup.js","sources":["../../../src/client/composables/usePWAEvent.ts","../../../src/client/composables/useForceUpdate.ts","../../../src/client/composables/useRegister.ts","../../../src/client/composables/setup.ts","../../../../../node_modules/.pnpm/register-service-worker@1.7.2/node_modules/register-service-worker/index.js"],"sourcesContent":["import { inject } from \"vue\";\nimport type { Emitter } from \"mitt\";\nimport type { InjectionKey } from \"vue\";\n\nexport type PWAEvent = Emitter<{\n  ready: ServiceWorkerRegistration;\n  registered: ServiceWorkerRegistration;\n  cached: ServiceWorkerRegistration;\n  updatefound: ServiceWorkerRegistration;\n  updated: ServiceWorkerRegistration;\n  offline: void;\n  error: Error;\n}>;\n\nexport const pwaEventSymbol: InjectionKey<PWAEvent> = Symbol.for(\"PWAEvent\");\n\nexport const usePWAEvent = (): PWAEvent => {\n  const pwaEvent = inject(pwaEventSymbol);\n\n  if (!pwaEvent) throw new Error(\"usePWAEvent() is called without provider.\");\n\n  return pwaEvent;\n};\n","import type { PWAEvent } from \"./usePWAEvent.js\";\n\nexport const useForceUpdate = (event: PWAEvent): void => {\n  event.on(\"updatefound\", () => {\n    void navigator.serviceWorker.getRegistration().then((registration) => {\n      // check whether a valid service worker is active\n      if (registration && registration.active)\n        // force refresh\n\n        // @ts-ignore\n        window.location.reload(true);\n    });\n  });\n};\n","import { withBase } from \"@vuepress/client\";\n\nimport type { PWAEvent } from \"./usePWAEvent.js\";\n\ndeclare const SW_PATH: string;\n\nexport const useRegister = async (event: PWAEvent): Promise<void> => {\n  const { register } = await import(\"register-service-worker\");\n\n  // Register service worker\n  register(withBase(SW_PATH), {\n    ready(registration) {\n      console.log(\"[PWA]: Service worker is active\");\n      event.emit(\"ready\", registration);\n    },\n\n    registered(registration) {\n      console.log(\"[PWA]: Service worker has been registered.\");\n      event.emit(\"registered\", registration);\n    },\n\n    cached(registration) {\n      console.log(\"[PWA]: Content has been cached for offline usage\");\n      event.emit(\"cached\", registration);\n    },\n\n    async updatefound(registration) {\n      if (await navigator.serviceWorker.getRegistration()) {\n        console.log(\"[PWA]: New content is downloading.\");\n        event.emit(\"updatefound\", registration);\n      }\n    },\n\n    updated(registration) {\n      console.log(\"[PWA]: New content is available, please refresh.\");\n\n      const key = \"service-worker-version\";\n      const version = Number(localStorage.getItem(key) || 0);\n\n      localStorage.setItem(key, (version + 1).toString());\n      localStorage.removeItem(\"manifest\");\n\n      event.emit(\"updated\", registration);\n    },\n\n    offline() {\n      console.log(\n        \"[PWA]: No internet connection found. App is running in offline mode.\"\n      );\n      event.emit(\"offline\");\n    },\n\n    error(err) {\n      console.log(\"[PWA]: Error during service worker registration:\", err);\n      event.emit(\"error\", err);\n    },\n  });\n};\n","import mitt from \"mitt\";\nimport { onMounted, provide } from \"vue\";\nimport { pwaEventSymbol } from \"./usePWAEvent.js\";\nimport { useForceUpdate } from \"./useForceUpdate.js\";\nimport { useRegister } from \"./useRegister.js\";\nimport type { PWAEvent } from \"./index.js\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare const __VUEPRESS_DEV__: boolean;\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare const __VUEPRESS_SSR__: boolean;\ndeclare const SW_FORCE_UPDATE: boolean;\n\nexport const setupPWA = (): void => {\n  if (__VUEPRESS_SSR__) return;\n\n  // create event emitter and provide it\n  const event: PWAEvent = mitt();\n\n  provide(pwaEventSymbol, event);\n\n  onMounted(async () => {\n    if (__VUEPRESS_DEV__) return;\n\n    let refreshing = false;\n\n    // only listen controllerchange event when a serviceWorker is active\n    if (navigator.serviceWorker?.controller)\n      navigator.serviceWorker.addEventListener(\"controllerchange\", () => {\n        if (refreshing) return;\n\n        refreshing = true;\n        window.location.reload();\n      });\n\n    if (SW_FORCE_UPDATE) useForceUpdate(event);\n\n    await useRegister(event);\n  });\n};\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    }).catch(function (error) { return handleError(emit, error); })\n  }\n}\n"],"names":["pwaEventSymbol","useForceUpdate","event","registration","useRegister","register","index","withBase","key","version","err","setupPWA","mitt","provide","onMounted","_a","refreshing","isLocalhost","waitWindowLoad","resolve","cb","swUrl","hooks","registrationOptions","emit","hook","args","len","checkValidServiceWorker","error","handleError","registerValidSW","installingWorker","response","unregister"],"mappings":"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"}