{"version":3,"file":"VideoPlayer.js","sources":["../../../src/client/composables/size.ts","../../../src/client/components/VideoPlayer.ts"],"sourcesContent":["import { useEventListener } from \"@vueuse/core\";\nimport { computed, onMounted, isRef, ref, unref, watch } from \"vue\";\nimport type { MaybeRef } from \"@vueuse/core\";\nimport type { Ref } from \"vue\";\n\nconst getValue = (value: string | number): string =>\n  typeof value === \"string\" ? value : `${value}px`;\n\nexport interface SizeOptions {\n  width: string | number | undefined;\n  height: string | number | undefined;\n  ratio: number | undefined;\n}\n\nexport interface SizeInfo<E extends HTMLElement> {\n  el: Ref<E | undefined>;\n  width: Ref<string>;\n  height: Ref<string>;\n}\n\nexport const useSize = <E extends HTMLElement>(\n  options: SizeOptions,\n  extraHeight: MaybeRef<number> = 0\n): SizeInfo<E> => {\n  const el = ref<E>();\n  const width = computed(() => getValue(unref(options.width) || \"100%\"));\n  const height = ref(\"auto\");\n\n  const getHeight = (width: number): string => {\n    const height = unref(options.height);\n    const ratio = unref(options.ratio) || 16 / 9;\n\n    return height\n      ? getValue(height)\n      : `${Number(width) / ratio + unref(extraHeight)}px`;\n  };\n\n  const updateHeight = (): void => {\n    height.value = getHeight(el.value!.clientWidth);\n  };\n\n  onMounted(() => {\n    updateHeight();\n    if (isRef(extraHeight)) watch(extraHeight, () => updateHeight());\n    useEventListener(\"orientationchange\", () => updateHeight());\n    useEventListener(\"resize\", () => updateHeight());\n  });\n\n  return {\n    el,\n    width,\n    height,\n  };\n};\n","/* eslint-disable vue/no-unused-properties */\nimport { defineComponent, h } from \"vue\";\nimport { useSize } from \"../composables/index.js\";\n\nimport type { UseMediaTextTrackSource } from \"@vueuse/core\";\nimport type { PropType, VNode } from \"vue\";\n\nimport \"../styles/video-player.scss\";\n\nexport default defineComponent({\n  name: \"VideoPlayer\",\n\n  props: {\n    /**\n     * Video source\n     *\n     * 视频源\n     */\n    src: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * Video title\n     *\n     * 视频标题\n     */\n    title: {\n      type: String,\n      default: \"A video\",\n    },\n\n    /**\n     * Video file type\n     *\n     * 视频文件类型\n     */\n    type: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Component width\n     *\n     * 组件宽度\n     */\n    width: {\n      type: [String, Number],\n      default: \"100%\",\n    },\n\n    /**\n     * Component height\n     *\n     * 组件高度\n     */\n    height: {\n      type: [String, Number],\n      default: undefined,\n    },\n\n    /**\n     * Component width / height ratio\n     *\n     * 组件长宽比\n     */\n    ratio: {\n      type: Number,\n      default: 16 / 9,\n    },\n\n    /**\n     * Video poster\n     *\n     * 视频海报\n     */\n    poster: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Video tracks\n     *\n     * 视频字幕\n     */\n    tracks: {\n      type: Array as PropType<UseMediaTextTrackSource[]>,\n      default: (): UseMediaTextTrackSource[] => [],\n    },\n\n    /**\n     * Whether to loop the video\n     *\n     * 是否循环播放\n     */\n    loop: Boolean,\n  },\n\n  setup(props) {\n    const { el, width, height } = useSize<HTMLDivElement>(props);\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          class: \"video-wrapper\",\n          ref: el,\n          style: {\n            width: width.value,\n            height: height.value,\n          },\n        },\n        [\n          h(\"a\", { class: \"sr-only\", href: props.src }, props.title),\n          h(\n            \"video\",\n            {\n              title: props.title,\n              crossorigin: \"anonymous\",\n              poster: props.poster,\n              controls: \"\",\n              ...(props.loop ? { loop: \"\" } : {}),\n            },\n            [\n              ...props.tracks.map((track) => h(\"track\", track)),\n              h(\"source\", { src: props.src, type: props.type }),\n            ]\n          ),\n        ]\n      );\n  },\n});\n"],"names":["getValue","value","useSize","options","extraHeight","el","ref","width","computed","unref","height","getHeight","ratio","updateHeight","onMounted","isRef","watch","useEventListener","VideoPlayer","defineComponent","props","h","track"],"mappings":"wMAKA,MAAMA,EAAYC,GAChB,OAAOA,GAAU,SAAWA,EAAQ,GAAGA,MAc5BC,EAAU,CACrBC,EACAC,EAAgC,IAChB,CAChB,MAAMC,EAAKC,IACLC,EAAQC,EAAS,IAAMR,EAASS,EAAMN,EAAQ,KAAK,GAAK,MAAM,CAAC,EAC/DO,EAASJ,EAAI,MAAM,EAEnBK,EAAaJ,GAA0B,CAC3C,MAAMG,EAASD,EAAMN,EAAQ,MAAM,EAC7BS,EAAQH,EAAMN,EAAQ,KAAK,GAAK,GAAK,EAE3C,OAAOO,EACHV,EAASU,CAAM,EACf,GAAG,OAAOH,CAAK,EAAIK,EAAQH,EAAML,CAAW,KAClD,EAEMS,EAAe,IAAY,CAC/BH,EAAO,MAAQC,EAAUN,EAAG,MAAO,WAAW,CAChD,EAEA,OAAAS,EAAU,IAAM,CACdD,IACIE,EAAMX,CAAW,GAAGY,EAAMZ,EAAa,IAAMS,EAAc,CAAA,EAC/DI,EAAiB,oBAAqB,IAAMJ,EAAc,CAAA,EAC1DI,EAAiB,SAAU,IAAMJ,EAAc,CAAA,CACjD,CAAC,EAEM,CACL,GAAAR,EACA,MAAAE,EACA,OAAAG,CACF,CACF,EC5CA,IAAAQ,EAAeC,EAAgB,CAC7B,KAAM,cAEN,MAAO,CAML,IAAK,CACH,KAAM,OACN,SAAU,EACZ,EAOA,MAAO,CACL,KAAM,OACN,QAAS,SACX,EAOA,KAAM,CACJ,KAAM,OACN,QAAS,EACX,EAOA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,QAAS,MACX,EAOA,OAAQ,CACN,KAAM,CAAC,OAAQ,MAAM,EACrB,QAAS,MACX,EAOA,MAAO,CACL,KAAM,OACN,QAAS,GAAK,CAChB,EAOA,OAAQ,CACN,KAAM,OACN,QAAS,EACX,EAOA,OAAQ,CACN,KAAM,MACN,QAAS,IAAiC,CAAA,CAC5C,EAOA,KAAM,OACR,EAEA,MAAMC,EAAO,CACX,KAAM,CAAE,GAAAf,EAAI,MAAAE,EAAO,OAAAG,CAAO,EAAIR,EAAwBkB,CAAK,EAE3D,MAAO,IACLC,EACE,MACA,CACE,MAAO,gBACP,IAAKhB,EACL,MAAO,CACL,MAAOE,EAAM,MACb,OAAQG,EAAO,KACjB,CACF,EACA,CACEW,EAAE,IAAK,CAAE,MAAO,UAAW,KAAMD,EAAM,GAAI,EAAGA,EAAM,KAAK,EACzDC,EACE,QACA,CACE,MAAOD,EAAM,MACb,YAAa,YACb,OAAQA,EAAM,OACd,SAAU,GACV,GAAIA,EAAM,KAAO,CAAE,KAAM,EAAG,EAAI,CAClC,CAAA,EACA,CACE,GAAGA,EAAM,OAAO,IAAKE,GAAUD,EAAE,QAASC,CAAK,CAAC,EAChDD,EAAE,SAAU,CAAE,IAAKD,EAAM,IAAK,KAAMA,EAAM,IAAK,CAAC,CAClD,CACF,CACF,CACF,CACJ,CACF,CAAC"}