import * as vue from 'vue';
import { PropType, VNode } from 'vue';

interface NoticeLocaleOptions {
    /**
     * Notice title
     *
     * 通知标题
     */
    title: string;
    /**
     * Notice content
     *
     * 通知内容
     */
    content: string;
    /**
     * Notice footer
     *
     * 通知操作
     */
    actions: {
        /**
         * Action text
         *
         * 操作文字
         */
        text: string;
        /**
         * Action link
         *
         * 操作链接
         */
        link?: string;
        /**
         * Action type
         *
         * 操作类型
         *
         * @default 'default
         */
        type?: "primary" | "default";
    }[];
}

declare const _default: vue.DefineComponent<{
    /**
     * Notice locales settings
     *
     * 通知的多语言设置
     */
    locales: {
        type: PropType<Record<string, NoticeLocaleOptions>>;
        required: true;
    };
    /**
     * Notice key
     *
     * 通知 key
     */
    noticeKey: {
        type: StringConstructor;
        default: string;
    };
    /**
     * Whether show notice only showOnce
     *
     * 是否仅展示一次通知
     */
    showOnce: BooleanConstructor;
    /**
     * Whether the notice shall be confirmed
     *
     * 通知是否需要确认
     */
    confirm: BooleanConstructor;
    /**
     * Whether display notice fullscreen
     *
     * 是否全屏显示通知
     */
    fullscreen: BooleanConstructor;
}, () => VNode, unknown, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<vue.ExtractPropTypes<{
    /**
     * Notice locales settings
     *
     * 通知的多语言设置
     */
    locales: {
        type: PropType<Record<string, NoticeLocaleOptions>>;
        required: true;
    };
    /**
     * Notice key
     *
     * 通知 key
     */
    noticeKey: {
        type: StringConstructor;
        default: string;
    };
    /**
     * Whether show notice only showOnce
     *
     * 是否仅展示一次通知
     */
    showOnce: BooleanConstructor;
    /**
     * Whether the notice shall be confirmed
     *
     * 通知是否需要确认
     */
    confirm: BooleanConstructor;
    /**
     * Whether display notice fullscreen
     *
     * 是否全屏显示通知
     */
    fullscreen: BooleanConstructor;
}>>, {
    noticeKey: string;
    showOnce: boolean;
    confirm: boolean;
    fullscreen: boolean;
}>;

export { _default as default };
