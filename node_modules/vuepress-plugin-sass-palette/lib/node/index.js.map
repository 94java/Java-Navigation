{"version":3,"file":"index.js","sources":["../../src/node/inject.ts","../../src/node/utils.ts","../../src/node/prepare.ts","../../src/node/plugin.ts","../../src/node/use.ts"],"sourcesContent":["import { mergeViteConfig } from \"vuepress-shared/node\";\n\nimport type { App } from \"@vuepress/core\";\nimport type { ViteBundlerOptions } from \"@vuepress/bundler-vite\";\nimport type {\n  LoaderOptions,\n  WebpackBundlerOptions,\n} from \"@vuepress/bundler-webpack\";\n\ntype LoaderContext = Exclude<\n  LoaderOptions[\"additionalData\"],\n  string | undefined\n> extends (content: string, loaderContext: infer T) => string\n  ? T\n  : never;\n\n/**\n * Use 'additionalData' to make `${id}-config` available in scss\n *\n * @param config VuePress Bundler config\n * @param app VuePress Node App\n * @param id Module id\n */\nexport const injectConfigModule = (\n  config: unknown,\n  app: App,\n  id: string\n): void => {\n  const { bundler } = app.options;\n\n  // for vite\n  if (bundler.name.endsWith(\"vite\")) {\n    const viteBundlerConfig = <ViteBundlerOptions>config;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const originalAdditionalData:\n      | string\n      | ((source: string, file: string) => string | Promise<string>)\n      | undefined =\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      viteBundlerConfig.viteOptions?.css?.preprocessorOptions?.[\"scss\"]\n        .additionalData;\n\n    // eslint-disable-next-line\n    viteBundlerConfig.viteOptions = mergeViteConfig(\n      viteBundlerConfig.viteOptions || {},\n      {\n        css: {\n          preprocessorOptions: {\n            scss: {\n              charset: false,\n              additionalData: async (\n                source: string,\n                file: string\n              ): Promise<string> => {\n                const originalContent =\n                  typeof originalAdditionalData === \"string\"\n                    ? `${originalAdditionalData}${source}`\n                    : typeof originalAdditionalData === \"function\"\n                    ? await originalAdditionalData(source, file)\n                    : source;\n\n                return originalContent.match(\n                  new RegExp(`@use\\\\s+[\"']@sass-palette\\\\/${id}-config[\"'];`)\n                )\n                  ? originalContent\n                  : `@use \"@sass-palette/${id}-config\";\\n${originalContent}`;\n              },\n            },\n          },\n        },\n      }\n    );\n  }\n\n  // for webpack\n  if (bundler.name.endsWith(\"webpack\")) {\n    const webpackBundlerConfig = <WebpackBundlerOptions>config;\n\n    if (!webpackBundlerConfig.scss) webpackBundlerConfig.scss = {};\n\n    const { additionalData } = webpackBundlerConfig.scss;\n\n    const additionalDataHandler = (\n      content: string,\n      loaderContext: LoaderContext\n    ): string => {\n      const originalContent =\n        typeof additionalData === \"string\"\n          ? `${additionalData}${content}`\n          : typeof additionalData === \"function\"\n          ? additionalData(content, loaderContext)\n          : content;\n\n      return originalContent.match(\n        new RegExp(`@use\\\\s+[\"']@sass-palette\\\\/${id}-config[\"'];`)\n      )\n        ? originalContent\n        : `@use \"@sass-palette/${id}-config\";\\n${originalContent}`;\n    };\n\n    webpackBundlerConfig.scss.additionalData = additionalDataHandler;\n  }\n};\n","import { Logger } from \"vuepress-shared/node\";\nimport { fs, getDirname, path } from \"@vuepress/utils\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const emptyFile = path.resolve(__dirname, \"../../styles/empty.scss\");\n\nexport const logger = new Logger(\"vuepress-plugin-sass-palette\");\n\nexport const getPath = (path: string): string =>\n  fs.pathExistsSync(path) ? path : emptyFile;\n","import { getPath } from \"./utils.js\";\n\nimport type { App } from \"@vuepress/core\";\n\nexport const prepareConfigFile = (app: App, id: string): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/load-${id}.js`,\n    `\\\nimport \"@sass-palette/${id}-inject\";\nexport default {};\n`\n  );\n\nexport const prepareInjectSass = (app: App, id: string): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-inject.scss`,\n    `\\\n@use \"sass:color\";\n@use \"sass:list\";\n@use \"sass:math\";\n@use \"sass:map\";\n@use \"sass:meta\";\n\n@use \"@sass-palette/helper\";\n@use \"@sass-palette/${id}-palette\";\n\n$variables: meta.module-variables(\"${id}-palette\");\n${\n  app.env.isDebug\n    ? `\n@debug \"${id} palette variables: #{meta.inspect($variables)}\";\n@debug \"${id} config variables: #{meta.inspect(meta.module-variables(\"${id}-config\"))}\";\n`\n    : \"\"\n}\n\n@each $name, $value in $variables {\n  $key: helper.camel-to-kebab($name);\n\n  @if meta.type-of($value) == number or meta.type-of($value) == string {\n    :root {\n      #{$key}: #{$value};\n    }\n  } @else if helper.color-is-legal($value) {\n    @if meta.global-variable-exists(\"dark-selector\", $module: \"${id}-config\") {\n      @include helper.inject-color($key, $value, $dark-selector: ${id}-config.$dark-selector);\n    } @else {\n      @include helper.inject-color($key, $value);\n    }\n  }\n}\n`\n  );\n\nexport interface PrepareConfigOptions {\n  id: string;\n  defaultConfig: string;\n  defaultPalette: string;\n  generator: string;\n  userConfig: string;\n  userPalette: string;\n}\n\nexport const prepareConfigSass = (\n  app: App,\n  {\n    id,\n    defaultConfig,\n    defaultPalette,\n    generator,\n    userConfig,\n    userPalette,\n  }: PrepareConfigOptions\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-config.scss`,\n    `\\\n@import \"file:///${getPath(defaultPalette)}\";\n@import \"file:///${getPath(defaultConfig)}\";\n@import \"file:///${getPath(userPalette)}\";\n@import \"file:///${getPath(userConfig)}\";\n@import \"file:///${getPath(generator)}\";\n`\n  );\n\nexport interface PreparePaletteOptions {\n  id: string;\n  defaultPalette: string;\n  generator: string;\n  userPalette: string;\n}\n\nexport const preparePaletteSass = (\n  app: App,\n  { id, defaultPalette, generator, userPalette }: PreparePaletteOptions\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-palette.scss`,\n    `\\\n@import \"file:///${getPath(defaultPalette)}\";\n@import \"file:///${getPath(userPalette)}\";\n@import \"file:///${getPath(generator)}\";\n`\n  );\n\nexport interface PrepareStyleOptions {\n  id: string;\n  userStyle: string | null;\n}\n\nexport const prepareStyleSass = (\n  app: App,\n  { id, userStyle }: PrepareStyleOptions\n): Promise<string | null> =>\n  userStyle\n    ? app.writeTemp(\n        `sass-palette/${id}-style.scss`,\n        `\\\n@forward \"file:///${getPath(userStyle)}\";\n`\n      )\n    : Promise.resolve(null);\n","import { getDirname, path } from \"@vuepress/utils\";\nimport { watch } from \"chokidar\";\n\nimport { injectConfigModule } from \"./inject.js\";\nimport {\n  prepareConfigFile,\n  prepareInjectSass,\n  prepareConfigSass,\n  preparePaletteSass,\n  prepareStyleSass,\n} from \"./prepare.js\";\nimport { logger } from \"./utils.js\";\n\nimport type { PluginFunction } from \"@vuepress/core\";\nimport type { SassPaletteOptions } from \"./options.js\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const sassPalettePlugin =\n  (options: SassPaletteOptions): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info(`Options: ${options.toString()}`);\n\n    const {\n      id = \"hope\",\n      config = `.vuepress/styles/${id}-config.scss`,\n      defaultConfig = path.resolve(\n        __dirname,\n        \"../../styles/default/config.scss\"\n      ),\n      palette = `.vuepress/styles/${id}-palette.scss`,\n      defaultPalette = path.resolve(\n        __dirname,\n        \"../../styles/default/palette.scss\"\n      ),\n      generator = path.resolve(__dirname, \"../../styles/empty.scss\"),\n      style = \"\",\n    } = options;\n\n    const userConfig = app.dir.source(config);\n    const userPalette = app.dir.source(palette);\n    const userStyle = style ? app.dir.source(style) : null;\n\n    return {\n      name: `vuepress-plugin-sass-palette`,\n\n      multiple: true,\n\n      id,\n\n      alias: {\n        [`@sass-palette/helper`]: path.resolve(\n          __dirname,\n          \"../../styles/helper.scss\"\n        ),\n        [`@sass-palette/${id}-config`]: app.dir.temp(\n          `sass-palette/${id}-config.scss`\n        ),\n        [`@sass-palette/${id}-inject`]: app.dir.temp(\n          `sass-palette/${id}-inject.scss`\n        ),\n        [`@sass-palette/${id}-palette`]: app.dir.temp(\n          `sass-palette/${id}-palette.scss`\n        ),\n        ...(style\n          ? {\n              [`@sass-palette/${id}-style`]: app.dir.temp(\n                `sass-palette/${id}-style.scss`\n              ),\n            }\n          : {}),\n      },\n\n      extendsBundlerOptions: (config: unknown, app): void => {\n        injectConfigModule(config, app, id);\n      },\n\n      onInitialized: (): Promise<void> => {\n        return Promise.all([\n          prepareInjectSass(app, id),\n\n          prepareConfigSass(app, {\n            id,\n            defaultConfig,\n            defaultPalette,\n            generator,\n            userConfig,\n            userPalette,\n          }),\n\n          preparePaletteSass(app, {\n            id,\n            defaultPalette,\n            generator,\n            userPalette,\n          }),\n\n          prepareStyleSass(app, { id, userStyle }),\n        ]).then(() => {\n          if (app.env.isDebug) logger.info(`Style file for ${id} generated`);\n        });\n      },\n\n      onWatched: (app, watchers): void => {\n        const configWatcher = watch(userConfig, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        });\n\n        const updateConfig = (): Promise<void> =>\n          prepareConfigSass(app, {\n            id,\n            defaultConfig,\n            defaultPalette,\n            generator,\n            userConfig,\n            userPalette,\n          }).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n          });\n\n        configWatcher.on(\"add\", () => {\n          void updateConfig();\n        });\n        configWatcher.on(\"unlink\", () => {\n          void updateConfig();\n        });\n\n        watchers.push(configWatcher);\n\n        const paletteWatcher = watch(userPalette, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        });\n\n        const updatePalette = (): Promise<void> =>\n          Promise.all([\n            prepareConfigSass(app, {\n              id,\n              defaultConfig,\n              defaultPalette,\n              generator,\n              userConfig,\n              userPalette,\n            }),\n\n            preparePaletteSass(app, {\n              id,\n              defaultPalette,\n              generator,\n              userPalette,\n            }),\n          ]).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n          });\n\n        paletteWatcher.on(\"add\", () => {\n          void updatePalette();\n        });\n        paletteWatcher.on(\"unlink\", () => {\n          void updatePalette();\n        });\n\n        watchers.push(paletteWatcher);\n\n        if (userStyle) {\n          const styleWatcher = watch(userStyle, {\n            cwd: app.dir.source(),\n            ignoreInitial: true,\n          });\n\n          const updateStyle = (): Promise<void> =>\n            prepareStyleSass(app, { id, userStyle }).then(() => {\n              if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n            });\n\n          styleWatcher.on(\"add\", () => {\n            void updateStyle();\n          });\n          styleWatcher.on(\"unlink\", () => {\n            void updateStyle();\n          });\n          watchers.push(styleWatcher);\n        }\n      },\n\n      clientConfigFile: (app) => prepareConfigFile(app, id),\n    };\n  };\n","import { sassPalettePlugin } from \"./plugin.js\";\n\nimport type { App, PluginObject } from \"@vuepress/core\";\nimport type { SassPaletteOptions } from \"./options.js\";\n\nexport const useSassPalettePlugin = (\n  app: App,\n  options: SassPaletteOptions\n): void => {\n  const plugins = app.pluginApi.plugins;\n\n  if (\n    plugins\n      .filter<PluginObject & { id: string }>(\n        (plugin): plugin is PluginObject & { id: string } =>\n          plugin.name === `vuepress-plugin-sass-palette`\n      )\n      .every((plugin) => plugin.id !== options.id)\n  )\n    app.use(sassPalettePlugin(options));\n};\n\nexport const removePalettePlugin = (app: App, id: string): void => {\n  const plugins = app.pluginApi.plugins;\n\n  const index = plugins\n    .filter<PluginObject & { id: string }>(\n      (plugin): plugin is PluginObject & { id: string } =>\n        plugin.name === `vuepress-plugin-sass-palette`\n    )\n    .findIndex((plugin) => plugin.id === id);\n\n  if (index !== -1) app.pluginApi.plugins.splice(index, 1);\n};\n"],"names":["injectConfigModule","config","app","id","_a","_b","_c","bundler","viteBundlerConfig","originalAdditionalData","mergeViteConfig","source","file","originalContent","webpackBundlerConfig","additionalData","additionalDataHandler","content","loaderContext","__dirname","getDirname","emptyFile","path","logger","Logger","getPath","fs","prepareConfigFile","prepareInjectSass","prepareConfigSass","defaultConfig","defaultPalette","generator","userConfig","userPalette","preparePaletteSass","prepareStyleSass","userStyle","sassPalettePlugin","options","palette","style","watchers","configWatcher","watch","updateConfig","paletteWatcher","updatePalette","styleWatcher","updateStyle","useSassPalettePlugin","plugin","removePalettePlugin","index"],"mappings":"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"}