{"version":3,"file":"index.js","sources":["../../src/node/locales.ts","../../src/node/readingTime.ts","../../src/node/utils.ts","../../src/node/plugin.ts","../../src/node/use.ts"],"sourcesContent":["import type { ReadingTimeLocaleConfig } from \"./typings/index.js\";\n\n/**\n * Default locale config for `vuepress-plugin-reading-time2` plugin\n */\nexport const readingTimeLocales: ReadingTimeLocaleConfig = {\n  \"/en/\": {\n    word: \"About $word words\",\n    less1Minute: \"Less than 1 minute\",\n    time: \"About $time min\",\n  },\n\n  \"/zh/\": {\n    word: \"约 $word 字\",\n    less1Minute: \"小于 1 分钟\",\n    time: \"大约 $time 分钟\",\n  },\n\n  \"/zh-tw/\": {\n    word: \"約 $word 字\",\n    less1Minute: \"小於 1 分鐘\",\n    time: \"大约 $time 分鐘\",\n  },\n\n  \"/de-at/\": {\n    word: \"Um die $word Wörter\",\n    less1Minute: \"Weniger als eine Minute\",\n    time: \"Ungefähr $time min\",\n  },\n\n  \"/vi/\": {\n    word: \"Khoảng $word từ\",\n    less1Minute: \"Ít hơn 1 phút\",\n    time: \"Khoảng $time phút\",\n  },\n\n  \"/uk/\": {\n    word: \"Про $word слова\",\n    less1Minute: \"Менше 1 хвилини\",\n    time: \"Приблизно $time хв\",\n  },\n\n  \"/ru/\": {\n    word: \"Около $word слов\",\n    less1Minute: \"Меньше 1 минуты\",\n    time: \"Около $time мин\",\n  },\n\n  \"/br/\": {\n    word: \"Por volta de $word palavras\",\n    less1Minute: \"Menos de 1 minuto\",\n    time: \"Por volta de $time min\",\n  },\n\n  \"/pl/\": {\n    word: \"Około $word słów\",\n    less1Minute: \"Mniej niż 1 minuta\",\n    time: \"Około $time minut\",\n  },\n\n  \"/sk/\": {\n    word: \"Okolo $word slov\",\n    less1Minute: \"Menej ako 1 minúta\",\n    time: \"Okolo $time minút\",\n  },\n\n  \"/fr/\": {\n    word: \"Environ $word mots\",\n    less1Minute: \"Moins de 1 minute\",\n    time: \"Environ $time min\",\n  },\n\n  \"/es/\": {\n    word: \"Alrededor de $word palabras\",\n    less1Minute: \"Menos de 1 minuto\",\n    time: \"Alrededor de $time min\",\n  },\n\n  \"/ja/\": {\n    word: \"$word字程度\",\n    less1Minute: \"1分以内\",\n    time: \"約$time分\",\n  },\n\n  \"/tr/\": {\n    word: \"Yaklaşık $word kelime\",\n    less1Minute: \"1 dakikadan az\",\n    time: \"Yaklaşık $time dakika\",\n  },\n\n  \"/ko/\": {\n    word: \"약 $word 단어\",\n    less1Minute: \"1분 미만\",\n    time: \"약 $time 분\",\n  },\n};\n","import type { ReadingTime } from \"./typings/index.js\";\n\n/**\n * Extract Latin words from content\n */\nexport const getWords = (content: string): RegExpMatchArray | null =>\n  // \\u00C0-\\u024F are Latin Supplement letters, maybe used in language like french\n  // \\u0400-\\u04FF are Cyrillic letters, used in russian\n  content.match(/[\\w\\d\\s,.\\u00C0-\\u024F\\u0400-\\u04FF]+/giu);\n\n/**\n * Extract Chinese Characters from content\n */\nexport const getChinese = (content: string): RegExpMatchArray | null =>\n  content.match(/[\\u4E00-\\u9FD5]/gu);\n\n/**\n * Get word number of given string\n */\nexport const getWordNumber = (content: string): number =>\n  (getWords(content)?.reduce<number>(\n    (accumulator, word) =>\n      accumulator + (word.trim() === \"\" ? 0 : word.trim().split(/\\s+/u).length),\n    0\n  ) || 0) + (getChinese(content)?.length || 0);\n\n/**\n * Get reading time info\n */\nexport const getReadingTime = (\n  content: string,\n  wordsPerMinute = 300\n): ReadingTime => {\n  const words = getWordNumber(content || \"\");\n\n  return {\n    minutes: Math.round((words / wordsPerMinute) * 100) / 100,\n    words,\n  };\n};\n","import { Logger } from \"vuepress-shared/node\";\n\nexport const logger = new Logger(\"vuepress-plugin-reading-time2\");\n","import { getLocales } from \"vuepress-shared/node\";\n\nimport { readingTimeLocales } from \"./locales.js\";\nimport { getReadingTime } from \"./readingTime.js\";\nimport { logger } from \"./utils.js\";\n\nimport type { Page, PluginFunction } from \"@vuepress/core\";\nimport type { ReadingTimeOptions } from \"./options.js\";\nimport type { ReadingTime } from \"./typings/index.js\";\n\n/** Reading time plugin */\nexport const readingTimePlugin =\n  (options: ReadingTimeOptions): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info(`Options: ${options.toString()}`);\n\n    return {\n      name: \"vuepress-plugin-reading-time2\",\n\n      define: (app): Record<string, unknown> => ({\n        READING_TIME_LOCALES: getLocales({\n          app,\n          name: \"reading-time\",\n          default: readingTimeLocales,\n          config: options.locales,\n        }),\n      }),\n\n      extendsPage: (page: Page<{ readingTime?: ReadingTime }>): void => {\n        page.data.readingTime = getReadingTime(\n          page.content,\n          options.wordPerMinute || 300\n        );\n      },\n    };\n  };\n","import { readingTimePlugin } from \"./plugin.js\";\nimport type { App } from \"@vuepress/core\";\nimport type { ReadingTimeOptions } from \"./options.js\";\n\n/**\n * Composition Api to use `vuepress-plugin-reading-time2`\n *\n * @description Should be invoke on node site\n */\nexport const useReadingTimePlugin = (\n  app: App,\n  options: ReadingTimeOptions\n): void => {\n  const plugins = app.pluginApi.plugins;\n\n  if (\n    plugins.every((plugin) => plugin.name !== \"vuepress-plugin-reading-time2\")\n  )\n    app.use(readingTimePlugin(options));\n};\n\n/**\n * Composition Api to remove `vuepress-plugin-reading-time2`\n *\n * @description Should be invoke on node site\n */\nexport const removeReadingTimePlugin = (app: App): void => {\n  const plugins = app.pluginApi.plugins;\n\n  const index = plugins.findIndex(\n    (plugin) => plugin.name === \"vuepress-plugin-reading-time2\"\n  );\n\n  if (index !== -1) app.pluginApi.plugins.splice(index, 1);\n};\n"],"names":["readingTimeLocales","getWords","content","getChinese","getWordNumber","_a","_b","accumulator","word","getReadingTime","wordsPerMinute","words","logger","Logger","readingTimePlugin","options","app","getLocales","page","useReadingTimePlugin","plugin","removeReadingTimePlugin","index"],"mappings":"8DAKO,MAAMA,EAA8C,CACzD,OAAQ,CACN,KAAM,oBACN,YAAa,qBACb,KAAM,iBACR,EAEA,OAAQ,CACN,KAAM,YACN,YAAa,UACb,KAAM,aACR,EAEA,UAAW,CACT,KAAM,YACN,YAAa,UACb,KAAM,aACR,EAEA,UAAW,CACT,KAAM,sBACN,YAAa,0BACb,KAAM,oBACR,EAEA,OAAQ,CACN,KAAM,kBACN,YAAa,gBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,kBACN,YAAa,kBACb,KAAM,oBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,kBACb,KAAM,iBACR,EAEA,OAAQ,CACN,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,qBACN,YAAa,oBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,EAEA,OAAQ,CACN,KAAM,WACN,YAAa,OACb,KAAM,SACR,EAEA,OAAQ,CACN,KAAM,wBACN,YAAa,iBACb,KAAM,uBACR,EAEA,OAAQ,CACN,KAAM,aACN,YAAa,QACb,KAAM,WACR,CACF,EC1FaC,EAAYC,GAGvBA,EAAQ,MAAM,0CAA0C,EAK7CC,EAAcD,GACzBA,EAAQ,MAAM,mBAAmB,EAKtBE,EAAiBF,GAAyB,CAnBvD,IAAAG,EAAAC,EAoBG,SAAAD,EAAAJ,EAASC,CAAO,IAAhB,KAAAG,OAAAA,EAAmB,OAClB,CAACE,EAAaC,IACZD,GAAeC,EAAK,KAAK,IAAM,GAAK,EAAIA,EAAK,OAAO,MAAM,MAAM,EAAE,QACpE,CAAA,IACG,MAAMF,EAAAH,EAAWD,CAAO,IAAlB,KAAAI,OAAAA,EAAqB,SAAU,EAK/B,EAAAG,EAAiB,CAC5BP,EACAQ,EAAiB,MACD,CAChB,MAAMC,EAAQP,EAAcF,GAAW,EAAE,EAEzC,MAAO,CACL,QAAS,KAAK,MAAOS,EAAQD,EAAkB,GAAG,EAAI,IACtD,MAAAC,CACF,CACF,ECrCaC,EAAS,IAAIC,EAAO,+BAA+B,ECSnDC,EACVC,GACAC,IACKA,EAAI,IAAI,SAASJ,EAAO,KAAK,YAAYG,EAAQ,SAAS,GAAG,EAE1D,CACL,KAAM,gCAEN,OAASC,IAAkC,CACzC,qBAAsBC,EAAW,CAC/B,IAAAD,EACA,KAAM,eACN,QAAShB,EACT,OAAQe,EAAQ,OAClB,CAAC,CACH,GAEA,YAAcG,GAAoD,CAChEA,EAAK,KAAK,YAAcT,EACtBS,EAAK,QACLH,EAAQ,eAAiB,GAC3B,CACF,CACF,GCzBSI,EAAuB,CAClCH,EACAD,IACS,CACOC,EAAI,UAAU,QAGpB,MAAOI,GAAWA,EAAO,OAAS,+BAA+B,GAEzEJ,EAAI,IAAIF,EAAkBC,CAAO,CAAC,CACtC,EAOaM,EAA2BL,GAAmB,CAGzD,MAAMM,EAFUN,EAAI,UAAU,QAER,UACnBI,GAAWA,EAAO,OAAS,+BAC9B,EAEIE,IAAU,IAAIN,EAAI,UAAU,QAAQ,OAAOM,EAAO,CAAC,CACzD"}